// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringService.vsl in andromda-spring-cartridge.
//
package es.pode.planificador.negocio.servicios;

/**
 * <p>
 * Servicio de auditoría. Nos permite registrar el resultado de las
 * ejecuciones de los trabajos y subtrabajos.
 * </p>
 */
public interface SrvRegistroPlanificadorService
{
  /**
   * <p>
   * Registro del como ha ido la ejecución de un trabajo.
   * </p>
      * @param trabajo  Datos del trabajo ejecutado.
      * @return java.lang.Long
   * @throws throws es.pode.planificador.negocio.servicios.RegistrarTrabajoException Exception
   */
    public java.lang.Long registrarTrabajo(es.pode.planificador.negocio.servicios.TareaEjecutadaVO trabajo)
        throws es.pode.planificador.negocio.servicios.RegistrarTrabajoException;

  /**
   * <p>
   * Nos permite registrar el resultado de la ejecucución de un
   * trabajo derivado (subtrabajo).
   * </p>
      * @param trabajoHijo  Datos del trabajo derivado ejecutado.
      * @return java.lang.Long
   * @throws throws es.pode.planificador.negocio.servicios.RegistrarTrabajoException Exception
   */
    public java.lang.Long registrarTrabajoHijo(es.pode.planificador.negocio.servicios.RegistroTareaEjecutadaVO trabajoHijo)
        throws es.pode.planificador.negocio.servicios.RegistrarTrabajoException;

  /**
   * <p>
   * Registro de la fecha de fin de ejecución de un trabajo.
   * </p>
      * @param trabajoEjecutado  Datos a actualizar del trabajo que ha finalizado su ejecución.
      * @return java.lang.Long
   */
    public java.lang.Long registrarTrabajoFechaFin(es.pode.planificador.negocio.servicios.TareaEjecutadaVO trabajoEjecutado);

  /**
   * <p>
   * Servicio para cambiar de estado a interrumpido las tareas no
   * finalizadas correctamente
   * </p>
   * @return java.lang.Long
   */
    public java.lang.Long registrarTrabajoInterrumpido();

}
