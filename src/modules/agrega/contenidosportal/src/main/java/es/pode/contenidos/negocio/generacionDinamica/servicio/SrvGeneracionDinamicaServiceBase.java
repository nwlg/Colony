// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.contenidos.negocio.generacionDinamica.servicio;

import net.sf.dozer.util.mapping.MapperIF;

/**
 * <p>
 * Spring Service base class for <code>es.pode.contenidos.negocio.generacionDinamica.servicio.SrvGeneracionDinamicaService</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.contenidos.negocio.generacionDinamica.servicio.SrvGeneracionDinamicaService
 */
public abstract class SrvGeneracionDinamicaServiceBase
    implements es.pode.contenidos.negocio.generacionDinamica.servicio.SrvGeneracionDinamicaService
{


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


	
			
    protected final es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService getSrvBuscadorService()
	        throws java.lang.Exception
	    {
	    	
            String srvBuscadorServiceFile="importedServices.properties";	    
	        java.io.InputStream srvBuscadorServiceInputStream=SrvGeneracionDinamicaServiceBase.class.getClassLoader().getResourceAsStream(srvBuscadorServiceFile);
	        java.util.Properties srvBuscadorServiceProperties = new java.util.Properties();
	        srvBuscadorServiceProperties.load(srvBuscadorServiceInputStream);
	        String srvBuscadorServiceEndPointAddress="";
	        srvBuscadorServiceEndPointAddress=(String) srvBuscadorServiceProperties.get("srvBuscadorServicePort");
            System.out.println("srvBuscadorServiceEndPointAddress del fichero --> " + srvBuscadorServiceEndPointAddress);
			es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceService srvBuscadorService = new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceServiceLocator();                                                                                                                                                                                                                                                    
            if (srvBuscadorServiceEndPointAddress.length()>0) 
				((es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceServiceLocator)srvBuscadorService).setSrvBuscadorServiceEndpointAddress(srvBuscadorServiceEndPointAddress);
	    	es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService port = srvBuscadorService.getSrvBuscadorService();	    
	        return port;
	        
	    }

    
    
    private es.pode.contenidos.negocio.generacionDinamica.dominio.ContenidoODEDao contenidoODEDao;

    /**
     * Sets the reference to <code>contenidoODE</code>'s DAO.
     */
    public void setContenidoODEDao(es.pode.contenidos.negocio.generacionDinamica.dominio.ContenidoODEDao contenidoODEDao)
    {
        this.contenidoODEDao = contenidoODEDao;
    }

    /**
     * Gets the reference to <code>contenidoODE</code>'s DAO.
     */
    protected es.pode.contenidos.negocio.generacionDinamica.dominio.ContenidoODEDao getContenidoODEDao()
    {
        return this.contenidoODEDao;
    }


    /**
     * @see es.pode.contenidos.negocio.generacionDinamica.servicio.SrvGeneracionDinamicaService#obtenODEDiario(java.util.Date)
     */
    public es.pode.contenidos.negocio.generacionDinamica.servicio.ContenidoODEVO obtenODEDiario(java.util.Date fecha)
    {
        if (fecha == null)
        {
            throw new IllegalArgumentException(
                "es.pode.contenidos.negocio.generacionDinamica.servicio.SrvGeneracionDinamicaService.obtenODEDiario(java.util.Date fecha) - 'fecha' can not be null");
        }
        try
        {
            return this.handleObtenODEDiario(fecha);
        }
        catch (Throwable th)
        {
            throw new es.pode.contenidos.negocio.generacionDinamica.servicio.SrvGeneracionDinamicaServiceException(
                "Error performing 'es.pode.contenidos.negocio.generacionDinamica.servicio.SrvGeneracionDinamicaService.obtenODEDiario(java.util.Date fecha)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenODEDiario(java.util.Date)}
      */
    protected abstract es.pode.contenidos.negocio.generacionDinamica.servicio.ContenidoODEVO handleObtenODEDiario(java.util.Date fecha)
        throws java.lang.Exception;

    /**
     * @see es.pode.contenidos.negocio.generacionDinamica.servicio.SrvGeneracionDinamicaService#generaODEDiario()
     */
    public void generaODEDiario()
    {
        try
        {
            this.handleGeneraODEDiario();
        }
        catch (Throwable th)
        {
            throw new es.pode.contenidos.negocio.generacionDinamica.servicio.SrvGeneracionDinamicaServiceException(
                "Error performing 'es.pode.contenidos.negocio.generacionDinamica.servicio.SrvGeneracionDinamicaService.generaODEDiario()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #generaODEDiario()}
      */
    protected abstract void handleGeneraODEDiario()
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.contenidos.negocio.PrincipalStore.get();
    }
}