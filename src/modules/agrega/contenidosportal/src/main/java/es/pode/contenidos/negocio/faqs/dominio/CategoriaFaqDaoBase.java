// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringHibernateDaoBase.vsl in andromda-spring-cartridge.
//
package es.pode.contenidos.negocio.faqs.dominio;

import net.sf.dozer.util.mapping.MapperIF;

/**
 * <p>
 * Base Spring DAO Class: is able to create, update, remove, load, and find
 * objects of type <code>es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq</code>.
 * </p>
 *
 * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq
 */
public abstract class CategoriaFaqDaoBase
    extends org.springframework.orm.hibernate3.support.HibernateDaoSupport
    implements es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao
{



	
	/**
	 * Constant that identifies a mapping between an 
	 * entity (CategoriaFaq) and a VO (CategoriaFaqVO)
	 */
	public final static String DEF_MAPPING_CATEGORIAFAQ_CATEGORIAFAQVO = "DEF_MAPPING_CATEGORIAFAQ_CATEGORIAFAQVO";
	
	/**
	 * Constant that identifies a mapping between a 
	 * VO (CategoriaFaqVO) and an entity (CategoriaFaq)
	 */
	public final static String DEF_MAPPING_CATEGORIAFAQVO_CATEGORIAFAQ = "DEF_MAPPING_CATEGORIAFAQ_CATEGORIAFAQVOPRIME";
	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#load(int, java.lang.Long)
     */
    public Object load(final int transform, final java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "CategoriaFaq.load - 'id' can not be null");
        }
        final java.util.List list = this.getHibernateTemplate().find(
            "from es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq as entity where entity.id = ?", id);
        final Object entity = list != null && !list.isEmpty() ? list.iterator().next() : null;
        return transformEntity(transform, (es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)entity);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#load(java.lang.Long)
     */
    public es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq load(java.lang.Long id)
    {
        return (es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)this.load(TRANSFORM_NONE, id);
    }
    
    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#loadAll()
     */
    public java.util.Collection loadAll()
    {
        return this.loadAll(TRANSFORM_NONE);
    }
    
    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#loadAll(int)
     */
    public java.util.Collection loadAll(final int transform)
    {
        final java.util.Collection results = this.getHibernateTemplate().loadAll(es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqImpl.class);
        this.transformEntities(transform, results);
        return results;
    }
    

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#create(es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)
     */
    public es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq create(es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq categoriaFaq)
    {
        return (es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)this.create(TRANSFORM_NONE, categoriaFaq);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#create(int transform, es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)
     */
    public Object create(final int transform, final es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq categoriaFaq)
    {
        if (categoriaFaq == null)
        {
            throw new IllegalArgumentException(
                "CategoriaFaq.create - 'categoriaFaq' can not be null");
        }
        Object identifier = this.getHibernateTemplate().save(categoriaFaq);
        categoriaFaq.setId((java.lang.Long)identifier);
        return this.transformEntity(transform, categoriaFaq);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#create(java.util.Collection)
     */
    public java.util.Collection create(final java.util.Collection entities)
    {
        return create(TRANSFORM_NONE, entities);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#create(int, java.util.Collection)
     */
    public java.util.Collection create(final int transform, final java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "CategoriaFaq.create - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate3.HibernateCallback()
            {
                public Object doInHibernate(org.hibernate.Session session)
                    throws org.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        create(transform, (es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
        return entities;
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#create(java.lang.String, java.util.Date, java.util.Date, java.util.Date)
     */
    public es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq create(
        java.lang.String nombre,
        java.util.Date fechaBaja,
        java.util.Date fechaModificacion,
        java.util.Date fechaAlta)
    {
        return (es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)this.create(TRANSFORM_NONE, nombre, fechaBaja, fechaModificacion, fechaAlta);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#create(int, java.lang.String, java.util.Date, java.util.Date, java.util.Date)
     */
    public Object create(
        final int transform,
        java.lang.String nombre,
        java.util.Date fechaBaja,
        java.util.Date fechaModificacion,
        java.util.Date fechaAlta)
    {
        es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq entity = new es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqImpl();
        entity.setNombre(nombre);
        entity.setFechaBaja(fechaBaja);
        entity.setFechaModificacion(fechaModificacion);
        entity.setFechaAlta(fechaAlta);
        return this.create(transform, entity);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#create(es.pode.contenidos.negocio.faqs.dominio.CategoriaIdiomaFaq, java.lang.String)
     */
    public es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq create(
        java.util.Collection categoriaIdioma,
        java.lang.String nombre)
    {
        return (es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)this.create(TRANSFORM_NONE, categoriaIdioma, nombre);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#create(int, es.pode.contenidos.negocio.faqs.dominio.CategoriaIdiomaFaq, java.lang.String)
     */
    public Object create(
        final int transform,
        java.util.Collection categoriaIdioma,
        java.lang.String nombre)
    {
        es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq entity = new es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqImpl();
        entity.setCategoriaIdioma(categoriaIdioma);
        entity.setNombre(nombre);
        return this.create(transform, entity);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#update(es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)
     */
    public void update(es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq categoriaFaq)
    {
        if (categoriaFaq == null)
        {
            throw new IllegalArgumentException(
                "CategoriaFaq.update - 'categoriaFaq' can not be null");
        }
        this.getHibernateTemplate().update(categoriaFaq);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#update(java.util.Collection)
     */
    public void update(final java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "CategoriaFaq.update - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate3.HibernateCallback()
            {
                public Object doInHibernate(org.hibernate.Session session)
                    throws org.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        update((es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#remove(es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)
     */
    public void remove(es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq categoriaFaq)
    {
        if (categoriaFaq == null)
        {
            throw new IllegalArgumentException(
                "CategoriaFaq.remove - 'categoriaFaq' can not be null");
        }
        this.getHibernateTemplate().delete(categoriaFaq);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#remove(java.lang.Long)
     */
    public void remove(java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "CategoriaFaq.remove - 'id' can not be null");
        }
        es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq entity = this.load(id);
        if (entity != null)
        {
            this.remove(entity);
        }
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#remove(java.util.Collection)
     */
    public void remove(java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "CategoriaFaq.remove - 'entities' can not be null");
        }
        this.getHibernateTemplate().deleteAll(entities);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenCategoriasFaqs(java.lang.String)
     */
    public java.util.List obtenCategoriasFaqs(java.lang.String nombre)
    {
        return this.obtenCategoriasFaqs(TRANSFORM_NONE, nombre);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenCategoriasFaqs(java.lang.String, java.lang.String)
     */
    public java.util.List obtenCategoriasFaqs(final java.lang.String queryString, final java.lang.String nombre)
    {
        return this.obtenCategoriasFaqs(TRANSFORM_NONE, queryString, nombre);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenCategoriasFaqs(int, java.lang.String)
     */
    public java.util.List obtenCategoriasFaqs(final int transform, final java.lang.String nombre)
    {
        return this.obtenCategoriasFaqs(transform, "from es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq cat where cat.categoriaIdioma.idioma= :nombre", nombre);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenCategoriasFaqs(int, java.lang.String, java.lang.String)
     */
    public java.util.List obtenCategoriasFaqs(final int transform, final java.lang.String queryString, final java.lang.String nombre)
    {
        try
        {
            org.hibernate.Query queryObject = super.getSession(false).createQuery(queryString);
			queryObject.setParameter("nombre", nombre);            	
            java.util.List results = queryObject.list();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenerCategoria(java.lang.Long)
     */
    public es.pode.contenidos.negocio.faqs.servicio.CategoriaFaqVO obtenerCategoria(java.lang.Long id)
    {
        return (es.pode.contenidos.negocio.faqs.servicio.CategoriaFaqVO)this.obtenerCategoria(TRANSFORM_NONE, id);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenerCategoria(java.lang.String, java.lang.Long)
     */
    public es.pode.contenidos.negocio.faqs.servicio.CategoriaFaqVO obtenerCategoria(final java.lang.String queryString, final java.lang.Long id)
    {
        return (es.pode.contenidos.negocio.faqs.servicio.CategoriaFaqVO)this.obtenerCategoria(TRANSFORM_NONE, queryString, id);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenerCategoria(int, java.lang.Long)
     */
    public Object obtenerCategoria(final int transform, final java.lang.Long id)
    {
        return this.obtenerCategoria(transform, "from es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq as categoriaFaq where categoriaFaq.id = :id", id);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenerCategoria(int, java.lang.String, java.lang.Long)
     */
    public Object obtenerCategoria(final int transform, final java.lang.String queryString, final java.lang.Long id)
    {
        try
        {
            org.hibernate.Query queryObject = super.getSession(false).createQuery(queryString);
			queryObject.setParameter("id", id);            	
            java.util.List results = queryObject.list();
            Object result = null;
            if (results != null)
            {
                if (results.size() > 1)
                {
                    throw new org.springframework.dao.InvalidDataAccessResourceUsageException(
                        "More than one instance of 'es.pode.contenidos.negocio.faqs.servicio.CategoriaFaqVO"
                            + "' was found when executing query --> '" + queryString + "'");
                }
                else if (results.size() == 1)
                {
                    result = (es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)results.iterator().next();
                }
            }
            result = transformEntity(transform, (es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)result);
            return result;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenerCategorias()
     */
    public java.util.Collection obtenerCategorias()
    {
        return this.obtenerCategorias(TRANSFORM_NONE);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenerCategorias(java.lang.String)
     */
    public java.util.Collection obtenerCategorias(final java.lang.String queryString)
    {
        return this.obtenerCategorias(TRANSFORM_NONE, queryString);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenerCategorias(int)
     */
    public java.util.Collection obtenerCategorias(final int transform)
    {
        return this.obtenerCategorias(transform, "from es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq as categoriaFaq");
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenerCategorias(int, java.lang.String)
     */
    public java.util.Collection obtenerCategorias(final int transform, final java.lang.String queryString)
    {
        try
        {
            org.hibernate.Query queryObject = super.getSession(false).createQuery(queryString);
            java.util.List results = queryObject.list();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenerIdiomasFromIdCategoria(java.lang.Long)
     */
    public java.util.List obtenerIdiomasFromIdCategoria(java.lang.Long id)
    {
        return this.obtenerIdiomasFromIdCategoria(TRANSFORM_NONE, id);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenerIdiomasFromIdCategoria(java.lang.String, java.lang.Long)
     */
    public java.util.List obtenerIdiomasFromIdCategoria(final java.lang.String queryString, final java.lang.Long id)
    {
        return this.obtenerIdiomasFromIdCategoria(TRANSFORM_NONE, queryString, id);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenerIdiomasFromIdCategoria(int, java.lang.Long)
     */
    public java.util.List obtenerIdiomasFromIdCategoria(final int transform, final java.lang.Long id)
    {
        return this.obtenerIdiomasFromIdCategoria(transform, "select cate.categoriaIdioma.idioma from es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq as cate where cate.id=:id", id);
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq#obtenerIdiomasFromIdCategoria(int, java.lang.String, java.lang.Long)
     */
    public java.util.List obtenerIdiomasFromIdCategoria(final int transform, final java.lang.String queryString, final java.lang.Long id)
    {
        try
        {
            org.hibernate.Query queryObject = super.getSession(false).createQuery(queryString);
			queryObject.setParameter("id", id);            	
            java.util.List results = queryObject.list();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * Allows transformation of entities into value objects
     * (or something else for that matter), when the <code>transform</code>
     * flag is set to one of the constants defined in <code>es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao</code>, please note
     * that the {@link #TRANSFORM_NONE} constant denotes no transformation, so the entity itself
     * will be returned.
     * <p/>
     * This method will return instances of these types:
     * <ul>
     *   <li>{@link es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq} - {@link #TRANSFORM_NONE}</li>
     *   <li>{@link es.pode.contenidos.negocio.faqs.servicio.CategoriaFaqVO} - {@link TRANSFORM_CATEGORIAFAQVO}</li>
     * </ul>
     *
     * If the integer argument value is unknown {@link #TRANSFORM_NONE} is assumed.
     *
     * @param transform one of the constants declared in {@link es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao}
     * @param entity an entity that was found
     * @return the transformed entity (i.e. new value object, etc)
     * @see #transformEntities(int,java.util.Collection)
     */
    private final Object transformEntity(final int transform, final es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq entity)
    {
        Object target = null;
        if (entity != null)
        {
            switch (transform)
            {
                case es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao.TRANSFORM_CATEGORIAFAQVO :
                    target = toCategoriaFaqVO(entity);
                    break;
                case TRANSFORM_NONE : // fall-through
                default:
                    target = entity;
            }
        }
        return target;
    }

    /**
     * Transforms a collection of entities using the
     * {@link #transformEntity(int,es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)}
     * method. This method does not instantiate a new collection.
     * <p/>
     * This method is to be used internally only.
     *
     * @param transform one of the constants declared in <code>es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao</code>
     * @param entities the collection of entities to transform
     * @return the same collection as the argument, but this time containing the transformed entities
     * @see #transformEntity(int,es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)
     */
    private final void transformEntities(final int transform, final java.util.Collection entities)
    {
        switch (transform)
        {
            case es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao.TRANSFORM_CATEGORIAFAQVO :
                toCategoriaFaqVOCollection(entities);
                break;
            case TRANSFORM_NONE : // fall-through
                default:
                // do nothing;
        }
    }

    /**
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#toCategoriaFaqVOCollection(java.util.Collection)
     */
    public final void toCategoriaFaqVOCollection(java.util.Collection entities)
    {
        if (entities == null)
        {
            entities = java.util.Collections.EMPTY_LIST;
        }
        else
        {
            org.apache.commons.collections.CollectionUtils.transform(entities, CATEGORIAFAQVO_TRANSFORMER);
        }
    }

    /**
     * Base implementation for transforming the results of a report query into a value object. This
     * implementation exists for convenience reasons only. It needs only be overridden in the
     * {@link CategoriaFaqDaoImpl} class if you intend to use reporting queries.
     * @see es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqDao#toCategoriaFaqVO(es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)
     */
    protected es.pode.contenidos.negocio.faqs.servicio.CategoriaFaqVO toCategoriaFaqVO(Object[] row)
    {
        return null;
    }

    /**
     * This anonymous transformer is designed to transform entities or report query results
     * (which result in an array of objects) to {@link es.pode.contenidos.negocio.faqs.servicio.CategoriaFaqVO}
     * using the Jakarta Commons-Collections Transformation API.
     */
    private final org.apache.commons.collections.Transformer CATEGORIAFAQVO_TRANSFORMER =
        new org.apache.commons.collections.Transformer()
        {
            public Object transform(Object input)
            {
                Object result = null;
                if (input instanceof es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)
                {
                    result = toCategoriaFaqVO((es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq)input);
                }
                else if (input instanceof Object[])
                {
                    result = toCategoriaFaqVO((Object[])input);
                }
                return result;
            }
        };

	/**
	 * Copy a VO to a new entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @return A new entity created with the values extracted from the vo.
	 */
	public es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq fromCategoriaFaqVO(final es.pode.contenidos.negocio.faqs.servicio.CategoriaFaqVO vo) {
        //default mapping between VO and entity
        return (es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq) 
                  this.getBeanMapper().map(vo, es.pode.contenidos.negocio.faqs.dominio.CategoriaFaqImpl.class, DEF_MAPPING_CATEGORIAFAQVO_CATEGORIAFAQ);
    }

	/**
	 * Copy a VO to an existing entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @param entity The destination bean (an existing entity)
	 */
    public void fromCategoriaFaqVO(es.pode.contenidos.negocio.faqs.servicio.CategoriaFaqVO vo, es.pode.contenidos.negocio.faqs.dominio.CategoriaFaq entity) {
        //default mapping between VO and entity
        this.getBeanMapper().map(vo, entity, DEF_MAPPING_CATEGORIAFAQVO_CATEGORIAFAQ);
    }
		
		
}