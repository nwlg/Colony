// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringHibernateDaoBase.vsl in andromda-spring-cartridge.
//
package es.pode.contenidos.negocio.descargas.dominio;

import net.sf.dozer.util.mapping.MapperIF;

/**
 * <p>
 * Base Spring DAO Class: is able to create, update, remove, load, and find
 * objects of type <code>es.pode.contenidos.negocio.descargas.dominio.Descarga</code>.
 * </p>
 *
 * @see es.pode.contenidos.negocio.descargas.dominio.Descarga
 */
public abstract class DescargaDaoBase
    extends org.springframework.orm.hibernate3.support.HibernateDaoSupport
    implements es.pode.contenidos.negocio.descargas.dominio.DescargaDao
{



	
	/**
	 * Constant that identifies a mapping between an 
	 * entity (Descarga) and a VO (DescargaVO)
	 */
	public final static String DEF_MAPPING_DESCARGA_DESCARGAVO = "DEF_MAPPING_DESCARGA_DESCARGAVO";
	
	/**
	 * Constant that identifies a mapping between a 
	 * VO (DescargaVO) and an entity (Descarga)
	 */
	public final static String DEF_MAPPING_DESCARGAVO_DESCARGA = "DEF_MAPPING_DESCARGA_DESCARGAVOPRIME";
	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#load(int, java.lang.Long)
     */
    public Object load(final int transform, final java.lang.Long identificador)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "Descarga.load - 'identificador' can not be null");
        }
        final java.util.List list = this.getHibernateTemplate().find(
            "from es.pode.contenidos.negocio.descargas.dominio.Descarga as entity where entity.identificador = ?", identificador);
        final Object entity = list != null && !list.isEmpty() ? list.iterator().next() : null;
        return transformEntity(transform, (es.pode.contenidos.negocio.descargas.dominio.Descarga)entity);
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#load(java.lang.Long)
     */
    public es.pode.contenidos.negocio.descargas.dominio.Descarga load(java.lang.Long identificador)
    {
        return (es.pode.contenidos.negocio.descargas.dominio.Descarga)this.load(TRANSFORM_NONE, identificador);
    }
    
    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#loadAll()
     */
    public java.util.Collection loadAll()
    {
        return this.loadAll(TRANSFORM_NONE);
    }
    
    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#loadAll(int)
     */
    public java.util.Collection loadAll(final int transform)
    {
        final java.util.Collection results = this.getHibernateTemplate().loadAll(es.pode.contenidos.negocio.descargas.dominio.DescargaImpl.class);
        this.transformEntities(transform, results);
        return results;
    }
    

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#create(es.pode.contenidos.negocio.descargas.dominio.Descarga)
     */
    public es.pode.contenidos.negocio.descargas.dominio.Descarga create(es.pode.contenidos.negocio.descargas.dominio.Descarga descarga)
    {
        return (es.pode.contenidos.negocio.descargas.dominio.Descarga)this.create(TRANSFORM_NONE, descarga);
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#create(int transform, es.pode.contenidos.negocio.descargas.dominio.Descarga)
     */
    public Object create(final int transform, final es.pode.contenidos.negocio.descargas.dominio.Descarga descarga)
    {
        if (descarga == null)
        {
            throw new IllegalArgumentException(
                "Descarga.create - 'descarga' can not be null");
        }
        Object identifier = this.getHibernateTemplate().save(descarga);
        descarga.setIdentificador((java.lang.Long)identifier);
        return this.transformEntity(transform, descarga);
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#create(java.util.Collection)
     */
    public java.util.Collection create(final java.util.Collection entities)
    {
        return create(TRANSFORM_NONE, entities);
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#create(int, java.util.Collection)
     */
    public java.util.Collection create(final int transform, final java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Descarga.create - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate3.HibernateCallback()
            {
                public Object doInHibernate(org.hibernate.Session session)
                    throws org.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        create(transform, (es.pode.contenidos.negocio.descargas.dominio.Descarga)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
        return entities;
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#create(java.lang.String, java.lang.Boolean, java.util.Date, java.lang.Long)
     */
    public es.pode.contenidos.negocio.descargas.dominio.Descarga create(
        java.lang.String path,
        java.lang.Boolean activa,
        java.util.Date fecha,
        java.lang.Long peso)
    {
        return (es.pode.contenidos.negocio.descargas.dominio.Descarga)this.create(TRANSFORM_NONE, path, activa, fecha, peso);
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#create(int, java.lang.String, java.lang.Boolean, java.util.Date, java.lang.Long)
     */
    public Object create(
        final int transform,
        java.lang.String path,
        java.lang.Boolean activa,
        java.util.Date fecha,
        java.lang.Long peso)
    {
        es.pode.contenidos.negocio.descargas.dominio.Descarga entity = new es.pode.contenidos.negocio.descargas.dominio.DescargaImpl();
        entity.setPath(path);
        entity.setActiva(activa);
        entity.setFecha(fecha);
        entity.setPeso(peso);
        return this.create(transform, entity);
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#update(es.pode.contenidos.negocio.descargas.dominio.Descarga)
     */
    public void update(es.pode.contenidos.negocio.descargas.dominio.Descarga descarga)
    {
        if (descarga == null)
        {
            throw new IllegalArgumentException(
                "Descarga.update - 'descarga' can not be null");
        }
        this.getHibernateTemplate().update(descarga);
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#update(java.util.Collection)
     */
    public void update(final java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Descarga.update - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate3.HibernateCallback()
            {
                public Object doInHibernate(org.hibernate.Session session)
                    throws org.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        update((es.pode.contenidos.negocio.descargas.dominio.Descarga)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#remove(es.pode.contenidos.negocio.descargas.dominio.Descarga)
     */
    public void remove(es.pode.contenidos.negocio.descargas.dominio.Descarga descarga)
    {
        if (descarga == null)
        {
            throw new IllegalArgumentException(
                "Descarga.remove - 'descarga' can not be null");
        }
        this.getHibernateTemplate().delete(descarga);
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#remove(java.lang.Long)
     */
    public void remove(java.lang.Long identificador)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "Descarga.remove - 'identificador' can not be null");
        }
        es.pode.contenidos.negocio.descargas.dominio.Descarga entity = this.load(identificador);
        if (entity != null)
        {
            this.remove(entity);
        }
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#remove(java.util.Collection)
     */
    public void remove(java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Descarga.remove - 'entities' can not be null");
        }
        this.getHibernateTemplate().deleteAll(entities);
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.Descarga#obtenerDescargasPorEstado(es.pode.contenidos.negocio.descargas.dominio.DescargaCriteria)
     */
    public java.util.Collection obtenerDescargasPorEstado(es.pode.contenidos.negocio.descargas.dominio.DescargaCriteria criteria)
    {
        return this.obtenerDescargasPorEstado(TRANSFORM_NONE, criteria);
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.Descarga#obtenerDescargasPorEstado(int, java.lang.String, es.pode.contenidos.negocio.descargas.dominio.DescargaCriteria)
     */
    public java.util.Collection obtenerDescargasPorEstado(final int transform, final es.pode.contenidos.negocio.descargas.dominio.DescargaCriteria criteria)
    {
        try
        {
            es.pode.contenidos.negocio.CriteriaSearch criteriaSearch = new es.pode.contenidos.negocio.CriteriaSearch(super.getSession(false), es.pode.contenidos.negocio.descargas.dominio.DescargaImpl.class);
            criteriaSearch.getConfiguration().setFirstResult(criteria.getFirstResult());
            criteriaSearch.getConfiguration().setFetchSize(criteria.getFetchSize());
            criteriaSearch.getConfiguration().setMaximumResultSize(criteria.getMaximumResultSize());
            es.pode.contenidos.negocio.CriteriaSearchParameter parameter1 =
                new es.pode.contenidos.negocio.CriteriaSearchParameter(
                    criteria.getActiva(),
                    "activa");
            criteriaSearch.addParameter(parameter1);
            es.pode.contenidos.negocio.CriteriaSearchParameter parameter2 =
                new es.pode.contenidos.negocio.CriteriaSearchParameter(
                    criteria.getFecha(),
                    "fecha");
            parameter2.setOrderDirection(es.pode.contenidos.negocio.CriteriaSearchParameter.ORDER_DESC);
            parameter2.setOrderRelevance(-1);
            criteriaSearch.addParameter(parameter2);
            java.util.List results = criteriaSearch.executeAsList();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * Allows transformation of entities into value objects
     * (or something else for that matter), when the <code>transform</code>
     * flag is set to one of the constants defined in <code>es.pode.contenidos.negocio.descargas.dominio.DescargaDao</code>, please note
     * that the {@link #TRANSFORM_NONE} constant denotes no transformation, so the entity itself
     * will be returned.
     * <p/>
     * This method will return instances of these types:
     * <ul>
     *   <li>{@link es.pode.contenidos.negocio.descargas.dominio.Descarga} - {@link #TRANSFORM_NONE}</li>
     *   <li>{@link es.pode.contenidos.negocio.descargas.servicio.DescargaVO} - {@link TRANSFORM_DESCARGAVO}</li>
     * </ul>
     *
     * If the integer argument value is unknown {@link #TRANSFORM_NONE} is assumed.
     *
     * @param transform one of the constants declared in {@link es.pode.contenidos.negocio.descargas.dominio.DescargaDao}
     * @param entity an entity that was found
     * @return the transformed entity (i.e. new value object, etc)
     * @see #transformEntities(int,java.util.Collection)
     */
    private final Object transformEntity(final int transform, final es.pode.contenidos.negocio.descargas.dominio.Descarga entity)
    {
        Object target = null;
        if (entity != null)
        {
            switch (transform)
            {
                case es.pode.contenidos.negocio.descargas.dominio.DescargaDao.TRANSFORM_DESCARGAVO :
                    target = toDescargaVO(entity);
                    break;
                case TRANSFORM_NONE : // fall-through
                default:
                    target = entity;
            }
        }
        return target;
    }

    /**
     * Transforms a collection of entities using the
     * {@link #transformEntity(int,es.pode.contenidos.negocio.descargas.dominio.Descarga)}
     * method. This method does not instantiate a new collection.
     * <p/>
     * This method is to be used internally only.
     *
     * @param transform one of the constants declared in <code>es.pode.contenidos.negocio.descargas.dominio.DescargaDao</code>
     * @param entities the collection of entities to transform
     * @return the same collection as the argument, but this time containing the transformed entities
     * @see #transformEntity(int,es.pode.contenidos.negocio.descargas.dominio.Descarga)
     */
    private final void transformEntities(final int transform, final java.util.Collection entities)
    {
        switch (transform)
        {
            case es.pode.contenidos.negocio.descargas.dominio.DescargaDao.TRANSFORM_DESCARGAVO :
                toDescargaVOCollection(entities);
                break;
            case TRANSFORM_NONE : // fall-through
                default:
                // do nothing;
        }
    }

    /**
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#toDescargaVOCollection(java.util.Collection)
     */
    public final void toDescargaVOCollection(java.util.Collection entities)
    {
        if (entities == null)
        {
            entities = java.util.Collections.EMPTY_LIST;
        }
        else
        {
            org.apache.commons.collections.CollectionUtils.transform(entities, DESCARGAVO_TRANSFORMER);
        }
    }

    /**
     * Base implementation for transforming the results of a report query into a value object. This
     * implementation exists for convenience reasons only. It needs only be overridden in the
     * {@link DescargaDaoImpl} class if you intend to use reporting queries.
     * @see es.pode.contenidos.negocio.descargas.dominio.DescargaDao#toDescargaVO(es.pode.contenidos.negocio.descargas.dominio.Descarga)
     */
    protected es.pode.contenidos.negocio.descargas.servicio.DescargaVO toDescargaVO(Object[] row)
    {
        return null;
    }

    /**
     * This anonymous transformer is designed to transform entities or report query results
     * (which result in an array of objects) to {@link es.pode.contenidos.negocio.descargas.servicio.DescargaVO}
     * using the Jakarta Commons-Collections Transformation API.
     */
    private final org.apache.commons.collections.Transformer DESCARGAVO_TRANSFORMER =
        new org.apache.commons.collections.Transformer()
        {
            public Object transform(Object input)
            {
                Object result = null;
                if (input instanceof es.pode.contenidos.negocio.descargas.dominio.Descarga)
                {
                    result = toDescargaVO((es.pode.contenidos.negocio.descargas.dominio.Descarga)input);
                }
                else if (input instanceof Object[])
                {
                    result = toDescargaVO((Object[])input);
                }
                return result;
            }
        };

	/**
	 * Copy a VO to a new entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @return A new entity created with the values extracted from the vo.
	 */
	public es.pode.contenidos.negocio.descargas.dominio.Descarga fromDescargaVO(final es.pode.contenidos.negocio.descargas.servicio.DescargaVO vo) {
        //default mapping between VO and entity
        return (es.pode.contenidos.negocio.descargas.dominio.Descarga) 
                  this.getBeanMapper().map(vo, es.pode.contenidos.negocio.descargas.dominio.DescargaImpl.class, DEF_MAPPING_DESCARGAVO_DESCARGA);
    }

	/**
	 * Copy a VO to an existing entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @param entity The destination bean (an existing entity)
	 */
    public void fromDescargaVO(es.pode.contenidos.negocio.descargas.servicio.DescargaVO vo, es.pode.contenidos.negocio.descargas.dominio.Descarga entity) {
        //default mapping between VO and entity
        this.getBeanMapper().map(vo, entity, DEF_MAPPING_DESCARGAVO_DESCARGA);
    }
		
		
}