// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringService.vsl in andromda-spring-cartridge.
//
package es.pode.contenidos.negocio.noticias.servicio;

/**
 * <p>
 * Servicio Web que ofrece la funcionalidad necesaria para la
 * gestion y visualizacion de contenidos del portal (Noticias y
 * Preguntas Frecuentes o FAQs).
 * </p>
 */
public interface SrvNoticiasService
{
    /**
     * <p>
     * Crea una nueva noticia en base de datos. El metodo devuelve la
     * ID asignada.
     * </p>
     */
    public java.lang.Long crearNoticia(es.pode.contenidos.negocio.noticias.servicio.NoticiaVO noticia);

    /**
     * <p>
     * Modifica una noticia existente.
     * </p>
     */
    public void modificarNoticia(es.pode.contenidos.negocio.noticias.servicio.NoticiaVO noticia);

    /**
     * <p>
     * Obtiene un listado de noticias ordenadas por fecha de
     * publicación.
     * </p>
     */
    public es.pode.contenidos.negocio.noticias.servicio.NoticiaVO[] obtenerNoticias();

    /**
     * <p>
     * Obtiene una noticia (en formato VO modifable) identificada por
     * su ID.
     * </p>
     */
    public es.pode.contenidos.negocio.noticias.servicio.NoticiaVO obtenerNoticia(java.lang.Long id);

    /**
     * <p>
     * Elimina una noticia de la base de datos.
     * </p>
     */
    public void eliminarNoticia(java.lang.Long id);

    /**
     * <p>
     * Obtiene una categoria identificada por si ID.
     * </p>
     */
    public es.pode.contenidos.negocio.noticias.servicio.CategoriaNoticiaVO obtenerCategoria(java.lang.Long id);

    /**
     * <p>
     * Obtiene un listado de las categorias existentes.
     * </p>
     */
    public es.pode.contenidos.negocio.noticias.servicio.CategoriaNoticiaVO[] obtenerCategorias();

    /**
     * <p>
     * Elimina la coleccion de noticias especificadas en el array de
     * IDs.
     * </p>
     */
    public void eliminarNoticias(java.lang.Long[] idList);

    /**
     * <p>
     * Obtiene un listado de las noticias activas redactadas en el
     * idioma deseado y ordenadas por fecha de publicacion.
     * </p>
     */
    public es.pode.contenidos.negocio.noticias.servicio.NoticiaTraducidaVO[] obtenerNoticiasActivasPorIdiomayCategoria(java.lang.String idioma, java.lang.Long id);

    /**
     * <p>
     * Almacena en el servidor la imagen suministrada y devuelve la URL
     * que permite acceder a dicha imagen.
     * </p>
     */
    public java.lang.String almacenarImagenNoticia(es.pode.contenidos.negocio.noticias.servicio.ImagenVO imagen);

    /**
     * <p>
     * Obtiene un listado de noticias activas redactadas en el idioma
     * deseado y ordenadas por fecha de publicacion.
     * </p>
     */
    public es.pode.contenidos.negocio.noticias.servicio.NoticiaTraducidaVO[] listarNoticiasActivasPorIdioma(java.lang.String idioma);

    /**
     * 
     */
    public es.pode.contenidos.negocio.noticias.servicio.NoticiaVO[] obtenerNoticiasActivas(java.lang.Integer numResultados);

    /**
     * <p>
     * Crea una nueva categoría en la BD.
     * </p>
     */
    public java.lang.Long crearCategoria(es.pode.contenidos.negocio.noticias.servicio.CategoriaNoticiaVO categoria);

    /**
     * <p>
     * Elimina la categoria con identificador id de la base de datos.
     * </p>
     */
    public void eliminarCategoria(java.lang.Long id);

    /**
     * <p>
     * Elimina las categorías de la base de datos.
     * </p>
     */
    public void eliminarCategorias(java.lang.Long[] idList);

    /**
     * <p>
     * Método que modifica una categoría a partir del vo.
     * </p>
     */
    public void modificarCategoria(es.pode.contenidos.negocio.noticias.servicio.CategoriaNoticiaVO categoria);

    /**
     * 
     */
    public void limpiarCategoria(java.lang.Long id);

    /**
     * 
     */
    public void limpiarNoticia(java.lang.Long id);

    /**
     * 
     */
    public es.pode.contenidos.negocio.noticias.servicio.NoticiaTraducidaVO obtenerNoticiaTraducida(java.lang.Long id, java.lang.String idioma);

    /**
     * <p>
     * Obtiene todas las noticias traducidas. Hay una prioridad de
     * traducción del idioma que lo marca el array de idiomas.
     * </p>
     */
    public es.pode.contenidos.negocio.noticias.servicio.NoticiaTraducidaVO[] obtenerNoticiasTraducidas(java.lang.String[] idiomasTraducibles);

    /**
     * <p>
     * Obtiene todas las categorías de las noticias que haya en la base
     * de datos.
     * </p>
     */
    public es.pode.contenidos.negocio.noticias.servicio.CategoriaNoticiaTraducidaVO[] obtenerCategoriasTraducidas(java.lang.String[] idiomasTraducibles);

    /**
     * <p>
     * Otiene la categoria traducida.
     * </p>
     */
    public es.pode.contenidos.negocio.noticias.servicio.CategoriaNoticiaTraducidaVO obtenerCategoriaTraducida(java.lang.Long id, java.lang.String idioma);

    /**
     * <p>
     * Este método obtiene todas las noticias asociadas a la categoría
     * con id.
     * </p>
     */
    public es.pode.contenidos.negocio.noticias.servicio.NoticiaTraducidaVO[] obtenerNoticiasFromIdCategoria(java.lang.Long idCategoria, java.lang.String[] idiomasTraducibles);

    /**
     * 
     */
    public java.lang.Boolean eliminarImagenNoticia(java.lang.String imagenEliminarSt);

}
