// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringService.vsl in andromda-spring-cartridge.
//
package es.pode.modificador.negocio.servicio;

/**
 * 
 */
public interface SrvHerramientaModificacion
{
  /**
   * <p>
   * Obtiene tipos de modificación
   * </p>
   * @return es.pode.modificador.negocio.servicio.vo.CambioTypes
   */
    public es.pode.modificador.negocio.servicio.vo.CambioTypes obtenerTipos();

  /**
   * <p>
   * Valida modificación
   * </p>
      * @param configuracion  Configuracion de la tarea que se quiere validar
      * @return java.lang.Boolean
   */
    public java.lang.Boolean validar(es.pode.modificador.negocio.servicio.vo.ConfiguracionTarea configuracion);

  /**
   * <p>
   * Obtiene modificaciones ya configuradas.
   * </p>
   * @return es.pode.modificador.negocio.servicio.ModificacionVO[]
   */
    public es.pode.modificador.negocio.servicio.ModificacionVO[] obtenerModificacionesConfiguradas();

  /**
   * <p>
   * Obtiene los detalles de la modificación
   * </p>
      * @param idModificacion  Identificador de la tarea
      * @return es.pode.modificador.negocio.servicio.ModificacionVO
   */
    public es.pode.modificador.negocio.servicio.ModificacionVO obtenerModificacion(java.lang.Long idModificacion);

  /**
   * <p>
   * Recupera la traza de una modificación, si existe.
   * </p>
   * <p>
   * El valor de retorno es la URI a la traza.
   * </p>
      * @param idModificacion  Identificador de la tarea
         * @param id  Identificador de ResultadoODE
      * @return es.pode.modificador.negocio.servicio.ResultadoModificacionVO
   */
    public es.pode.modificador.negocio.servicio.ResultadoModificacionVO recuperarResultadoODE(java.lang.Long idModificacion, java.lang.Long id);

  /**
   * <p>
   * Restaura backup de la modificación indicada
   * </p>
      * @param idModificacion  Identificador de la tarea
         * @return java.lang.Boolean
   */
    public java.lang.Boolean restaurar(java.lang.Long idModificacion, java.lang.Long id);

  /**
   * <p>
   * Envía un mensaje a la cola JMS para que el servicio de tareas de
   * modificación lance la tarea especificada. Devuelve false si ha
   * habido un problema en el envío del mensaje. La modificacion
   * cambia su estado en base de datos de CONFIGURADA a RUNNING, para
   * indicar que la tarea esta en ejecución.
   * </p>
      * @return java.lang.Boolean
   */
    public java.lang.Boolean ejecutarModificacion(java.lang.Long idModificacion);

  /**
   * <p>
   * Elimina la tarea de modificación indicada. Imposibilita
   * restaurar los odes afectados
   * </p>
      * @param identificadores  Identificadores de las tareas a eliminar
      * @return java.lang.Boolean
   */
    public java.lang.Boolean eliminarModificacion(java.lang.Long[] identificadores);

  /**
   * <p>
   * Obtiene modificaciones ya ejecutadas
   * </p>
   * @return es.pode.modificador.negocio.servicio.ModificacionVO[]
   */
    public es.pode.modificador.negocio.servicio.ModificacionVO[] obtenerModificacionesEjecutadas();

  /**
   * <p>
   * Obtiene el resultado de la modificación indicada
   * </p>
      * @return es.pode.modificador.negocio.servicio.ResultadoModificacionVO[]
   */
    public es.pode.modificador.negocio.servicio.ResultadoModificacionVO[] obtenerResultadoModificacion(java.lang.Long idModificacion);

    public es.pode.modificador.negocio.servicio.vo.ConfiguracionTarea importarModificacion(javax.activation.DataHandler fichero);

  /**
   * <p>
   * Genera un XML de configuracion a partir de la tarea configurada
   * y lo serializa para su exportacion.
   * </p>
      * @param tarea  Tarea a exportar
      * @return javax.activation.DataHandler
   */
    public javax.activation.DataHandler exportarModificacion(es.pode.modificador.negocio.servicio.vo.ConfiguracionTarea tarea);

  /**
   * <p>
   * Configura una modificación. Si no existía previamente la tarea,
   * la crea.
   * </p>
   * <p>
   * El valor de retorno es el identificador de la Tarea
   * </p>
      * @param idModificacion  Identificador de la tarea
         * @param configuracion  VO con los datos de configuracion de una tarea de modificacion.
         * @param nombre  Nombre de la tarea
      * @return java.lang.Long
   */
    public java.lang.Long configurar(java.lang.Long idModificacion, es.pode.modificador.negocio.servicio.vo.ConfiguracionTarea configuracion, java.lang.String nombre);

  /**
   * <p>
   * Recupera una plantilla para añadir un nuevo termino lomes.
   * </p>
      * @param terminoLomes  Termino lomes que se desea añadir identificado por las etiquetas lomes separadas por puntos (p.e., lom.technical.format).
      * @return java.lang.String
   */
    public java.lang.String recuperarPlantillaLomes(java.lang.String terminoLomes);

  /**
   * <p>
   * Realiza una ejecución de unos pocos ODEs escogidos al azar entre
   * los configurados para que se pueda obtener una pseudo-validación
   * de los cambios configurados. El value object devuelto contiene
   * la información necesaria para mostrar los resultados por ODE y
   * los textos de traza.
   * </p>
      * @param configuracion  Configuración de la tarea que se desea simular.
         * @param numeroOdes  Número máximo de ODEs sobre los que se desea simular la tarea de modificación.
      * @return es.pode.modificador.negocio.servicio.ModificacionSimuladaVO
   */
    public es.pode.modificador.negocio.servicio.ModificacionSimuladaVO simularModificacion(es.pode.modificador.negocio.servicio.vo.ConfiguracionTarea configuracion, java.lang.Integer numeroOdes);

    public es.pode.modificador.negocio.servicio.ModificacionVO[] obtenerModificacionesEnEjecucion();

  /**
   * <p>
   * Asigna los resultados dados a la tarea de modificación indicada
   * </p>
      * @param idModificacion  Identificador de la modificación
         * @param resultados  Lista de resultados
      * @return java.lang.Boolean
   */
    public java.lang.Boolean registrarResultadosTarea(java.lang.Long idModificacion, es.pode.modificador.negocio.servicio.ResultadoModificacionVO[] resultados);

  /**
   * <p>
   * Obtiene los datos del termino que se desea modificar. Esto
   * permite pintar el formulario de nuevo valor como campo de texto
   * o combo según sea el termino a modificar un vocabulario
   * controlado o no.
   * </p>
      * @param idTermino  Identificador del término
      * @return es.pode.modificador.negocio.servicio.vo.FormularioModificarVO
   */
    public es.pode.modificador.negocio.servicio.vo.FormularioModificarVO obtenerFormularioModificar(java.lang.String idTermino);

  /**
   * <p>
   * Realiza una consulta a fuentes taxonomicas para navegar por la
   * taxonomia elegida (en este caso, LOM)
   * </p>
      * @param idTermino  Identificador del termino lom en que se esta navegando. Si el termino es el raiz (lom), usar null.
      * @return es.pode.modificador.negocio.servicio.TerminoLomVO
   */
    public es.pode.modificador.negocio.servicio.TerminoLomVO navegarLom(java.lang.String idTermino);

  /**
   * <p>
   * Realiza una consulta a fuentes taxonomicas para navegar por la
   * taxonomia elegida (arbol curricular, etb)
   * </p>
      * @param idNodo  Si es null, recuperar el raiz.
         * @param nombreTaxonomia  Nombre de la taxonomia que se desea navegar
         * @param idioma  Idioma para la representacion de los nodos de la taxonomía.
      * @return es.pode.modificador.negocio.servicio.TaxonomiaVO
   */
    public es.pode.modificador.negocio.servicio.TaxonomiaVO navegarArbolCurricular(java.lang.String idNodo, java.lang.String nombreTaxonomia, java.lang.String idioma);

  /**
   * <p>
   * Realiza una consulta a fuentes taxonomicas para navegar por la
   * taxonomia elegida (arbol curricular, etb)
   * </p>
      * @param idNodo  Si es null, recuperar el raiz.
         * @param nombreTaxonomia  Nombre de la taxonomia que se desea navegar
         * @param idioma  Idioma para la representacion de los nodos de la taxonomía.
      * @return es.pode.modificador.negocio.servicio.TaxonomiaVO
   */
    public es.pode.modificador.negocio.servicio.TaxonomiaVO navegarTesauro(java.lang.String idNodo, java.lang.String nombreTaxonomia, java.lang.String idioma);

  /**
   * <p>
   * Genera el codigo XML correspondiente a un taxonPath del arbol
   * curricular que se quiere insertar en un campo classification
   * (soportados: arbolcurricular o ETB). Este codigo devuelto esta
   * listo para incorporarse a una tarea de Añadir Termino Lomes como
   * nuevoValor.
   * </p>
      * @return java.lang.String
   */
    public java.lang.String generarArbolCurricular(es.pode.modificador.negocio.servicio.TaxonomiaVO taxonomia);

  /**
   * <p>
   * Programa en el planificador la ejecucion diferida de la tarea.
   * </p>
      * @param idModificacion  Identificador de la modificación.
         * @param fechaEjecucion  Fecha en la que se desea lanzar la tarea de modificación.
      * @return java.lang.Boolean
   */
    public java.lang.Boolean planificarModificacion(java.lang.Long idModificacion, java.util.Calendar fechaEjecucion);

  /**
   * <p>
   * Elimina del planificador la tarea de modificacion previamente
   * programada.
   * </p>
      * @param idModificacion  Identificador de la tarea de modificación.
         * @param idPlanificador  El identificador con el que el planificador conoce a la tarea de modificación que se quiere desprogramar. Si es null, el servicio realiza la consulta para recuperar la tarea identificada por idModificacion.
      * @return java.lang.Boolean
   */
    public java.lang.Boolean desprogramarTarea(java.lang.Long idModificacion, java.lang.String idPlanificador);

  /**
   * <p>
   * Carga la configuracion de una tarea de modificacion para su
   * modificación.
   * </p>
      * @return es.pode.modificador.negocio.servicio.vo.ConfiguracionTarea
   */
    public es.pode.modificador.negocio.servicio.vo.ConfiguracionTarea obtenerConfiguracionTarea(java.lang.Long idModificacion);

  /**
   * <p>
   * Genera el codigo XML correspondiente a un taxonPath del ETB que
   * se quiere insertar en un campo classification (soportados:
   * arbolcurricular o ETB). Este codigo devuelto esta listo para
   * incorporarse a una tarea de Añadir Termino Lomes como
   * nuevoValor.
   * </p>
      * @return java.lang.String
   */
    public java.lang.String generarETB(es.pode.modificador.negocio.servicio.TaxonomiaVO taxonomia);

  /**
   * <p>
   * Devuelve aquellas modificaciones que han modificado el ODE
   * identificado.
   * </p>
      * @param pathOriginal  Ruta del ODE del que se quiere chequear si tiene modificaciones pendientes de validar
      * @return es.pode.modificador.negocio.servicio.ModificacionVO[]
   */
    public es.pode.modificador.negocio.servicio.ModificacionVO[] chequearResultadosODE(java.lang.String pathOriginal);

}
