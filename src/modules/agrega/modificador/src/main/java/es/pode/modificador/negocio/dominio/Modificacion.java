// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package es.pode.modificador.negocio.dominio;

/**
 * 
 */
public abstract class Modificacion
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -4484055686980560332L;

    private java.lang.String nombre;

    public java.lang.String getNombre()
    {
        return this.nombre;
    }

    public void setNombre(java.lang.String nombre)
    {
        this.nombre = nombre;
    }
    private java.lang.String path;

  /**
   * <p>
   * Localización en disco de los datos de la modificación (backups,
   * informes, configuracion de la modificación, ...)
   * </p>
   * @return java.lang.String
   */
    public java.lang.String getPath()
    {
        return this.path;
    }

  /**
   * <p>
   * Localización en disco de los datos de la modificación (backups,
   * informes, configuracion de la modificación, ...)
   * </p>
   *  @param path  Localización en disco de los datos de la modificación (backups, informes, configuracion de la modificación, ...) 
   */
    public void setPath(java.lang.String path)
    {
        this.path = path;
    }
    private es.pode.modificador.negocio.utilidades.EstadosTarea resultado;

    public es.pode.modificador.negocio.utilidades.EstadosTarea getResultado()
    {
        return this.resultado;
    }

    public void setResultado(es.pode.modificador.negocio.utilidades.EstadosTarea resultado)
    {
        this.resultado = resultado;
    }
    private java.lang.String idPlanificador;

    public java.lang.String getIdPlanificador()
    {
        return this.idPlanificador;
    }

    public void setIdPlanificador(java.lang.String idPlanificador)
    {
        this.idPlanificador = idPlanificador;
    }
    private java.lang.Long idModificacion;

    public java.lang.Long getIdModificacion()
    {
        return this.idModificacion;
    }

    public void setIdModificacion(java.lang.Long idModificacion)
    {
        this.idModificacion = idModificacion;
    }
    private java.util.Calendar fechaEjecucion;

  /**
   * <p>
   * En el caso de que la tarea este planificada, se registra la
   * fecha de ejecución para representarla en el portal.
   * </p>
   * @return java.util.Calendar
   */
    public java.util.Calendar getFechaEjecucion()
    {
        return this.fechaEjecucion;
    }

  /**
   * <p>
   * En el caso de que la tarea este planificada, se registra la
   * fecha de ejecución para representarla en el portal.
   * </p>
   *  @param fechaEjecucion  En el caso de que la tarea este planificada, se registra la fecha de ejecución para representarla en el portal. 
   */
    public void setFechaEjecucion(java.util.Calendar fechaEjecucion)
    {
        this.fechaEjecucion = fechaEjecucion;
    }
    private java.lang.String msgError;

  /**
   * <p>
   * Mensaje de error asociado a la modificacion. Se representaran
   * con códigos para facilitar su internacionalizacion.
   * </p>
   * @return java.lang.String
   */
    public java.lang.String getMsgError()
    {
        return this.msgError;
    }

  /**
   * <p>
   * Mensaje de error asociado a la modificacion. Se representaran
   * con códigos para facilitar su internacionalizacion.
   * </p>
   *  @param msgError  Mensaje de error asociado a la modificacion. Se representaran con códigos para facilitar su internacionalizacion. 
   */
    public void setMsgError(java.lang.String msgError)
    {
        this.msgError = msgError;
    }
    private java.lang.String user;

    public java.lang.String getUser()
    {
        return this.user;
    }

    public void setUser(java.lang.String user)
    {
        this.user = user;
    }
    private java.util.Calendar fechaModificacion;

    public java.util.Calendar getFechaModificacion()
    {
        return this.fechaModificacion;
    }

    public void setFechaModificacion(java.util.Calendar fechaModificacion)
    {
        this.fechaModificacion = fechaModificacion;
    }
    private java.util.Collection resultados = new java.util.HashSet();

    public java.util.Collection getResultados()
    {
        return this.resultados;
    }

    public void setResultados(java.util.Collection resultados)
    {
        this.resultados = resultados;
    }



    /**
     * Returns <code>true</code> if the argument is an Modificacion instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     *
     * @param object The object to compare
     * @return boolean
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof Modificacion))
        {
            return false;
        }
        final Modificacion that = (Modificacion)object;
        if (this.idModificacion == null || that.idModificacion == null || !this.idModificacion.equals(that.idModificacion))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     * @return int
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (idModificacion == null ? 0 : idModificacion.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link es.pode.modificador.negocio.dominio.Modificacion}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link es.pode.modificador.negocio.dominio.Modificacion}.
         * @return es.pode.modificador.negocio.dominio.Modificacion
         */
        public static es.pode.modificador.negocio.dominio.Modificacion newInstance()
        {
            return new es.pode.modificador.negocio.dominio.ModificacionImpl();
        }
    }

// HibernateEntity.vsl merge-point
}