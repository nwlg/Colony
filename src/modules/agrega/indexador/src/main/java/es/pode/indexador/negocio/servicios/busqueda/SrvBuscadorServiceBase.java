// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.indexador.negocio.servicios.busqueda;

import net.sf.dozer.util.mapping.MapperIF;

import org.apache.log4j.Logger;


/**
 * <p>
 * Spring Service base class for <code>es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService
 */
public abstract class SrvBuscadorServiceBase
    implements es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService
{

		 protected static final Logger logger = Logger.getLogger(SrvBuscadorServiceBase.class);


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


	
			
    protected final es.pode.fuentestaxonomicas.negocio.servicio.SrvTesaurosServices getSrvTesaurosServices()
	        throws java.lang.Exception
	    {
            String srvTesaurosServicesFile="importedServices.properties";	    
	          java.io.InputStream srvTesaurosServicesInputStream=SrvBuscadorServiceBase.class.getClassLoader().getResourceAsStream(srvTesaurosServicesFile);
	          java.util.Properties srvTesaurosServicesProperties = new java.util.Properties();
	          srvTesaurosServicesProperties.load(srvTesaurosServicesInputStream);
	          String srvTesaurosServicesEndPointAddress="";
	          srvTesaurosServicesEndPointAddress=(String) srvTesaurosServicesProperties.get("srvTesaurosServicesPort");
			  logger.debug("srvTesaurosServicesEndPointAddress del fichero --> " + srvTesaurosServicesEndPointAddress);
			  es.pode.fuentestaxonomicas.negocio.servicio.SrvTesaurosServicesService srvTesaurosServices = new es.pode.fuentestaxonomicas.negocio.servicio.SrvTesaurosServicesServiceLocator();                                                                                                                                                                                                                                                    
            if (srvTesaurosServicesEndPointAddress.length()>0) 
					  ((es.pode.fuentestaxonomicas.negocio.servicio.SrvTesaurosServicesServiceLocator)srvTesaurosServices).setSrvTesaurosServicesEndpointAddress(srvTesaurosServicesEndPointAddress);
	    	    es.pode.fuentestaxonomicas.negocio.servicio.SrvTesaurosServices port = srvTesaurosServices.getSrvTesaurosServices();	    
	          return port;
	    }

    
    
	
	        
    
	    	    	    
		    private es.pode.parseadorXML.SCORM2004Dao scormDao;
		
		    /**
		     * Sets the reference to <code>scormDao</code>.
		     */
		    public void setScormDao(es.pode.parseadorXML.SCORM2004Dao scormDao)
		    {
		        this.scormDao = scormDao;
		    }
		
		    /**
		     * Gets the reference to <code>scormDao</code>.
		     */
		    protected es.pode.parseadorXML.SCORM2004Dao getScormDao()
		    {
		        return this.scormDao;
		    }
	    
	        
	
	        
    
	    	    	    
		    private es.pode.parseadorXML.LomESDao lomesDao;
		
		    /**
		     * Sets the reference to <code>lomesDao</code>.
		     */
		    public void setLomesDao(es.pode.parseadorXML.LomESDao lomesDao)
		    {
		        this.lomesDao = lomesDao;
		    }
		
		    /**
		     * Gets the reference to <code>lomesDao</code>.
		     */
		    protected es.pode.parseadorXML.LomESDao getLomesDao()
		    {
		        return this.lomesDao;
		    }
	    
	        
    private es.pode.indexador.negocio.dominio.IndiceDao indiceDao;

    /**
     * Sets the reference to <code>indice</code>'s DAO.
     */
    public void setIndiceDao(es.pode.indexador.negocio.dominio.IndiceDao indiceDao)
    {
        this.indiceDao = indiceDao;
    }

    /**
     * Gets the reference to <code>indice</code>'s DAO.
     */
    protected es.pode.indexador.negocio.dominio.IndiceDao getIndiceDao()
    {
        return this.indiceDao;
    }


    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#busquedaAvanzada(es.pode.indexador.negocio.servicios.busqueda.ParamAvanzadoVO)
     */
    public es.pode.indexador.negocio.servicios.busqueda.DocumentosVO busquedaAvanzada(es.pode.indexador.negocio.servicios.busqueda.ParamAvanzadoVO paramBusq)
    {
        if (paramBusq == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaAvanzada(es.pode.indexador.negocio.servicios.busqueda.ParamAvanzadoVO paramBusq) - 'paramBusq' can not be null");
        }
        try
        {
            return this.handleBusquedaAvanzada(paramBusq);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaAvanzada(es.pode.indexador.negocio.servicios.busqueda.ParamAvanzadoVO paramBusq)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #busquedaAvanzada(es.pode.indexador.negocio.servicios.busqueda.ParamAvanzadoVO)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.DocumentosVO handleBusquedaAvanzada(es.pode.indexador.negocio.servicios.busqueda.ParamAvanzadoVO paramBusq)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#busquedaSimple(es.pode.indexador.negocio.servicios.busqueda.ParamSimpleVO)
     */
    public es.pode.indexador.negocio.servicios.busqueda.DocumentosVO busquedaSimple(es.pode.indexador.negocio.servicios.busqueda.ParamSimpleVO paramBusq)
    {
        if (paramBusq == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaSimple(es.pode.indexador.negocio.servicios.busqueda.ParamSimpleVO paramBusq) - 'paramBusq' can not be null");
        }
        try
        {
            return this.handleBusquedaSimple(paramBusq);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaSimple(es.pode.indexador.negocio.servicios.busqueda.ParamSimpleVO paramBusq)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #busquedaSimple(es.pode.indexador.negocio.servicios.busqueda.ParamSimpleVO)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.DocumentosVO handleBusquedaSimple(es.pode.indexador.negocio.servicios.busqueda.ParamSimpleVO paramBusq)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#busquedaLOM_ES(es.pode.indexador.negocio.servicios.busqueda.QuerySimpleVO)
     */
    public es.pode.indexador.negocio.servicios.busqueda.DocumentosLOM_ESVO busquedaLOM_ES(es.pode.indexador.negocio.servicios.busqueda.QuerySimpleVO paramBusq)
    {
        if (paramBusq == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaLOM_ES(es.pode.indexador.negocio.servicios.busqueda.QuerySimpleVO paramBusq) - 'paramBusq' can not be null");
        }
        try
        {
            return this.handleBusquedaLOM_ES(paramBusq);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaLOM_ES(es.pode.indexador.negocio.servicios.busqueda.QuerySimpleVO paramBusq)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #busquedaLOM_ES(es.pode.indexador.negocio.servicios.busqueda.QuerySimpleVO)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.DocumentosLOM_ESVO handleBusquedaLOM_ES(es.pode.indexador.negocio.servicios.busqueda.QuerySimpleVO paramBusq)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#busquedaMEC(java.lang.String, java.lang.String)
     */
    public es.pode.indexador.negocio.servicios.busqueda.DocVO busquedaMEC(java.lang.String identificadorMEC, java.lang.String idiomaBusqueda)
    {
        if (identificadorMEC == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaMEC(java.lang.String identificadorMEC, java.lang.String idiomaBusqueda) - 'identificadorMEC' can not be null");
        }
        if (idiomaBusqueda == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaMEC(java.lang.String identificadorMEC, java.lang.String idiomaBusqueda) - 'idiomaBusqueda' can not be null");
        }
        try
        {
            return this.handleBusquedaMEC(identificadorMEC, idiomaBusqueda);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaMEC(java.lang.String identificadorMEC, java.lang.String idiomaBusqueda)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #busquedaMEC(java.lang.String, java.lang.String)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.DocVO handleBusquedaMEC(java.lang.String identificadorMEC, java.lang.String idiomaBusqueda)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#solicitudDocsCount(es.pode.indexador.negocio.servicios.busqueda.ParamDocsCountVO)
     */
    public es.pode.indexador.negocio.servicios.busqueda.ResultadosCountVO solicitudDocsCount(es.pode.indexador.negocio.servicios.busqueda.ParamDocsCountVO paramBusq)
    {
        if (paramBusq == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.solicitudDocsCount(es.pode.indexador.negocio.servicios.busqueda.ParamDocsCountVO paramBusq) - 'paramBusq' can not be null");
        }
        try
        {
            return this.handleSolicitudDocsCount(paramBusq);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.solicitudDocsCount(es.pode.indexador.negocio.servicios.busqueda.ParamDocsCountVO paramBusq)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #solicitudDocsCount(es.pode.indexador.negocio.servicios.busqueda.ParamDocsCountVO)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.ResultadosCountVO handleSolicitudDocsCount(es.pode.indexador.negocio.servicios.busqueda.ParamDocsCountVO paramBusq)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#busquedaDocsNodoArbolCurricular(es.pode.indexador.negocio.servicios.busqueda.ParamNodoArbolCurricularVO)
     */
    public es.pode.indexador.negocio.servicios.busqueda.DocumentosVO busquedaDocsNodoArbolCurricular(es.pode.indexador.negocio.servicios.busqueda.ParamNodoArbolCurricularVO paramBusq)
    {
        if (paramBusq == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsNodoArbolCurricular(es.pode.indexador.negocio.servicios.busqueda.ParamNodoArbolCurricularVO paramBusq) - 'paramBusq' can not be null");
        }
        try
        {
            return this.handleBusquedaDocsNodoArbolCurricular(paramBusq);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsNodoArbolCurricular(es.pode.indexador.negocio.servicios.busqueda.ParamNodoArbolCurricularVO paramBusq)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #busquedaDocsNodoArbolCurricular(es.pode.indexador.negocio.servicios.busqueda.ParamNodoArbolCurricularVO)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.DocumentosVO handleBusquedaDocsNodoArbolCurricular(es.pode.indexador.negocio.servicios.busqueda.ParamNodoArbolCurricularVO paramBusq)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#busquedaDocsNodoFechaArbolCurricular(java.lang.String, java.util.Calendar, java.util.Calendar, java.lang.String)
     */
    public es.pode.indexador.negocio.servicios.busqueda.ResultadosCountVO busquedaDocsNodoFechaArbolCurricular(java.lang.String idNodo, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma)
    {
        if (idNodo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsNodoFechaArbolCurricular(java.lang.String idNodo, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma) - 'idNodo' can not be null");
        }
        if (fechaDesde == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsNodoFechaArbolCurricular(java.lang.String idNodo, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma) - 'fechaDesde' can not be null");
        }
        if (fechaHasta == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsNodoFechaArbolCurricular(java.lang.String idNodo, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma) - 'fechaHasta' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsNodoFechaArbolCurricular(java.lang.String idNodo, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleBusquedaDocsNodoFechaArbolCurricular(idNodo, fechaDesde, fechaHasta, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsNodoFechaArbolCurricular(java.lang.String idNodo, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #busquedaDocsNodoFechaArbolCurricular(java.lang.String, java.util.Calendar, java.util.Calendar, java.lang.String)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.ResultadosCountVO handleBusquedaDocsNodoFechaArbolCurricular(java.lang.String idNodo, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#busquedaDocsRangoFechaNivelAgregacion(java.lang.String, java.util.Calendar, java.util.Calendar, java.lang.String)
     */
    public es.pode.indexador.negocio.servicios.busqueda.ResultadosCountVO busquedaDocsRangoFechaNivelAgregacion(java.lang.String nivelAgregacion, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma)
    {
        if (nivelAgregacion == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsRangoFechaNivelAgregacion(java.lang.String nivelAgregacion, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma) - 'nivelAgregacion' can not be null");
        }
        if (fechaDesde == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsRangoFechaNivelAgregacion(java.lang.String nivelAgregacion, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma) - 'fechaDesde' can not be null");
        }
        if (fechaHasta == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsRangoFechaNivelAgregacion(java.lang.String nivelAgregacion, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma) - 'fechaHasta' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsRangoFechaNivelAgregacion(java.lang.String nivelAgregacion, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleBusquedaDocsRangoFechaNivelAgregacion(nivelAgregacion, fechaDesde, fechaHasta, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsRangoFechaNivelAgregacion(java.lang.String nivelAgregacion, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #busquedaDocsRangoFechaNivelAgregacion(java.lang.String, java.util.Calendar, java.util.Calendar, java.lang.String)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.ResultadosCountVO handleBusquedaDocsRangoFechaNivelAgregacion(java.lang.String nivelAgregacion, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#busquedaDocsLicenciaFecha(java.lang.String, java.util.Calendar, java.util.Calendar, java.lang.String)
     */
    public es.pode.indexador.negocio.servicios.busqueda.ResultadosCountVO busquedaDocsLicenciaFecha(java.lang.String licencia, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma)
    {
        if (licencia == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsLicenciaFecha(java.lang.String licencia, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma) - 'licencia' can not be null");
        }
        if (fechaDesde == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsLicenciaFecha(java.lang.String licencia, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma) - 'fechaDesde' can not be null");
        }
        if (fechaHasta == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsLicenciaFecha(java.lang.String licencia, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma) - 'fechaHasta' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsLicenciaFecha(java.lang.String licencia, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleBusquedaDocsLicenciaFecha(licencia, fechaDesde, fechaHasta, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaDocsLicenciaFecha(java.lang.String licencia, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #busquedaDocsLicenciaFecha(java.lang.String, java.util.Calendar, java.util.Calendar, java.lang.String)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.ResultadosCountVO handleBusquedaDocsLicenciaFecha(java.lang.String licencia, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#obtenerPalabrasClave(es.pode.indexador.negocio.servicios.busqueda.ParamPalabrasClave)
     */
    public es.pode.indexador.negocio.servicios.busqueda.PrioridadPalabrasClaveVO obtenerPalabrasClave(es.pode.indexador.negocio.servicios.busqueda.ParamPalabrasClave paramBusq)
    {
        if (paramBusq == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.obtenerPalabrasClave(es.pode.indexador.negocio.servicios.busqueda.ParamPalabrasClave paramBusq) - 'paramBusq' can not be null");
        }
        try
        {
            return this.handleObtenerPalabrasClave(paramBusq);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.obtenerPalabrasClave(es.pode.indexador.negocio.servicios.busqueda.ParamPalabrasClave paramBusq)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerPalabrasClave(es.pode.indexador.negocio.servicios.busqueda.ParamPalabrasClave)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.PrioridadPalabrasClaveVO handleObtenerPalabrasClave(es.pode.indexador.negocio.servicios.busqueda.ParamPalabrasClave paramBusq)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#busquedaMECRepositorio(java.lang.String)
     */
    public es.pode.indexador.negocio.servicios.busqueda.ResultadoRecordVO busquedaMECRepositorio(java.lang.String idMEC)
    {
        if (idMEC == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaMECRepositorio(java.lang.String idMEC) - 'idMEC' can not be null");
        }
        try
        {
            return this.handleBusquedaMECRepositorio(idMEC);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaMECRepositorio(java.lang.String idMEC)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #busquedaMECRepositorio(java.lang.String)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.ResultadoRecordVO handleBusquedaMECRepositorio(java.lang.String idMEC)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#busquedaHeadersRepositorio(es.pode.indexador.negocio.servicios.busqueda.ParamPeriodoRepositorioVO)
     */
    public es.pode.indexador.negocio.servicios.busqueda.ResultadoHeaderVO[] busquedaHeadersRepositorio(es.pode.indexador.negocio.servicios.busqueda.ParamPeriodoRepositorioVO paramBusq)
    {
        if (paramBusq == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaHeadersRepositorio(es.pode.indexador.negocio.servicios.busqueda.ParamPeriodoRepositorioVO paramBusq) - 'paramBusq' can not be null");
        }
        try
        {
            return this.handleBusquedaHeadersRepositorio(paramBusq);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaHeadersRepositorio(es.pode.indexador.negocio.servicios.busqueda.ParamPeriodoRepositorioVO paramBusq)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #busquedaHeadersRepositorio(es.pode.indexador.negocio.servicios.busqueda.ParamPeriodoRepositorioVO)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.ResultadoHeaderVO[] handleBusquedaHeadersRepositorio(es.pode.indexador.negocio.servicios.busqueda.ParamPeriodoRepositorioVO paramBusq)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#busquedaRepositorio(es.pode.indexador.negocio.servicios.busqueda.ParamPeriodoRepositorioVO)
     */
    public es.pode.indexador.negocio.servicios.busqueda.ResultadoRecordVO[] busquedaRepositorio(es.pode.indexador.negocio.servicios.busqueda.ParamPeriodoRepositorioVO paramBusq)
    {
        if (paramBusq == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaRepositorio(es.pode.indexador.negocio.servicios.busqueda.ParamPeriodoRepositorioVO paramBusq) - 'paramBusq' can not be null");
        }
        try
        {
            return this.handleBusquedaRepositorio(paramBusq);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaRepositorio(es.pode.indexador.negocio.servicios.busqueda.ParamPeriodoRepositorioVO paramBusq)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #busquedaRepositorio(es.pode.indexador.negocio.servicios.busqueda.ParamPeriodoRepositorioVO)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.ResultadoRecordVO[] handleBusquedaRepositorio(es.pode.indexador.negocio.servicios.busqueda.ParamPeriodoRepositorioVO paramBusq)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#fechaInicioRepositorio()
     */
    public java.util.Calendar fechaInicioRepositorio()
    {
        try
        {
            return this.handleFechaInicioRepositorio();
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.fechaInicioRepositorio()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #fechaInicioRepositorio()}
      */
    protected abstract java.util.Calendar handleFechaInicioRepositorio()
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#obtenerODERandom()
     */
    public es.pode.indexador.negocio.servicios.busqueda.DocVO obtenerODERandom()
    {
        try
        {
            return this.handleObtenerODERandom();
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.obtenerODERandom()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerODERandom()}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.DocVO handleObtenerODERandom()
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#obtenerRepositorio()
     */
    public es.pode.indexador.negocio.servicios.busqueda.ResultadoRepositorioVO[] obtenerRepositorio()
    {
        try
        {
            return this.handleObtenerRepositorio();
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.obtenerRepositorio()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerRepositorio()}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.ResultadoRepositorioVO[] handleObtenerRepositorio()
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#obtenerCatalogoRepositorioParam(java.lang.Integer)
     */
    public es.pode.indexador.negocio.servicios.busqueda.ResultadoRepositorioVO[] obtenerCatalogoRepositorioParam(java.lang.Integer nivelAgregacion)
    {
        if (nivelAgregacion == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.obtenerCatalogoRepositorioParam(java.lang.Integer nivelAgregacion) - 'nivelAgregacion' can not be null");
        }
        try
        {
            return this.handleObtenerCatalogoRepositorioParam(nivelAgregacion);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.obtenerCatalogoRepositorioParam(java.lang.Integer nivelAgregacion)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerCatalogoRepositorioParam(java.lang.Integer)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.ResultadoRepositorioVO[] handleObtenerCatalogoRepositorioParam(java.lang.Integer nivelAgregacion)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#obtenerTotalesRepositorio()
     */
    public es.pode.indexador.negocio.servicios.busqueda.ResultadosCountVO obtenerTotalesRepositorio()
    {
        try
        {
            return this.handleObtenerTotalesRepositorio();
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.obtenerTotalesRepositorio()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerTotalesRepositorio()}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.ResultadosCountVO handleObtenerTotalesRepositorio()
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService#busquedaLOM_ESVSQL(es.pode.indexador.negocio.servicios.busqueda.QuerySimpleVO)
     */
    public es.pode.indexador.negocio.servicios.busqueda.DocumentosLOM_ESVO busquedaLOM_ESVSQL(es.pode.indexador.negocio.servicios.busqueda.QuerySimpleVO paramBusqueda)
    {
        if (paramBusqueda == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaLOM_ESVSQL(es.pode.indexador.negocio.servicios.busqueda.QuerySimpleVO paramBusqueda) - 'paramBusqueda' can not be null");
        }
        try
        {
            return this.handleBusquedaLOM_ESVSQL(paramBusqueda);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService.busquedaLOM_ESVSQL(es.pode.indexador.negocio.servicios.busqueda.QuerySimpleVO paramBusqueda)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #busquedaLOM_ESVSQL(es.pode.indexador.negocio.servicios.busqueda.QuerySimpleVO)}
      */
    protected abstract es.pode.indexador.negocio.servicios.busqueda.DocumentosLOM_ESVO handleBusquedaLOM_ESVSQL(es.pode.indexador.negocio.servicios.busqueda.QuerySimpleVO paramBusqueda)
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.indexador.PrincipalStore.get();
    }
}