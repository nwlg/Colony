// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.indexador.negocio.servicios.auditoria;

import net.sf.dozer.util.mapping.MapperIF;

import org.apache.log4j.Logger;


/**
 * <p>
 * Spring Service base class for <code>es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService
 */
public abstract class SrvAuditoriaIndexadorServiceBase
    implements es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService
{

		 protected static final Logger logger = Logger.getLogger(SrvAuditoriaIndexadorServiceBase.class);


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


	
	        
    
	    	    private es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService srvBuscadorService;
	
	    /**
	     * Sets the reference to <code>srvBuscadorService</code>.
	     */
	    public void setSrvBuscadorService(es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService srvBuscadorService)
	    {
	        this.srvBuscadorService = srvBuscadorService;
	    }
	
	    /**
	     * Gets the reference to <code>srvBuscadorService</code>.
	     */
	    protected es.pode.indexador.negocio.servicios.busqueda.SrvBuscadorService getSrvBuscadorService()
	    {
	        return this.srvBuscadorService;
	    }
	    
	        
    private es.pode.indexador.negocio.dominio.IndiceDao indiceDao;

    /**
     * Sets the reference to <code>indice</code>'s DAO.
     */
    public void setIndiceDao(es.pode.indexador.negocio.dominio.IndiceDao indiceDao)
    {
        this.indiceDao = indiceDao;
    }

    /**
     * Gets the reference to <code>indice</code>'s DAO.
     */
    protected es.pode.indexador.negocio.dominio.IndiceDao getIndiceDao()
    {
        return this.indiceDao;
    }


    /**
     * @see es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService#coberturaArbolCurricular(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO)
     */
    public es.pode.indexador.negocio.servicios.auditoria.CoberturaVO[] coberturaArbolCurricular(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO parametroAuditoria)
    {
        if (parametroAuditoria == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService.coberturaArbolCurricular(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO parametroAuditoria) - 'parametroAuditoria' can not be null");
        }
        try
        {
            return this.handleCoberturaArbolCurricular(parametroAuditoria);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService.coberturaArbolCurricular(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO parametroAuditoria)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #coberturaArbolCurricular(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO)}
      */
    protected abstract es.pode.indexador.negocio.servicios.auditoria.CoberturaVO[] handleCoberturaArbolCurricular(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO parametroAuditoria)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService#coberturaNivelAgregacion(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO)
     */
    public es.pode.indexador.negocio.servicios.auditoria.CoberturaVO[] coberturaNivelAgregacion(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO parametroAuditoria)
    {
        if (parametroAuditoria == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService.coberturaNivelAgregacion(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO parametroAuditoria) - 'parametroAuditoria' can not be null");
        }
        try
        {
            return this.handleCoberturaNivelAgregacion(parametroAuditoria);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService.coberturaNivelAgregacion(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO parametroAuditoria)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #coberturaNivelAgregacion(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO)}
      */
    protected abstract es.pode.indexador.negocio.servicios.auditoria.CoberturaVO[] handleCoberturaNivelAgregacion(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO parametroAuditoria)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService#coberturaLicencias(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO)
     */
    public es.pode.indexador.negocio.servicios.auditoria.CoberturaVO[] coberturaLicencias(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO parametroAuditoria)
    {
        if (parametroAuditoria == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService.coberturaLicencias(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO parametroAuditoria) - 'parametroAuditoria' can not be null");
        }
        try
        {
            return this.handleCoberturaLicencias(parametroAuditoria);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService.coberturaLicencias(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO parametroAuditoria)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #coberturaLicencias(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO)}
      */
    protected abstract es.pode.indexador.negocio.servicios.auditoria.CoberturaVO[] handleCoberturaLicencias(es.pode.indexador.negocio.servicios.auditoria.ParametroAuditIndexadorVO parametroAuditoria)
        throws java.lang.Exception;

    /**
     * @see es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService#obtenerURLImagenPequena(java.lang.String, java.lang.String[])
     */
    public java.lang.String[] obtenerURLImagenPequena(java.lang.String idioma, java.lang.String[] identificadores)
    {
        if (identificadores == null)
        {
            throw new IllegalArgumentException(
                "es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService.obtenerURLImagenPequena(java.lang.String idioma, java.lang.String[] identificadores) - 'identificadores' can not be null");
        }
        try
        {
            return this.handleObtenerURLImagenPequena(idioma, identificadores);
        }
        catch (Throwable th)
        {
            throw new es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorServiceException(
                "Error performing 'es.pode.indexador.negocio.servicios.auditoria.SrvAuditoriaIndexadorService.obtenerURLImagenPequena(java.lang.String idioma, java.lang.String[] identificadores)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerURLImagenPequena(java.lang.String, java.lang.String[])}
      */
    protected abstract java.lang.String[] handleObtenerURLImagenPequena(java.lang.String idioma, java.lang.String[] identificadores)
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.indexador.PrincipalStore.get();
    }
}