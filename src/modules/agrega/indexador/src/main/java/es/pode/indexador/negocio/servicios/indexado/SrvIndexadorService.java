// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringService.vsl in andromda-spring-cartridge.
//
package es.pode.indexador.negocio.servicios.indexado;

/**
 * <p>
 * Este servicio implementa todos los metodos necesarios para
 * indexar informacion en los indices. Ademas de indexar, se puede
 * gestionar el reindexado y la eliminacion de elementos.
 * </p>
 */
public interface SrvIndexadorService
{
    public es.pode.indexador.negocio.servicios.indexado.IndexadorVO[] indexarODE(es.pode.indexador.negocio.servicios.indexado.IdODEVO[] localizador)
        throws es.pode.indexador.negocio.servicios.indexado.IndexaODEException;

  /**
   * <p>
   * Este metodo reindexa un array de ODEs (los bora del indice y los
   * indexa) para todos los idiomas disponibles.
   * </p>
      * @return es.pode.indexador.negocio.servicios.indexado.IndexadorVO[]
   * @throws throws es.pode.indexador.negocio.servicios.indexado.ReindexaODEException Exception
   */
    public es.pode.indexador.negocio.servicios.indexado.IndexadorVO[] reindexarODE(es.pode.indexador.negocio.servicios.indexado.IdODEVO[] localizador)
        throws es.pode.indexador.negocio.servicios.indexado.ReindexaODEException;

  /**
   * <p>
   * Eliminacion de ODEs de los indices.
   * </p>
      * @param idODE  Array de identificadores alfanumericos de los ODEs que se quieren eliminar.
      * @return es.pode.indexador.negocio.servicios.indexado.IndexadorVO[]
   * @throws throws es.pode.indexador.negocio.servicios.indexado.EliminaODEException Exception
   */
    public es.pode.indexador.negocio.servicios.indexado.IndexadorVO[] eliminarODE(java.lang.String[] idODE)
        throws es.pode.indexador.negocio.servicios.indexado.EliminaODEException;

  /**
   * <p>
   * Se regenera el indice con la lista de ODEs que se le pasa. Se
   * borra el indice del idioma indicado y se puebla con los ODEs
   * suministrados.
   * </p>
      * @param idioma  Codigo de idioma correspondiente al indice que se quiere regenerar.
         * @param odes  Contenido de los ODEs que se quieren indexar.
      * @return es.pode.indexador.negocio.servicios.indexado.IndexadorVO[]
   * @throws throws es.pode.indexador.negocio.servicios.indexado.IndexacionTotalException Exception
   */
    public es.pode.indexador.negocio.servicios.indexado.IndexadorVO[] regenerarIndice(java.lang.String idioma, es.pode.indexador.negocio.servicios.indexado.IdODEVO[] odes)
        throws es.pode.indexador.negocio.servicios.indexado.IndexacionTotalException;

  /**
   * <p>
   * Este metodo regenera todos los indices del repositorio con los
   * ODEs que se le pasan en el momento. Toma como parametro un
   * identificador de tarea donde escribe el resultado de la
   * ejecucion. Cada ODE se introduce en el indice del idioma al que
   * pertenece.
   * </p>
   * <p>
   * Se devuelve un array con el exito o fracaso de la regeneracion
   * para cada ode.
   * </p>
      * @param idTarea  Identificador de la tarea.
         * @param odes  ODEs que se utilizan para la regeneracion de los indices.
      * @return es.pode.indexador.negocio.servicios.indexado.IndexadorVO[]
   * @throws throws es.pode.indexador.negocio.servicios.indexado.ReindexadoException Exception
   */
    public es.pode.indexador.negocio.servicios.indexado.IndexadorVO[] regenerarIndices(java.lang.Long idTarea, es.pode.indexador.negocio.servicios.indexado.IdODEVO[] odes)
        throws es.pode.indexador.negocio.servicios.indexado.ReindexadoException;

}
