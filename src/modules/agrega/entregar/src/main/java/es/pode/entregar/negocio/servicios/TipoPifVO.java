// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: ValueObject.vsl in andromda-java-cartridge.
//
package es.pode.entregar.negocio.servicios;

/**
 * 
 */
public class TipoPifVO
    implements java.io.Serializable
{

    /**
     * Constructor por defecto
     */        
    public TipoPifVO()
    {
    }

    /**
     * Constructor taking all properties.
     * @param idODE  Identificador del ODE a exportar
     * @param tipoPif  indica el tipo de formato que se quiere exportar. los posibles valores posibles son:
 SCORM_2004
 SCORM_2004_SIN_SUBMANIFIESTO
 SCORM_12
 IMS_CP
     * @param idioma  
     */
    public TipoPifVO(
        java.lang.String idODE,
        java.lang.String tipoPif,
        java.lang.String idioma)

    {
        this.idODE = idODE;
        this.tipoPif = tipoPif;
        this.idioma = idioma;
    }

    /**
     * Copies constructor from other TipoPifVO
     * @param otherBean TipoPifVO 
     */
    public TipoPifVO(TipoPifVO otherBean)
    {
        if (otherBean != null)
        {
            this.idODE = otherBean.getIdODE();
            this.tipoPif = otherBean.getTipoPif();
            this.idioma = otherBean.getIdioma();
        }
    }

    private java.lang.String idODE;

    /**
     * <p>
     * Identificador del ODE a exportar
     * </p>
     * @return java.lang.String
     */
    public java.lang.String getIdODE()
    {
        return this.idODE;
    }

    /**
   * <p>
   * Identificador del ODE a exportar
   * </p>
     *  @param idODE  Identificador del ODE a exportar  
     */
    public void setIdODE(java.lang.String idODE)
    {
        this.idODE = idODE;
    }

    private java.lang.String tipoPif;

    /**
     * <p>
     * indica el tipo de formato que se quiere exportar. los posibles
     * valores posibles son:
     * </p>
     * <p>
     * SCORM_2004
     * </p>
     * <p>
     * SCORM_2004_SIN_SUBMANIFIESTO
     * </p>
     * <p>
     * SCORM_12
     * </p>
     * <p>
     * IMS_CP
     * </p>
     * @return java.lang.String
     */
    public java.lang.String getTipoPif()
    {
        return this.tipoPif;
    }

    /**
   * <p>
   * indica el tipo de formato que se quiere exportar. los posibles
   * valores posibles son:
   * </p>
   * <p>
   * SCORM_2004
   * </p>
   * <p>
   * SCORM_2004_SIN_SUBMANIFIESTO
   * </p>
   * <p>
   * SCORM_12
   * </p>
   * <p>
   * IMS_CP
   * </p>
     *  @param tipoPif  indica el tipo de formato que se quiere exportar. los posibles valores posibles son:
 SCORM_2004
 SCORM_2004_SIN_SUBMANIFIESTO
 SCORM_12
 IMS_CP  
     */
    public void setTipoPif(java.lang.String tipoPif)
    {
        this.tipoPif = tipoPif;
    }

    private java.lang.String idioma;

    public java.lang.String getIdioma()
    {
        return this.idioma;
    }

    public void setIdioma(java.lang.String idioma)
    {
        this.idioma = idioma;
    }

}