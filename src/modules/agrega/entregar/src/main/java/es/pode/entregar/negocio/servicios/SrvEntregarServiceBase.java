// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.entregar.negocio.servicios;

import net.sf.dozer.util.mapping.MapperIF;

import org.apache.log4j.Logger;


/**
 * <p>
 * Spring Service base class for <code>es.pode.entregar.negocio.servicios.SrvEntregarService</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.entregar.negocio.servicios.SrvEntregarService
 */
public abstract class SrvEntregarServiceBase
    implements es.pode.entregar.negocio.servicios.SrvEntregarService
{

		 protected static final Logger logger = Logger.getLogger(SrvEntregarServiceBase.class);


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


	
			
    protected final es.pode.validador.negocio.servicio.SrvValidadorService getSrvValidadorService()
	        throws java.lang.Exception
	    {
            String srvValidadorServiceFile="importedServices.properties";	    
	          java.io.InputStream srvValidadorServiceInputStream=SrvEntregarServiceBase.class.getClassLoader().getResourceAsStream(srvValidadorServiceFile);
	          java.util.Properties srvValidadorServiceProperties = new java.util.Properties();
	          srvValidadorServiceProperties.load(srvValidadorServiceInputStream);
	          String srvValidadorServiceEndPointAddress="";
	          srvValidadorServiceEndPointAddress=(String) srvValidadorServiceProperties.get("srvValidadorServicePort");
			  logger.debug("srvValidadorServiceEndPointAddress del fichero --> " + srvValidadorServiceEndPointAddress);
			  es.pode.validador.negocio.servicio.SrvValidadorServiceService srvValidadorService = new es.pode.validador.negocio.servicio.SrvValidadorServiceServiceLocator();                                                                                                                                                                                                                                                    
            if (srvValidadorServiceEndPointAddress.length()>0) 
					  ((es.pode.validador.negocio.servicio.SrvValidadorServiceServiceLocator)srvValidadorService).setSrvValidadorServiceEndpointAddress(srvValidadorServiceEndPointAddress);
	    	    es.pode.validador.negocio.servicio.SrvValidadorService port = srvValidadorService.getSrvValidadorService();	    
	          return port;
	    }

    
    
	
			
    protected final es.pode.localizador.negocio.servicios.SrvLocalizadorService getSrvLocalizadorService()
	        throws java.lang.Exception
	    {
            String srvLocalizadorServiceFile="importedServices.properties";	    
	          java.io.InputStream srvLocalizadorServiceInputStream=SrvEntregarServiceBase.class.getClassLoader().getResourceAsStream(srvLocalizadorServiceFile);
	          java.util.Properties srvLocalizadorServiceProperties = new java.util.Properties();
	          srvLocalizadorServiceProperties.load(srvLocalizadorServiceInputStream);
	          String srvLocalizadorServiceEndPointAddress="";
	          srvLocalizadorServiceEndPointAddress=(String) srvLocalizadorServiceProperties.get("srvLocalizadorServicePort");
			  logger.debug("srvLocalizadorServiceEndPointAddress del fichero --> " + srvLocalizadorServiceEndPointAddress);
			  es.pode.localizador.negocio.servicios.SrvLocalizadorServiceService srvLocalizadorService = new es.pode.localizador.negocio.servicios.SrvLocalizadorServiceServiceLocator();                                                                                                                                                                                                                                                    
            if (srvLocalizadorServiceEndPointAddress.length()>0) 
					  ((es.pode.localizador.negocio.servicios.SrvLocalizadorServiceServiceLocator)srvLocalizadorService).setSrvLocalizadorServiceEndpointAddress(srvLocalizadorServiceEndPointAddress);
	    	    es.pode.localizador.negocio.servicios.SrvLocalizadorService port = srvLocalizadorService.getSrvLocalizadorService();	    
	          return port;
	    }

    
    
	
	        
    
	    	    	    
		    private es.pode.parseadorXML.SCORM2004Dao scormDao;
		
		    /**
		     * Sets the reference to <code>scormDao</code>.
		     */
		    public void setScormDao(es.pode.parseadorXML.SCORM2004Dao scormDao)
		    {
		        this.scormDao = scormDao;
		    }
		
		    /**
		     * Gets the reference to <code>scormDao</code>.
		     */
		    protected es.pode.parseadorXML.SCORM2004Dao getScormDao()
		    {
		        return this.scormDao;
		    }
	    
	        
	
	        
    
	    	    	    
		    private es.pode.soporte.zip.TrueZipDaoImpl zipDao;
		
		    /**
		     * Sets the reference to <code>zipDao</code>.
		     */
		    public void setZipDao(es.pode.soporte.zip.TrueZipDaoImpl zipDao)
		    {
		        this.zipDao = zipDao;
		    }
		
		    /**
		     * Gets the reference to <code>zipDao</code>.
		     */
		    protected es.pode.soporte.zip.TrueZipDaoImpl getZipDao()
		    {
		        return this.zipDao;
		    }
	    
	        
	
	        
    
	    	    	    
		    private es.pode.entregar.servicio.dominio.EntregarDozerDao entregarDozerDao;
		
		    /**
		     * Sets the reference to <code>entregarDozerDao</code>.
		     */
		    public void setEntregarDozerDao(es.pode.entregar.servicio.dominio.EntregarDozerDao entregarDozerDao)
		    {
		        this.entregarDozerDao = entregarDozerDao;
		    }
		
		    /**
		     * Gets the reference to <code>entregarDozerDao</code>.
		     */
		    protected es.pode.entregar.servicio.dominio.EntregarDozerDao getEntregarDozerDao()
		    {
		        return this.entregarDozerDao;
		    }
	    
	        

    /**
     * @see es.pode.entregar.negocio.servicios.SrvEntregarService#generarPaquetePIF(java.lang.String)
     */
    public es.pode.entregar.negocio.servicios.PaquetePifDriVO generarPaquetePIF(java.lang.String identificador)
        throws es.pode.entregar.negocio.servicios.GeneraPIFException
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.entregar.negocio.servicios.SrvEntregarService.generarPaquetePIF(java.lang.String identificador) - 'identificador' can not be null");
        }
        try
        {
            return this.handleGenerarPaquetePIF(identificador);
        }
        catch (es.pode.entregar.negocio.servicios.GeneraPIFException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.entregar.negocio.servicios.SrvEntregarServiceException(
                "Error performing 'es.pode.entregar.negocio.servicios.SrvEntregarService.generarPaquetePIF(java.lang.String identificador)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #generarPaquetePIF(java.lang.String)}
      */
    protected abstract es.pode.entregar.negocio.servicios.PaquetePifDriVO handleGenerarPaquetePIF(java.lang.String identificador)
        throws java.lang.Exception;

    /**
     * @see es.pode.entregar.negocio.servicios.SrvEntregarService#cargarObjManifest(java.lang.String, javax.activation.DataHandler)
     */
    public java.lang.String cargarObjManifest(java.lang.String usuario, javax.activation.DataHandler fichManifest)
        throws es.pode.entregar.negocio.servicios.CargarManifestExcepcion
    {
        if (usuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.entregar.negocio.servicios.SrvEntregarService.cargarObjManifest(java.lang.String usuario, javax.activation.DataHandler fichManifest) - 'usuario' can not be null");
        }
        if (fichManifest == null)
        {
            throw new IllegalArgumentException(
                "es.pode.entregar.negocio.servicios.SrvEntregarService.cargarObjManifest(java.lang.String usuario, javax.activation.DataHandler fichManifest) - 'fichManifest' can not be null");
        }
        try
        {
            return this.handleCargarObjManifest(usuario, fichManifest);
        }
        catch (es.pode.entregar.negocio.servicios.CargarManifestExcepcion ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.entregar.negocio.servicios.SrvEntregarServiceException(
                "Error performing 'es.pode.entregar.negocio.servicios.SrvEntregarService.cargarObjManifest(java.lang.String usuario, javax.activation.DataHandler fichManifest)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #cargarObjManifest(java.lang.String, javax.activation.DataHandler)}
      */
    protected abstract java.lang.String handleCargarObjManifest(java.lang.String usuario, javax.activation.DataHandler fichManifest)
        throws java.lang.Exception;

    /**
     * @see es.pode.entregar.negocio.servicios.SrvEntregarService#obtenerOrganizaciones(es.pode.entregar.negocio.servicios.ArgObtOrganizacionesVO)
     */
    public es.pode.entregar.negocio.servicios.ManifestVO obtenerOrganizaciones(es.pode.entregar.negocio.servicios.ArgObtOrganizacionesVO argObtenerOrganizaciones)
        throws es.pode.entregar.negocio.servicios.ObtenerOrganizacionesException
    {
        if (argObtenerOrganizaciones == null)
        {
            throw new IllegalArgumentException(
                "es.pode.entregar.negocio.servicios.SrvEntregarService.obtenerOrganizaciones(es.pode.entregar.negocio.servicios.ArgObtOrganizacionesVO argObtenerOrganizaciones) - 'argObtenerOrganizaciones' can not be null");
        }
        try
        {
            return this.handleObtenerOrganizaciones(argObtenerOrganizaciones);
        }
        catch (es.pode.entregar.negocio.servicios.ObtenerOrganizacionesException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.entregar.negocio.servicios.SrvEntregarServiceException(
                "Error performing 'es.pode.entregar.negocio.servicios.SrvEntregarService.obtenerOrganizaciones(es.pode.entregar.negocio.servicios.ArgObtOrganizacionesVO argObtenerOrganizaciones)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerOrganizaciones(es.pode.entregar.negocio.servicios.ArgObtOrganizacionesVO)}
      */
    protected abstract es.pode.entregar.negocio.servicios.ManifestVO handleObtenerOrganizaciones(es.pode.entregar.negocio.servicios.ArgObtOrganizacionesVO argObtenerOrganizaciones)
        throws java.lang.Exception;

    /**
     * @see es.pode.entregar.negocio.servicios.SrvEntregarService#generarPaquetePIFTipoPIF(es.pode.entregar.negocio.servicios.TipoPifVO)
     */
    public es.pode.entregar.negocio.servicios.PaquetePifVO generarPaquetePIFTipoPIF(es.pode.entregar.negocio.servicios.TipoPifVO tipoPifVO)
        throws es.pode.entregar.negocio.servicios.GeneraPIFTipoPIFException
    {
        if (tipoPifVO == null)
        {
            throw new IllegalArgumentException(
                "es.pode.entregar.negocio.servicios.SrvEntregarService.generarPaquetePIFTipoPIF(es.pode.entregar.negocio.servicios.TipoPifVO tipoPifVO) - 'tipoPifVO' can not be null");
        }
        try
        {
            return this.handleGenerarPaquetePIFTipoPIF(tipoPifVO);
        }
        catch (es.pode.entregar.negocio.servicios.GeneraPIFTipoPIFException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.entregar.negocio.servicios.SrvEntregarServiceException(
                "Error performing 'es.pode.entregar.negocio.servicios.SrvEntregarService.generarPaquetePIFTipoPIF(es.pode.entregar.negocio.servicios.TipoPifVO tipoPifVO)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #generarPaquetePIFTipoPIF(es.pode.entregar.negocio.servicios.TipoPifVO)}
      */
    protected abstract es.pode.entregar.negocio.servicios.PaquetePifVO handleGenerarPaquetePIFTipoPIF(es.pode.entregar.negocio.servicios.TipoPifVO tipoPifVO)
        throws java.lang.Exception;

    /**
     * @see es.pode.entregar.negocio.servicios.SrvEntregarService#obtenerTiposPIF()
     */
    public java.lang.String[] obtenerTiposPIF()
    {
        try
        {
            return this.handleObtenerTiposPIF();
        }
        catch (Throwable th)
        {
            throw new es.pode.entregar.negocio.servicios.SrvEntregarServiceException(
                "Error performing 'es.pode.entregar.negocio.servicios.SrvEntregarService.obtenerTiposPIF()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerTiposPIF()}
      */
    protected abstract java.lang.String[] handleObtenerTiposPIF()
        throws java.lang.Exception;

    /**
     * @see es.pode.entregar.negocio.servicios.SrvEntregarService#estoyActivo()
     */
    public boolean estoyActivo()
    {
        try
        {
            return this.handleEstoyActivo();
        }
        catch (Throwable th)
        {
            throw new es.pode.entregar.negocio.servicios.SrvEntregarServiceException(
                "Error performing 'es.pode.entregar.negocio.servicios.SrvEntregarService.estoyActivo()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #estoyActivo()}
      */
    protected abstract boolean handleEstoyActivo()
        throws java.lang.Exception;

    /**
     * @see es.pode.entregar.negocio.servicios.SrvEntregarService#localizacionPaquetePIF(java.lang.String)
     */
    public es.pode.entregar.negocio.servicios.LocalizadorAdlVO localizacionPaquetePIF(java.lang.String identificador)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.entregar.negocio.servicios.SrvEntregarService.localizacionPaquetePIF(java.lang.String identificador) - 'identificador' can not be null");
        }
        try
        {
            return this.handleLocalizacionPaquetePIF(identificador);
        }
        catch (Throwable th)
        {
            throw new es.pode.entregar.negocio.servicios.SrvEntregarServiceException(
                "Error performing 'es.pode.entregar.negocio.servicios.SrvEntregarService.localizacionPaquetePIF(java.lang.String identificador)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #localizacionPaquetePIF(java.lang.String)}
      */
    protected abstract es.pode.entregar.negocio.servicios.LocalizadorAdlVO handleLocalizacionPaquetePIF(java.lang.String identificador)
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.entregar.negocio.PrincipalStore.get();
    }
}