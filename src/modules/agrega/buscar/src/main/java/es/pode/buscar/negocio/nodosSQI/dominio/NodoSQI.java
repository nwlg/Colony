// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package es.pode.buscar.negocio.nodosSQI.dominio;

/**
 * <p>
 * Esta clase representa toda la informacion que se va a almacenar
 * de un nodo SQI
 * </p>
 */
public abstract class NodoSQI
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -6467302291402920857L;

    private java.lang.String urlServicio;

    /**
     * <p>
     * La URL del servicio
     * </p>
     */
    public java.lang.String getUrlServicio()
    {
        return this.urlServicio;
    }

    public void setUrlServicio(java.lang.String urlServicio)
    {
        this.urlServicio = urlServicio;
    }

    private java.lang.String gestorSesion;

    /**
     * <p>
     * La URL del gestor de sesiones
     * </p>
     */
    public java.lang.String getGestorSesion()
    {
        return this.gestorSesion;
    }

    public void setGestorSesion(java.lang.String gestorSesion)
    {
        this.gestorSesion = gestorSesion;
    }

    private java.lang.String lenguajeConsulta;

    /**
     * <p>
     * El lenguaje de consulta
     * </p>
     */
    public java.lang.String getLenguajeConsulta()
    {
        return this.lenguajeConsulta;
    }

    public void setLenguajeConsulta(java.lang.String lenguajeConsulta)
    {
        this.lenguajeConsulta = lenguajeConsulta;
    }

    private java.lang.String lenguajeRespuesta;

    /**
     * <p>
     * El lenguaje de respuesta
     * </p>
     */
    public java.lang.String getLenguajeRespuesta()
    {
        return this.lenguajeRespuesta;
    }

    public void setLenguajeRespuesta(java.lang.String lenguajeRespuesta)
    {
        this.lenguajeRespuesta = lenguajeRespuesta;
    }

    private java.lang.String descripcionNodo;

    /**
     * <p>
     * La descripcion o "nombre" del nodo
     * </p>
     */
    public java.lang.String getDescripcionNodo()
    {
        return this.descripcionNodo;
    }

    public void setDescripcionNodo(java.lang.String descripcionNodo)
    {
        this.descripcionNodo = descripcionNodo;
    }

    private java.lang.String usuario;

    /**
     * <p>
     * El usuario
     * </p>
     */
    public java.lang.String getUsuario()
    {
        return this.usuario;
    }

    public void setUsuario(java.lang.String usuario)
    {
        this.usuario = usuario;
    }

    private java.lang.String clave;

    /**
     * <p>
     * La clave del usuario
     * </p>
     */
    public java.lang.String getClave()
    {
        return this.clave;
    }

    public void setClave(java.lang.String clave)
    {
        this.clave = clave;
    }

    private java.lang.String identificadorSesion;

    /**
     * <p>
     * El identificador de la sesion
     * </p>
     */
    public java.lang.String getIdentificadorSesion()
    {
        return this.identificadorSesion;
    }

    public void setIdentificadorSesion(java.lang.String identificadorSesion)
    {
        this.identificadorSesion = identificadorSesion;
    }

    private java.lang.String nombreNodo;

    /**
     * <p>
     * El nombre del nodo de tipo SQI
     * </p>
     */
    public java.lang.String getNombreNodo()
    {
        return this.nombreNodo;
    }

    public void setNombreNodo(java.lang.String nombreNodo)
    {
        this.nombreNodo = nombreNodo;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    /**
     * Returns <code>true</code> if the argument is an NodoSQI instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof NodoSQI))
        {
            return false;
        }
        final NodoSQI that = (NodoSQI)object;
        if (this.id == null || that.id == null || !this.id.equals(that.id))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link es.pode.buscar.negocio.nodosSQI.dominio.NodoSQI}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link es.pode.buscar.negocio.nodosSQI.dominio.NodoSQI}.
         */
        public static es.pode.buscar.negocio.nodosSQI.dominio.NodoSQI newInstance()
        {
            return new es.pode.buscar.negocio.nodosSQI.dominio.NodoSQIImpl();
        }
    }

// HibernateEntity.vsl merge-point
}