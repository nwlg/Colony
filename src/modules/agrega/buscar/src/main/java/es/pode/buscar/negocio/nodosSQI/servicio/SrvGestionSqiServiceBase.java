// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.buscar.negocio.nodosSQI.servicio;

import net.sf.dozer.util.mapping.MapperIF;

/**
 * <p>
 * Spring Service base class for <code>es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService
 */
public abstract class SrvGestionSqiServiceBase
    implements es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService
{


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


    private es.pode.buscar.negocio.nodosSQI.dominio.NodoSQIDao nodoSQIDao;

    /**
     * Sets the reference to <code>nodoSQI</code>'s DAO.
     */
    public void setNodoSQIDao(es.pode.buscar.negocio.nodosSQI.dominio.NodoSQIDao nodoSQIDao)
    {
        this.nodoSQIDao = nodoSQIDao;
    }

    /**
     * Gets the reference to <code>nodoSQI</code>'s DAO.
     */
    protected es.pode.buscar.negocio.nodosSQI.dominio.NodoSQIDao getNodoSQIDao()
    {
        return this.nodoSQIDao;
    }


    /**
     * @see es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService#altaNodoSQI(es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO)
     */
    public java.lang.Long altaNodoSQI(es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO nodoSQI)
    {
        if (nodoSQI == null)
        {
            throw new IllegalArgumentException(
                "es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService.altaNodoSQI(es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO nodoSQI) - 'nodoSQI' can not be null");
        }
        try
        {
            return this.handleAltaNodoSQI(nodoSQI);
        }
        catch (Throwable th)
        {
            throw new es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiServiceException(
                "Error performing 'es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService.altaNodoSQI(es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO nodoSQI)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #altaNodoSQI(es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO)}
      */
    protected abstract java.lang.Long handleAltaNodoSQI(es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO nodoSQI)
        throws java.lang.Exception;

    /**
     * @see es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService#bajaNodosSQI(java.lang.Long[])
     */
    public void bajaNodosSQI(java.lang.Long[] ids)
    {
        if (ids == null)
        {
            throw new IllegalArgumentException(
                "es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService.bajaNodosSQI(java.lang.Long[] ids) - 'ids' can not be null");
        }
        try
        {
            this.handleBajaNodosSQI(ids);
        }
        catch (Throwable th)
        {
            throw new es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiServiceException(
                "Error performing 'es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService.bajaNodosSQI(java.lang.Long[] ids)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #bajaNodosSQI(java.lang.Long[])}
      */
    protected abstract void handleBajaNodosSQI(java.lang.Long[] ids)
        throws java.lang.Exception;

    /**
     * @see es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService#consultaNodosSQI(java.lang.Long[])
     */
    public es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO[] consultaNodosSQI(java.lang.Long[] ids)
    {
        if (ids == null)
        {
            throw new IllegalArgumentException(
                "es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService.consultaNodosSQI(java.lang.Long[] ids) - 'ids' can not be null");
        }
        try
        {
            return this.handleConsultaNodosSQI(ids);
        }
        catch (Throwable th)
        {
            throw new es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiServiceException(
                "Error performing 'es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService.consultaNodosSQI(java.lang.Long[] ids)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #consultaNodosSQI(java.lang.Long[])}
      */
    protected abstract es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO[] handleConsultaNodosSQI(java.lang.Long[] ids)
        throws java.lang.Exception;

    /**
     * @see es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService#modificarNodoSQI(es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO)
     */
    public java.lang.Long modificarNodoSQI(es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO nodo)
    {
        if (nodo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService.modificarNodoSQI(es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO nodo) - 'nodo' can not be null");
        }
        try
        {
            return this.handleModificarNodoSQI(nodo);
        }
        catch (Throwable th)
        {
            throw new es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiServiceException(
                "Error performing 'es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService.modificarNodoSQI(es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO nodo)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #modificarNodoSQI(es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO)}
      */
    protected abstract java.lang.Long handleModificarNodoSQI(es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO nodo)
        throws java.lang.Exception;

    /**
     * @see es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService#listarNodosSQI()
     */
    public es.pode.buscar.negocio.nodosSQI.servicio.NodoDescripcionSQIVO[] listarNodosSQI()
    {
        try
        {
            return this.handleListarNodosSQI();
        }
        catch (Throwable th)
        {
            throw new es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiServiceException(
                "Error performing 'es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService.listarNodosSQI()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #listarNodosSQI()}
      */
    protected abstract es.pode.buscar.negocio.nodosSQI.servicio.NodoDescripcionSQIVO[] handleListarNodosSQI()
        throws java.lang.Exception;

    /**
     * @see es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService#obtenerNodosSQI()
     */
    public es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO[] obtenerNodosSQI()
    {
        try
        {
            return this.handleObtenerNodosSQI();
        }
        catch (Throwable th)
        {
            throw new es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiServiceException(
                "Error performing 'es.pode.buscar.negocio.nodosSQI.servicio.SrvGestionSqiService.obtenerNodosSQI()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerNodosSQI()}
      */
    protected abstract es.pode.buscar.negocio.nodosSQI.servicio.NodoSQIVO[] handleObtenerNodosSQI()
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.buscar.negocio.PrincipalStore.get();
    }
}