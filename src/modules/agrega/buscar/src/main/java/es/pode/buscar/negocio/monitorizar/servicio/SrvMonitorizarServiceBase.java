// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.buscar.negocio.monitorizar.servicio;

import net.sf.dozer.util.mapping.MapperIF;

/**
 * <p>
 * Spring Service base class for <code>es.pode.buscar.negocio.monitorizar.servicio.SrvMonitorizarService</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.buscar.negocio.monitorizar.servicio.SrvMonitorizarService
 */
public abstract class SrvMonitorizarServiceBase
    implements es.pode.buscar.negocio.monitorizar.servicio.SrvMonitorizarService
{


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


	
	        
    private es.pode.buscar.negocio.administrar.servicio.SrvNodoService srvNodoService;

    /**
     * Sets the reference to <code>srvNodoService</code>.
     */
    public void setSrvNodoService(es.pode.buscar.negocio.administrar.servicio.SrvNodoService srvNodoService)
    {
        this.srvNodoService = srvNodoService;
    }

    /**
     * Gets the reference to <code>srvNodoService</code>.
     */
    protected es.pode.buscar.negocio.administrar.servicio.SrvNodoService getSrvNodoService()
    {
        return this.srvNodoService;
    }
    
    
    

    /**
     * @see es.pode.buscar.negocio.monitorizar.servicio.SrvMonitorizarService#obtenerEstadoNodos()
     */
    public es.pode.buscar.negocio.monitorizar.dominio.EstadoNodoVO[] obtenerEstadoNodos()
    {
        try
        {
            return this.handleObtenerEstadoNodos();
        }
        catch (Throwable th)
        {
            throw new es.pode.buscar.negocio.monitorizar.servicio.SrvMonitorizarServiceException(
                "Error performing 'es.pode.buscar.negocio.monitorizar.servicio.SrvMonitorizarService.obtenerEstadoNodos()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerEstadoNodos()}
      */
    protected abstract es.pode.buscar.negocio.monitorizar.dominio.EstadoNodoVO[] handleObtenerEstadoNodos()
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.buscar.negocio.PrincipalStore.get();
    }
}