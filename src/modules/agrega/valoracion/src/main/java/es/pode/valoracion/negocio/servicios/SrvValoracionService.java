// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringService.vsl in andromda-spring-cartridge.
//
package es.pode.valoracion.negocio.servicios;

/**
 * <p>
 * Clase que implementa el servicio de valoracion. Esta clase
 * permite gestionar la valoracion de los contenidos digitales de
 * la plataforma, asi como los comentarios introducidos por los
 * usuarios de los ODEs del repositorio.
 * </p>
 */
public interface SrvValoracionService
{
  /**
   * <p>
   * Este metodo introduce un comentario asociado al contenido
   * digital identificado por el identificador que le pasan.
   * </p>
      * @param idODE  Identificador del contenido digital.
         * @param comentario  Comentario asociado al contenido digital.
         * @param idiomaODE  Idioma del ODE
         * @param usuario  Persona que ha introducido el comentario.
      */
    public void introducirComentario(java.lang.String idODE, java.lang.String comentario, java.lang.String idiomaODE, java.lang.String usuario);

  /**
   * <p>
   * Este metodo permite consultar la valoracion para un contenido
   * digital concreto del que se indica el identificador.
   * </p>
      * @param idODE  Identificador del contenido digital.
      * @return java.lang.Float
   */
    public java.lang.Float consultarValoracion(java.lang.String idODE);

  /**
   * <p>
   * Este metodo recalcula la valoracion asociada al ODE del que se
   * pasa el identificador.
   * </p>
   * <p>
   * La finalidad del recalculo es la reindexacion del ODE con esta
   * iformacion.
   * </p>
   * <p>
   * Devuelve un codigo con el resultado de la operacion.
   * </p>
      * @param idODE  Identificador del contenido digital.
      * @return java.lang.String
   */
    public java.lang.String recalcularValoracionODE(java.lang.String idODE);

  /**
   * <p>
   * Este metodo devuelve la lista de comentarios asociados al
   * contenido digital identificado por el identificador que le
   * pasan.
   * </p>
   * <p>
   * Los devuelve ordenados por fecha de insercion, de mas antiguo a
   * mas reciente.
   * </p>
      * @param idODE  Identificador del contenido digital.
      * @return es.pode.valoracion.negocio.servicios.ComentarioVO[]
   */
    public es.pode.valoracion.negocio.servicios.ComentarioVO[] obtenerComentarios(java.lang.String idODE);

  /**
   * <p>
   * Este metodo elimina los comentarios correspondientes a los
   * identificadores que le pasan.
   * </p>
      * @param id  Lista de identificadores con los comentarios que se quieren eliminar.
      * @return java.lang.String
   */
    public java.lang.String eliminarComentarios(java.lang.Long[] id);

  /**
   * <p>
   * Este metodo devuelve la valoracion que ha tenido un ODE en un
   * periodo de tiempo dado.
   * </p>
      * @param idODE  Identificador del ODE.
         * @param fechaDesde  Fecha desde del periodo de tiempo en el que se esta interesado.
         * @param fechaHasta  Fecha hasta del periodo de actividad en el que se esta interesado.
      * @return java.lang.Float
   */
    public java.lang.Float consultaValoracionDesdeHasta(java.lang.String idODE, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta);

  /**
   * <p>
   * Este método devuelve la información del ODE  que le pasan con la
   * información de valoración para el periodo en el que se está
   * interesado.
   * </p>
      * @param idODE  Identificador alfanumérico del ODE
         * @param fechaDesde  Fecha desde la que se está interesado
         * @param fechaHasta  Fecha hasta la que se está interesado
      * @return es.pode.valoracion.negocio.servicios.auditoria.ValoracionODEVO
   */
    public es.pode.valoracion.negocio.servicios.auditoria.ValoracionODEVO obtenValoracionODEDesdeHasta(java.lang.String idODE, java.util.Calendar fechaDesde, java.util.Calendar fechaHasta);

  /**
   * <p>
   * Este método introduce un valoración correspondiente al ODE.
   * </p>
      * @param valoracion  Valoración asociada al ODE.
         * @param idODE  identificador alfanumérico del ode.
         * @param autor  Autor de la persona que ha realizado la valoracion.
         * @param idiomaODE  Idioma del ode.
      */
    public void introducirValoracion(java.lang.Float valoracion, java.lang.String idODE, java.lang.String autor, java.lang.String idiomaODE);

  /**
   * <p>
   * Método que elimina todas las valoraciones realizadas al ode con
   * identificador idODE. Devuelve un código del resultado de la
   * acción.
   * </p>
      * @param idODE  Identificador del ode del que se quieren eliminar las valoraciones.
      * @return java.lang.String
   */
    public java.lang.String eliminarTodasValoraciones(java.lang.String idODE);

  /**
   * <p>
   * Método que elimina todos los comentarios relacionados con el ode
   * con identificador idODE. Devuelve un código con el resultado de
   * la acción.
   * </p>
      * @param idODE  Identificador del ode del que se quieren eliminar todos los comentarios.
      * @return java.lang.String
   */
    public java.lang.String eliminarTodosComentarios(java.lang.String idODE);

}
