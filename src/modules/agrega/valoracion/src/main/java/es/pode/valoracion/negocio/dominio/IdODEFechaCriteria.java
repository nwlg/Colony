// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SearchCriteria.vsl in andromda-spring-cartridge.
//
package es.pode.valoracion.negocio.dominio;

/**
 * <p>
 * Este criterio de busqueda implementa la busqueda de comentarios
 * que pertenezcan a un ODE concreto devolviendo los resultados
 * ordenados por fecha.
 * </p>
 */
public class IdODEFechaCriteria
    implements java.io.Serializable
{

  /**
   * Constructor por defecto
   */
    public IdODEFechaCriteria()
    {
    }

    /**
     * Constructor taking all properties.
      * @param idODE java.lang.String
      * @param fecha java.util.Calendar
     */
    public IdODEFechaCriteria(
        java.lang.String idODE,
        java.util.Calendar fecha)

    {
        this.idODE = idODE;
        this.fecha = fecha;
    }

    /**
     * Copies constructor from other IdODEFechaCriteria
      * @param otherBean IdODEFechaCriteria
     */
    public IdODEFechaCriteria(IdODEFechaCriteria otherBean)
    {
        if (otherBean != null)
        {
            this.idODE = otherBean.getIdODE();
            this.fecha = otherBean.getFecha();
        }
    }

    /**
     * The first result to retrieve.
     */
    private java.lang.Integer firstResult;

    /**
     * Gets the first result to retrieve.
     *
     * @return the first result to retrieve
     */
    public java.lang.Integer getFirstResult()
    {
        return this.firstResult;
    }

    /**
     * Sets the first result to retrieve.
     *
     * @param firstResult the first result to retrieve
     */
    public void setFirstResult(java.lang.Integer firstResult)
    {
        this.firstResult = firstResult;
    }

    /**
     * The fetch size.
     */
    private java.lang.Integer fetchSize;

    /**
     * Gets the fetch size.
     *
     * @return the fetch size
     */
    public java.lang.Integer getFetchSize()
    {
        return this.fetchSize;
    }

    /**
     * Sets the fetch size.
     *
     * @param fetchSize the fetch size
     */
    public void setFetchSize(java.lang.Integer fetchSize)
    {
        this.fetchSize = fetchSize;
    }

    /**
     * The maximum size of the result set.
     */
    private java.lang.Integer maximumResultSize;

    /**
     * Gets the maximum size of the search result.
     *
     * @return the maximum size of the search result.
     */
    public java.lang.Integer getMaximumResultSize()
    {
        return this.maximumResultSize;
    }

    /**
     * Sets the maxmimum size of the result.
     *
     * @param maximumResultSize A number indicating how many results will be returned.
     */
    public void setMaximumResultSize(java.lang.Integer maximumResultSize)
    {
        this.maximumResultSize = maximumResultSize;
    }

    private java.lang.String idODE;

  /**
   * <p>
   * Identificador del objeto digital.
   * </p>
   * @return java.lang.String
   */
    public java.lang.String getIdODE()
    {
        return this.idODE;
    }

  /**
   * <p>
   * Identificador del objeto digital.
   * </p>
   *  @param idODE  Identificador del objeto digital. 
   */
    public void setIdODE(java.lang.String idODE)
    {
        this.idODE = idODE;
    }

    private java.util.Calendar fecha;

  /**
   * <p>
   * Fecha por la que se ordenan los resultados. No se utiliza como
   * parametro de busqueda.
   * </p>
   * @return java.util.Calendar
   */
    public java.util.Calendar getFecha()
    {
        return this.fecha;
    }

  /**
   * <p>
   * Fecha por la que se ordenan los resultados. No se utiliza como
   * parametro de busqueda.
   * </p>
   *  @param fecha  Fecha por la que se ordenan los resultados. No se utiliza como parametro de busqueda. 
   */
    public void setFecha(java.util.Calendar fecha)
    {
        this.fecha = fecha;
    }

}