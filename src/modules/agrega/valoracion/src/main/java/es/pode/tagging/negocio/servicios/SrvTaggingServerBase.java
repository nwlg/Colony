// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.tagging.negocio.servicios;

import net.sf.dozer.util.mapping.MapperIF;

import org.apache.log4j.Logger;


/**
 * <p>
 * Spring Service base class for <code>es.pode.tagging.negocio.servicios.SrvTaggingServer</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.tagging.negocio.servicios.SrvTaggingServer
 */
public abstract class SrvTaggingServerBase
    implements es.pode.tagging.negocio.servicios.SrvTaggingServer
{

		 protected static final Logger logger = Logger.getLogger(SrvTaggingServerBase.class);


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


    private es.pode.tagging.negocio.dominio.TaggingDao taggingDao;

    /**
     * Sets the reference to <code>tagging</code>'s DAO.
     */
    public void setTaggingDao(es.pode.tagging.negocio.dominio.TaggingDao taggingDao)
    {
        this.taggingDao = taggingDao;
    }

    /**
     * Gets the reference to <code>tagging</code>'s DAO.
     */
    protected es.pode.tagging.negocio.dominio.TaggingDao getTaggingDao()
    {
        return this.taggingDao;
    }


    /**
     * @see es.pode.tagging.negocio.servicios.SrvTaggingServer#introducirTags(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], java.lang.String)
     */
    public void introducirTags(java.lang.String idOde, java.lang.String titulo, java.lang.String idiomaCat, java.lang.String[] tags, java.lang.String idUsuario)
    {
        if (idOde == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.introducirTags(java.lang.String idOde, java.lang.String titulo, java.lang.String idiomaCat, java.lang.String[] tags, java.lang.String idUsuario) - 'idOde' can not be null");
        }
        if (titulo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.introducirTags(java.lang.String idOde, java.lang.String titulo, java.lang.String idiomaCat, java.lang.String[] tags, java.lang.String idUsuario) - 'titulo' can not be null");
        }
        if (idiomaCat == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.introducirTags(java.lang.String idOde, java.lang.String titulo, java.lang.String idiomaCat, java.lang.String[] tags, java.lang.String idUsuario) - 'idiomaCat' can not be null");
        }
        if (tags == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.introducirTags(java.lang.String idOde, java.lang.String titulo, java.lang.String idiomaCat, java.lang.String[] tags, java.lang.String idUsuario) - 'tags' can not be null");
        }
        if (idUsuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.introducirTags(java.lang.String idOde, java.lang.String titulo, java.lang.String idiomaCat, java.lang.String[] tags, java.lang.String idUsuario) - 'idUsuario' can not be null");
        }
        try
        {
            this.handleIntroducirTags(idOde, titulo, idiomaCat, tags, idUsuario);
        }
        catch (Throwable th)
        {
            throw new es.pode.tagging.negocio.servicios.SrvTaggingServerException(
                "Error performing 'es.pode.tagging.negocio.servicios.SrvTaggingServer.introducirTags(java.lang.String idOde, java.lang.String titulo, java.lang.String idiomaCat, java.lang.String[] tags, java.lang.String idUsuario)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #introducirTags(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], java.lang.String)}
      */
    protected abstract void handleIntroducirTags(java.lang.String idOde, java.lang.String titulo, java.lang.String idiomaCat, java.lang.String[] tags, java.lang.String idUsuario)
        throws java.lang.Exception;

    /**
     * @see es.pode.tagging.negocio.servicios.SrvTaggingServer#obtenerTagsDeUsuario(java.lang.String)
     */
    public es.pode.tagging.negocio.servicios.TagVO[] obtenerTagsDeUsuario(java.lang.String idUsuario)
    {
        if (idUsuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.obtenerTagsDeUsuario(java.lang.String idUsuario) - 'idUsuario' can not be null");
        }
        try
        {
            return this.handleObtenerTagsDeUsuario(idUsuario);
        }
        catch (Throwable th)
        {
            throw new es.pode.tagging.negocio.servicios.SrvTaggingServerException(
                "Error performing 'es.pode.tagging.negocio.servicios.SrvTaggingServer.obtenerTagsDeUsuario(java.lang.String idUsuario)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerTagsDeUsuario(java.lang.String)}
      */
    protected abstract es.pode.tagging.negocio.servicios.TagVO[] handleObtenerTagsDeUsuario(java.lang.String idUsuario)
        throws java.lang.Exception;

    /**
     * @see es.pode.tagging.negocio.servicios.SrvTaggingServer#obtenerOdesDeTagYUsuario(java.lang.String, java.lang.String)
     */
    public es.pode.tagging.negocio.servicios.TaggingVO[] obtenerOdesDeTagYUsuario(java.lang.String tag, java.lang.String idUsuario)
    {
        if (tag == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.obtenerOdesDeTagYUsuario(java.lang.String tag, java.lang.String idUsuario) - 'tag' can not be null");
        }
        if (idUsuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.obtenerOdesDeTagYUsuario(java.lang.String tag, java.lang.String idUsuario) - 'idUsuario' can not be null");
        }
        try
        {
            return this.handleObtenerOdesDeTagYUsuario(tag, idUsuario);
        }
        catch (Throwable th)
        {
            throw new es.pode.tagging.negocio.servicios.SrvTaggingServerException(
                "Error performing 'es.pode.tagging.negocio.servicios.SrvTaggingServer.obtenerOdesDeTagYUsuario(java.lang.String tag, java.lang.String idUsuario)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerOdesDeTagYUsuario(java.lang.String, java.lang.String)}
      */
    protected abstract es.pode.tagging.negocio.servicios.TaggingVO[] handleObtenerOdesDeTagYUsuario(java.lang.String tag, java.lang.String idUsuario)
        throws java.lang.Exception;

    /**
     * @see es.pode.tagging.negocio.servicios.SrvTaggingServer#obtenerTodosTags()
     */
    public es.pode.tagging.negocio.servicios.TagVO[] obtenerTodosTags()
    {
        try
        {
            return this.handleObtenerTodosTags();
        }
        catch (Throwable th)
        {
            throw new es.pode.tagging.negocio.servicios.SrvTaggingServerException(
                "Error performing 'es.pode.tagging.negocio.servicios.SrvTaggingServer.obtenerTodosTags()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerTodosTags()}
      */
    protected abstract es.pode.tagging.negocio.servicios.TagVO[] handleObtenerTodosTags()
        throws java.lang.Exception;

    /**
     * @see es.pode.tagging.negocio.servicios.SrvTaggingServer#obtenerOdesDeTag(java.lang.String)
     */
    public es.pode.tagging.negocio.servicios.TaggingVO[] obtenerOdesDeTag(java.lang.String tag)
    {
        if (tag == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.obtenerOdesDeTag(java.lang.String tag) - 'tag' can not be null");
        }
        try
        {
            return this.handleObtenerOdesDeTag(tag);
        }
        catch (Throwable th)
        {
            throw new es.pode.tagging.negocio.servicios.SrvTaggingServerException(
                "Error performing 'es.pode.tagging.negocio.servicios.SrvTaggingServer.obtenerOdesDeTag(java.lang.String tag)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerOdesDeTag(java.lang.String)}
      */
    protected abstract es.pode.tagging.negocio.servicios.TaggingVO[] handleObtenerOdesDeTag(java.lang.String tag)
        throws java.lang.Exception;

    /**
     * @see es.pode.tagging.negocio.servicios.SrvTaggingServer#eliminarTags(java.lang.String[])
     */
    public boolean eliminarTags(java.lang.String[] tagsABorrar)
    {
        if (tagsABorrar == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.eliminarTags(java.lang.String[] tagsABorrar) - 'tagsABorrar' can not be null");
        }
        try
        {
            return this.handleEliminarTags(tagsABorrar);
        }
        catch (Throwable th)
        {
            throw new es.pode.tagging.negocio.servicios.SrvTaggingServerException(
                "Error performing 'es.pode.tagging.negocio.servicios.SrvTaggingServer.eliminarTags(java.lang.String[] tagsABorrar)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #eliminarTags(java.lang.String[])}
      */
    protected abstract boolean handleEliminarTags(java.lang.String[] tagsABorrar)
        throws java.lang.Exception;

    /**
     * @see es.pode.tagging.negocio.servicios.SrvTaggingServer#modificarTag(java.lang.String, java.lang.String)
     */
    public boolean modificarTag(java.lang.String oldTag, java.lang.String newTag)
    {
        if (oldTag == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.modificarTag(java.lang.String oldTag, java.lang.String newTag) - 'oldTag' can not be null");
        }
        if (newTag == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.modificarTag(java.lang.String oldTag, java.lang.String newTag) - 'newTag' can not be null");
        }
        try
        {
            return this.handleModificarTag(oldTag, newTag);
        }
        catch (Throwable th)
        {
            throw new es.pode.tagging.negocio.servicios.SrvTaggingServerException(
                "Error performing 'es.pode.tagging.negocio.servicios.SrvTaggingServer.modificarTag(java.lang.String oldTag, java.lang.String newTag)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #modificarTag(java.lang.String, java.lang.String)}
      */
    protected abstract boolean handleModificarTag(java.lang.String oldTag, java.lang.String newTag)
        throws java.lang.Exception;

    /**
     * @see es.pode.tagging.negocio.servicios.SrvTaggingServer#modificarTagDeUsuario(java.lang.String, java.lang.String, java.lang.String)
     */
    public boolean modificarTagDeUsuario(java.lang.String oldTag, java.lang.String newTag, java.lang.String idUsuario)
    {
        if (oldTag == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.modificarTagDeUsuario(java.lang.String oldTag, java.lang.String newTag, java.lang.String idUsuario) - 'oldTag' can not be null");
        }
        if (newTag == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.modificarTagDeUsuario(java.lang.String oldTag, java.lang.String newTag, java.lang.String idUsuario) - 'newTag' can not be null");
        }
        if (idUsuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.modificarTagDeUsuario(java.lang.String oldTag, java.lang.String newTag, java.lang.String idUsuario) - 'idUsuario' can not be null");
        }
        try
        {
            return this.handleModificarTagDeUsuario(oldTag, newTag, idUsuario);
        }
        catch (Throwable th)
        {
            throw new es.pode.tagging.negocio.servicios.SrvTaggingServerException(
                "Error performing 'es.pode.tagging.negocio.servicios.SrvTaggingServer.modificarTagDeUsuario(java.lang.String oldTag, java.lang.String newTag, java.lang.String idUsuario)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #modificarTagDeUsuario(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract boolean handleModificarTagDeUsuario(java.lang.String oldTag, java.lang.String newTag, java.lang.String idUsuario)
        throws java.lang.Exception;

    /**
     * @see es.pode.tagging.negocio.servicios.SrvTaggingServer#eliminarTagsDeUsuario(java.lang.String[], java.lang.String)
     */
    public boolean eliminarTagsDeUsuario(java.lang.String[] tagsABorrar, java.lang.String idUsuario)
    {
        if (tagsABorrar == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.eliminarTagsDeUsuario(java.lang.String[] tagsABorrar, java.lang.String idUsuario) - 'tagsABorrar' can not be null");
        }
        if (idUsuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.eliminarTagsDeUsuario(java.lang.String[] tagsABorrar, java.lang.String idUsuario) - 'idUsuario' can not be null");
        }
        try
        {
            return this.handleEliminarTagsDeUsuario(tagsABorrar, idUsuario);
        }
        catch (Throwable th)
        {
            throw new es.pode.tagging.negocio.servicios.SrvTaggingServerException(
                "Error performing 'es.pode.tagging.negocio.servicios.SrvTaggingServer.eliminarTagsDeUsuario(java.lang.String[] tagsABorrar, java.lang.String idUsuario)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #eliminarTagsDeUsuario(java.lang.String[], java.lang.String)}
      */
    protected abstract boolean handleEliminarTagsDeUsuario(java.lang.String[] tagsABorrar, java.lang.String idUsuario)
        throws java.lang.Exception;

    /**
     * @see es.pode.tagging.negocio.servicios.SrvTaggingServer#obtenerTagsDeOde(java.lang.String)
     */
    public java.lang.String[] obtenerTagsDeOde(java.lang.String idOde)
    {
        if (idOde == null)
        {
            throw new IllegalArgumentException(
                "es.pode.tagging.negocio.servicios.SrvTaggingServer.obtenerTagsDeOde(java.lang.String idOde) - 'idOde' can not be null");
        }
        try
        {
            return this.handleObtenerTagsDeOde(idOde);
        }
        catch (Throwable th)
        {
            throw new es.pode.tagging.negocio.servicios.SrvTaggingServerException(
                "Error performing 'es.pode.tagging.negocio.servicios.SrvTaggingServer.obtenerTagsDeOde(java.lang.String idOde)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerTagsDeOde(java.lang.String)}
      */
    protected abstract java.lang.String[] handleObtenerTagsDeOde(java.lang.String idOde)
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.PrincipalStore.get();
    }
}