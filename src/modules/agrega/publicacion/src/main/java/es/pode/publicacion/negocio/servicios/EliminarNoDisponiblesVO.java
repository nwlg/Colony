// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: ValueObject.vsl in andromda-java-cartridge.
//
package es.pode.publicacion.negocio.servicios;

/**
 * <p>
 * Clase que alberga los atributos necesarios para el borrado en
 * bloque de ODEs.
 * </p>
 */
public class EliminarNoDisponiblesVO
    implements java.io.Serializable
{

    /**
     * Constructor por defecto
     */        
    public EliminarNoDisponiblesVO()
    {
    }

    /**
     * Constructor taking all properties.
     * @param fechaInicio  Fecha desde la que se esta interesado en borrar los ODEs no disponibles.
     * @param fechaFin  Fecha hasta la que se esta interesado en borrar los ODEs no disponibles.
     * @param idUsuarios  Identificadores de los usuarios de los que se quieren eliminar ODEs.
     * @param idTarea  Identificador de la tarea programada que invoca el servicio.
     */
    public EliminarNoDisponiblesVO(
        java.util.Calendar fechaInicio,
        java.util.Calendar fechaFin,
        java.lang.String[] idUsuarios,
        java.lang.Long idTarea)

    {
        this.fechaInicio = fechaInicio;
        this.fechaFin = fechaFin;
        this.idUsuarios = idUsuarios;
        this.idTarea = idTarea;
    }

    /**
     * Copies constructor from other EliminarNoDisponiblesVO
     * @param otherBean EliminarNoDisponiblesVO 
     */
    public EliminarNoDisponiblesVO(EliminarNoDisponiblesVO otherBean)
    {
        if (otherBean != null)
        {
            this.fechaInicio = otherBean.getFechaInicio();
            this.fechaFin = otherBean.getFechaFin();
            this.idUsuarios = otherBean.getIdUsuarios();
            this.idTarea = otherBean.getIdTarea();
        }
    }

    private java.util.Calendar fechaInicio;

    /**
     * <p>
     * Fecha desde la que se esta interesado en borrar los ODEs no
     * disponibles.
     * </p>
     * @return java.util.Calendar
     */
    public java.util.Calendar getFechaInicio()
    {
        return this.fechaInicio;
    }

    /**
   * <p>
   * Fecha desde la que se esta interesado en borrar los ODEs no
   * disponibles.
   * </p>
     *  @param fechaInicio  Fecha desde la que se esta interesado en borrar los ODEs no disponibles.  
     */
    public void setFechaInicio(java.util.Calendar fechaInicio)
    {
        this.fechaInicio = fechaInicio;
    }

    private java.util.Calendar fechaFin;

    /**
     * <p>
     * Fecha hasta la que se esta interesado en borrar los ODEs no
     * disponibles.
     * </p>
     * @return java.util.Calendar
     */
    public java.util.Calendar getFechaFin()
    {
        return this.fechaFin;
    }

    /**
   * <p>
   * Fecha hasta la que se esta interesado en borrar los ODEs no
   * disponibles.
   * </p>
     *  @param fechaFin  Fecha hasta la que se esta interesado en borrar los ODEs no disponibles.  
     */
    public void setFechaFin(java.util.Calendar fechaFin)
    {
        this.fechaFin = fechaFin;
    }

    private java.lang.String[] idUsuarios;

    /**
     * <p>
     * Identificadores de los usuarios de los que se quieren eliminar
     * ODEs.
     * </p>
     * @return java.lang.String[]
     */
    public java.lang.String[] getIdUsuarios()
    {
        return this.idUsuarios;
    }

    /**
   * <p>
   * Identificadores de los usuarios de los que se quieren eliminar
   * ODEs.
   * </p>
     *  @param idUsuarios  Identificadores de los usuarios de los que se quieren eliminar ODEs.  
     */
    public void setIdUsuarios(java.lang.String[] idUsuarios)
    {
        this.idUsuarios = idUsuarios;
    }

    private java.lang.Long idTarea;

    /**
     * <p>
     * Identificador de la tarea programada que invoca el servicio.
     * </p>
     * @return java.lang.Long
     */
    public java.lang.Long getIdTarea()
    {
        return this.idTarea;
    }

    /**
   * <p>
   * Identificador de la tarea programada que invoca el servicio.
   * </p>
     *  @param idTarea  Identificador de la tarea programada que invoca el servicio.  
     */
    public void setIdTarea(java.lang.Long idTarea)
    {
        this.idTarea = idTarea;
    }

}