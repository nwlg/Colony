// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package es.pode.publicacion.negocio.dominio;

/**
 * <p>
 * Esta entidad alberga los datos relevantes de un ODE cuando esta
 * en estado PUBLICADO.
 * </p>
 */
public abstract class OdePublicado
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -7766610690858325513L;

    private java.lang.String idODE;

  /**
   * <p>
   * El ido del ode que queremos saber en que idioma esta publicado
   * </p>
   * @return java.lang.String
   */
    public java.lang.String getIdODE()
    {
        return this.idODE;
    }

  /**
   * <p>
   * El ido del ode que queremos saber en que idioma esta publicado
   * </p>
   *  @param idODE  El ido del ode que queremos saber en que idioma esta publicado 
   */
    public void setIdODE(java.lang.String idODE)
    {
        this.idODE = idODE;
    }
    private java.lang.String idioma;

  /**
   * <p>
   * El idioma en el que esta publicado el ode
   * </p>
   * @return java.lang.String
   */
    public java.lang.String getIdioma()
    {
        return this.idioma;
    }

  /**
   * <p>
   * El idioma en el que esta publicado el ode
   * </p>
   *  @param idioma  El idioma en el que esta publicado el ode 
   */
    public void setIdioma(java.lang.String idioma)
    {
        this.idioma = idioma;
    }
    private java.lang.Long tamanio;

  /**
   * <p>
   * Tamanio del ODE en disco.
   * </p>
   * @return java.lang.Long
   */
    public java.lang.Long getTamanio()
    {
        return this.tamanio;
    }

  /**
   * <p>
   * Tamanio del ODE en disco.
   * </p>
   *  @param tamanio  Tamanio del ODE en disco. 
   */
    public void setTamanio(java.lang.Long tamanio)
    {
        this.tamanio = tamanio;
    }
    private java.util.Calendar fecha;

  /**
   * <p>
   * Fecha de publicacion.
   * </p>
   * @return java.util.Calendar
   */
    public java.util.Calendar getFecha()
    {
        return this.fecha;
    }

  /**
   * <p>
   * Fecha de publicacion.
   * </p>
   *  @param fecha  Fecha de publicacion. 
   */
    public void setFecha(java.util.Calendar fecha)
    {
        this.fecha = fecha;
    }
    private java.lang.String titulo;

  /**
   * <p>
   * Titulo del ODE cuando esta publicado.
   * </p>
   * @return java.lang.String
   */
    public java.lang.String getTitulo()
    {
        return this.titulo;
    }

  /**
   * <p>
   * Titulo del ODE cuando esta publicado.
   * </p>
   *  @param titulo  Titulo del ODE cuando esta publicado. 
   */
    public void setTitulo(java.lang.String titulo)
    {
        this.titulo = titulo;
    }
    private java.lang.Long id;

    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }


    /**
     * Returns <code>true</code> if the argument is an OdePublicado instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     *
     * @param object The object to compare
     * @return boolean
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof OdePublicado))
        {
            return false;
        }
        final OdePublicado that = (OdePublicado)object;
        if (this.id == null || that.id == null || !this.id.equals(that.id))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     * @return int
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link es.pode.publicacion.negocio.dominio.OdePublicado}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link es.pode.publicacion.negocio.dominio.OdePublicado}.
         * @return es.pode.publicacion.negocio.dominio.OdePublicado
         */
        public static es.pode.publicacion.negocio.dominio.OdePublicado newInstance()
        {
            return new es.pode.publicacion.negocio.dominio.OdePublicadoImpl();
        }
    }

// HibernateEntity.vsl merge-point
}