// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SearchCriteria.vsl in andromda-spring-cartridge.
//
package es.pode.publicacion.negocio.dominio;

/**
 * 
 */
public class EstadoFechaCriteria
    implements java.io.Serializable
{

  /**
   * Constructor por defecto
   */
    public EstadoFechaCriteria()
    {
    }

    /**
     * Constructor taking all properties.
      * @param estadoActual es.pode.publicacion.negocio.dominio.Estado
      * @param estadoTransitado es.pode.publicacion.negocio.dominio.Estado
      * @param fecha java.util.Calendar
     */
    public EstadoFechaCriteria(
        es.pode.publicacion.negocio.dominio.Estado estadoActual,
        es.pode.publicacion.negocio.dominio.Estado estadoTransitado,
        java.util.Calendar fecha)

    {
        this.estadoActual = estadoActual;
        this.estadoTransitado = estadoTransitado;
        this.fecha = fecha;
    }

    /**
     * Copies constructor from other EstadoFechaCriteria
      * @param otherBean EstadoFechaCriteria
     */
    public EstadoFechaCriteria(EstadoFechaCriteria otherBean)
    {
        if (otherBean != null)
        {
            this.estadoActual = otherBean.getEstadoActual();
            this.estadoTransitado = otherBean.getEstadoTransitado();
            this.fecha = otherBean.getFecha();
        }
    }

    /**
     * The first result to retrieve.
     */
    private java.lang.Integer firstResult;

    /**
     * Gets the first result to retrieve.
     *
     * @return the first result to retrieve
     */
    public java.lang.Integer getFirstResult()
    {
        return this.firstResult;
    }

    /**
     * Sets the first result to retrieve.
     *
     * @param firstResult the first result to retrieve
     */
    public void setFirstResult(java.lang.Integer firstResult)
    {
        this.firstResult = firstResult;
    }

    /**
     * The fetch size.
     */
    private java.lang.Integer fetchSize;

    /**
     * Gets the fetch size.
     *
     * @return the fetch size
     */
    public java.lang.Integer getFetchSize()
    {
        return this.fetchSize;
    }

    /**
     * Sets the fetch size.
     *
     * @param fetchSize the fetch size
     */
    public void setFetchSize(java.lang.Integer fetchSize)
    {
        this.fetchSize = fetchSize;
    }

    /**
     * The maximum size of the result set.
     */
    private java.lang.Integer maximumResultSize;

    /**
     * Gets the maximum size of the search result.
     *
     * @return the maximum size of the search result.
     */
    public java.lang.Integer getMaximumResultSize()
    {
        return this.maximumResultSize;
    }

    /**
     * Sets the maxmimum size of the result.
     *
     * @param maximumResultSize A number indicating how many results will be returned.
     */
    public void setMaximumResultSize(java.lang.Integer maximumResultSize)
    {
        this.maximumResultSize = maximumResultSize;
    }

    private es.pode.publicacion.negocio.dominio.Estado estadoActual;

  /**
   * <p>
   * Estado actual en el que se buscan los ODEs.
   * </p>
   * @return es.pode.publicacion.negocio.dominio.Estado
   */
    public es.pode.publicacion.negocio.dominio.Estado getEstadoActual()
    {
        return this.estadoActual;
    }

  /**
   * <p>
   * Estado actual en el que se buscan los ODEs.
   * </p>
   *  @param estadoActual  Estado actual en el que se buscan los ODEs. 
   */
    public void setEstadoActual(es.pode.publicacion.negocio.dominio.Estado estadoActual)
    {
        this.estadoActual = estadoActual;
    }

    private es.pode.publicacion.negocio.dominio.Estado estadoTransitado;

  /**
   * <p>
   * Estado al que transita el ODE. Si estamos buscando estados
   * finales del ODE, este campo sera vacio.
   * </p>
   * @return es.pode.publicacion.negocio.dominio.Estado
   */
    public es.pode.publicacion.negocio.dominio.Estado getEstadoTransitado()
    {
        return this.estadoTransitado;
    }

  /**
   * <p>
   * Estado al que transita el ODE. Si estamos buscando estados
   * finales del ODE, este campo sera vacio.
   * </p>
   *  @param estadoTransitado  Estado al que transita el ODE. Si estamos buscando estados finales del ODE, este campo sera vacio. 
   */
    public void setEstadoTransitado(es.pode.publicacion.negocio.dominio.Estado estadoTransitado)
    {
        this.estadoTransitado = estadoTransitado;
    }

    private java.util.Calendar fecha;

  /**
   * <p>
   * Se trata de la fecha en la que se realizo la transicion al
   * estado actual.
   * </p>
   * <p>
   * Este parametro permanecera vacio, solo nos sirve para poder
   * utilizarlo como criterio de ordenamiento.
   * </p>
   * @return java.util.Calendar
   */
    public java.util.Calendar getFecha()
    {
        return this.fecha;
    }

  /**
   * <p>
   * Se trata de la fecha en la que se realizo la transicion al
   * estado actual.
   * </p>
   * <p>
   * Este parametro permanecera vacio, solo nos sirve para poder
   * utilizarlo como criterio de ordenamiento.
   * </p>
   *  @param fecha  Se trata de la fecha en la que se realizo la transicion al estado actual.
 Este parametro permanecera vacio, solo nos sirve para poder utilizarlo como criterio de ordenamiento. 
   */
    public void setFecha(java.util.Calendar fecha)
    {
        this.fecha = fecha;
    }

}