// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringHibernateDaoBase.vsl in andromda-spring-cartridge.
//
package es.pode.publicacion.negocio.dominio;

import net.sf.dozer.util.mapping.MapperIF;

/**
 * <p>
 * Base Spring DAO Class: is able to create, update, remove, load, and find
 * objects of type <code>es.pode.publicacion.negocio.dominio.OdePublicado</code>.
 * </p>
 *
 * @see es.pode.publicacion.negocio.dominio.OdePublicado
 */
public abstract class OdePublicadoDaoBase
    extends org.springframework.orm.hibernate3.support.HibernateDaoSupport
    implements es.pode.publicacion.negocio.dominio.OdePublicadoDao
{



	

	/**
	 * Constant that identifies a mapping between an 
	 * entity (OdePublicado) and a VO (PesoODEVO)
	 */
	public final static String DEF_MAPPING_ODEPUBLICADO_PESOODEVO = "DEF_MAPPING_ODEPUBLICADO_PESOODEVO";
	
	/**
	 * Constant that identifies a mapping between a 
	 * VO (PesoODEVO) and an entity (OdePublicado)
	 */
	public final static String DEF_MAPPING_PESOODEVO_ODEPUBLICADO = "DEF_MAPPING_PESOODEVO_ODEPUBLICADO";
	

	/**
	 * Constant that identifies a mapping between an 
	 * entity (OdePublicado) and a VO (DetallePublicadoODEVO)
	 */
	public final static String DEF_MAPPING_ODEPUBLICADO_DETALLEPUBLICADOODEVO = "DEF_MAPPING_ODEPUBLICADO_DETALLEPUBLICADOODEVO";
	
	/**
	 * Constant that identifies a mapping between a 
	 * VO (DetallePublicadoODEVO) and an entity (OdePublicado)
	 */
	public final static String DEF_MAPPING_DETALLEPUBLICADOODEVO_ODEPUBLICADO = "DEF_MAPPING_DETALLEPUBLICADOODEVO_ODEPUBLICADO";
	

	/**
	 * Constant that identifies a mapping between an 
	 * entity (OdePublicado) and a VO (OdePublicadoVO)
	 */
	public final static String DEF_MAPPING_ODEPUBLICADO_ODEPUBLICADOVO = "DEF_MAPPING_ODEPUBLICADO_ODEPUBLICADOVO";
	
	/**
	 * Constant that identifies a mapping between a 
	 * VO (OdePublicadoVO) and an entity (OdePublicado)
	 */
	public final static String DEF_MAPPING_ODEPUBLICADOVO_ODEPUBLICADO = "DEF_MAPPING_ODEPUBLICADOVO_ODEPUBLICADO";
	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#load(int, java.lang.Long)
     */
    public Object load(final int transform, final java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "OdePublicado.load - 'id' can not be null");
        }
        final java.util.List list = this.getHibernateTemplate().find(
            "from es.pode.publicacion.negocio.dominio.OdePublicado as entity where entity.id = ?", id);
        final Object entity = list != null && !list.isEmpty() ? list.iterator().next() : null;
        return transformEntity(transform, (es.pode.publicacion.negocio.dominio.OdePublicado)entity);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#load(java.lang.Long)
     */
    public es.pode.publicacion.negocio.dominio.OdePublicado load(java.lang.Long id)
    {
        return (es.pode.publicacion.negocio.dominio.OdePublicado)this.load(TRANSFORM_NONE, id);
    }
    
    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#loadAll()
     */
    public java.util.Collection loadAll()
    {
        return this.loadAll(TRANSFORM_NONE);
    }
    
    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#loadAll(int)
     */
    public java.util.Collection loadAll(final int transform)
    {
        final java.util.Collection results = this.getHibernateTemplate().loadAll(es.pode.publicacion.negocio.dominio.OdePublicadoImpl.class);
        this.transformEntities(transform, results);
        return results;
    }
    

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#create(es.pode.publicacion.negocio.dominio.OdePublicado)
     */
    public es.pode.publicacion.negocio.dominio.OdePublicado create(es.pode.publicacion.negocio.dominio.OdePublicado odePublicado)
    {
        return (es.pode.publicacion.negocio.dominio.OdePublicado)this.create(TRANSFORM_NONE, odePublicado);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#create(int transform, es.pode.publicacion.negocio.dominio.OdePublicado)
     */
    public Object create(final int transform, final es.pode.publicacion.negocio.dominio.OdePublicado odePublicado)
    {
        if (odePublicado == null)
        {
            throw new IllegalArgumentException(
                "OdePublicado.create - 'odePublicado' can not be null");
        }
        Object identifier = this.getHibernateTemplate().save(odePublicado);
        odePublicado.setId((java.lang.Long)identifier);
        return this.transformEntity(transform, odePublicado);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#create(java.util.Collection)
     */
    public java.util.Collection create(final java.util.Collection entities)
    {
        return create(TRANSFORM_NONE, entities);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#create(int, java.util.Collection)
     */
    public java.util.Collection create(final int transform, final java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "OdePublicado.create - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate3.HibernateCallback()
            {
                public Object doInHibernate(org.hibernate.Session session)
                    throws org.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        create(transform, (es.pode.publicacion.negocio.dominio.OdePublicado)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
        return entities;
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#create(int, java.lang.String,java.lang.String,java.lang.Long,java.util.Calendar,java.lang.String)
     */
    public es.pode.publicacion.negocio.dominio.OdePublicado create(
 java.lang.String idODE, java.lang.String idioma, java.lang.Long tamanio, java.util.Calendar fecha, java.lang.String titulo)
    {
         return (es.pode.publicacion.negocio.dominio.OdePublicado)this.create(TRANSFORM_NONE,  idODE, idioma, tamanio, fecha, titulo);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#create(int, java.lang.String,java.lang.String,java.lang.Long,java.util.Calendar,java.lang.String)
     */
    public Object create(
        final int transform,
 java.lang.String idODE, java.lang.String idioma, java.lang.Long tamanio, java.util.Calendar fecha, java.lang.String titulo)
    {
        es.pode.publicacion.negocio.dominio.OdePublicado entity = new es.pode.publicacion.negocio.dominio.OdePublicadoImpl();
        entity.setIdODE(idODE);
        entity.setIdioma(idioma);
        entity.setTamanio(tamanio);
        entity.setFecha(fecha);
        entity.setTitulo(titulo);
        return this.create(transform, entity);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#update(es.pode.publicacion.negocio.dominio.OdePublicado)
     */
    public void update(es.pode.publicacion.negocio.dominio.OdePublicado odePublicado)
    {
        if (odePublicado == null)
        {
            throw new IllegalArgumentException(
                "OdePublicado.update - 'odePublicado' can not be null");
        }
        this.getHibernateTemplate().update(odePublicado);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#update(java.util.Collection)
     */
    public void update(final java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "OdePublicado.update - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate3.HibernateCallback()
            {
                public Object doInHibernate(org.hibernate.Session session)
                    throws org.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        update((es.pode.publicacion.negocio.dominio.OdePublicado)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#remove(es.pode.publicacion.negocio.dominio.OdePublicado)
     */
    public void remove(es.pode.publicacion.negocio.dominio.OdePublicado odePublicado)
    {
        if (odePublicado == null)
        {
            throw new IllegalArgumentException(
                "OdePublicado.remove - 'odePublicado' can not be null");
        }
        this.getHibernateTemplate().delete(odePublicado);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#remove(java.lang.Long)
     */
    public void remove(java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "OdePublicado.remove - 'id' can not be null");
        }
        es.pode.publicacion.negocio.dominio.OdePublicado entity = this.load(id);
        if (entity != null)
        {
            this.remove(entity);
        }
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#remove(java.util.Collection)
     */
    public void remove(java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "OdePublicado.remove - 'entities' can not be null");
        }
        this.getHibernateTemplate().deleteAll(entities);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenODEsPublicadosPorIdioma(java.lang.String)
     */
    public java.util.List obtenODEsPublicadosPorIdioma(java.lang.String idioma)
    {
        return this.obtenODEsPublicadosPorIdioma(TRANSFORM_NONE, idioma);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenODEsPublicadosPorIdioma(java.lang.String, java.lang.String)
     */
    public java.util.List obtenODEsPublicadosPorIdioma(final java.lang.String queryString, final java.lang.String idioma)
    {
        return this.obtenODEsPublicadosPorIdioma(TRANSFORM_NONE, queryString, idioma);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenODEsPublicadosPorIdioma(int, java.lang.String)
     */
    public java.util.List obtenODEsPublicadosPorIdioma(final int transform, final java.lang.String idioma)
    {
        return this.obtenODEsPublicadosPorIdioma(transform, "from es.pode.publicacion.negocio.dominio.OdePublicado as odePublicado where odePublicado.idioma = :idioma", idioma);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenODEsPublicadosPorIdioma(int, java.lang.String, java.lang.String)
     */
    public java.util.List obtenODEsPublicadosPorIdioma(final int transform, final java.lang.String queryString, final java.lang.String idioma)
    {
        try
        {
            org.hibernate.Query queryObject = super.getSession(false).createQuery(queryString);
            queryObject.setParameter("idioma", idioma);
            java.util.List results = queryObject.list();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenODEsPublicadosDeConjunto(es.pode.publicacion.negocio.dominio.IdODEsCriteria)
     */
    public java.util.List obtenODEsPublicadosDeConjunto(es.pode.publicacion.negocio.dominio.IdODEsCriteria criterio)
    {
        return this.obtenODEsPublicadosDeConjunto(TRANSFORM_NONE, criterio);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenODEsPublicadosDeConjunto(int, java.lang.String, es.pode.publicacion.negocio.dominio.IdODEsCriteria)
     */
    public java.util.List obtenODEsPublicadosDeConjunto(final int transform, final es.pode.publicacion.negocio.dominio.IdODEsCriteria criterio)
    {
        try
        {
            es.pode.publicacion.negocio.CriteriaSearch criteriaSearch = new es.pode.publicacion.negocio.CriteriaSearch(super.getSession(false), es.pode.publicacion.negocio.dominio.OdePublicadoImpl.class);
            criteriaSearch.getConfiguration().setFirstResult(criterio.getFirstResult());
            criteriaSearch.getConfiguration().setFetchSize(criterio.getFetchSize());
            criteriaSearch.getConfiguration().setMaximumResultSize(criterio.getMaximumResultSize());
						            es.pode.publicacion.negocio.CriteriaSearchParameter parameter1 =
                new es.pode.publicacion.negocio.CriteriaSearchParameter(
                    criterio.getIdODE(),
                    "idODE", es.pode.publicacion.negocio.CriteriaSearchParameter.EQUAL_COMPARATOR);
            criteriaSearch.addParameter(parameter1);
            // Call this method to include any modification to the criteria, default implementation is void.
            criteriaSearch = modifyobtenODEsPublicadosDeConjunto(criteriaSearch);
            java.util.List results = criteriaSearch.executeAsList();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }
    
    /**
     * Defauly implementation. Overrride to include any distinct search.
     * 
     * @param criteriaSearch The criteriaSearch to modify.          
     */
    protected es.pode.publicacion.negocio.CriteriaSearch modifyobtenODEsPublicadosDeConjunto (es.pode.publicacion.negocio.CriteriaSearch criteriaSearch){
        return criteriaSearch;
    }
    

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenODEsPublicadosPorID(es.pode.publicacion.negocio.dominio.IdODEPublicadoCriteria)
     */
    public java.util.List obtenODEsPublicadosPorID(es.pode.publicacion.negocio.dominio.IdODEPublicadoCriteria criterio)
    {
        return this.obtenODEsPublicadosPorID(TRANSFORM_NONE, criterio);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenODEsPublicadosPorID(int, java.lang.String, es.pode.publicacion.negocio.dominio.IdODEPublicadoCriteria)
     */
    public java.util.List obtenODEsPublicadosPorID(final int transform, final es.pode.publicacion.negocio.dominio.IdODEPublicadoCriteria criterio)
    {
        try
        {
            es.pode.publicacion.negocio.CriteriaSearch criteriaSearch = new es.pode.publicacion.negocio.CriteriaSearch(super.getSession(false), es.pode.publicacion.negocio.dominio.OdePublicadoImpl.class);
            criteriaSearch.getConfiguration().setFirstResult(criterio.getFirstResult());
            criteriaSearch.getConfiguration().setFetchSize(criterio.getFetchSize());
            criteriaSearch.getConfiguration().setMaximumResultSize(criterio.getMaximumResultSize());
						            es.pode.publicacion.negocio.CriteriaSearchParameter parameter1 =
                new es.pode.publicacion.negocio.CriteriaSearchParameter(
                    criterio.getIdODE(),
                    "idODE", es.pode.publicacion.negocio.CriteriaSearchParameter.EQUAL_COMPARATOR);
            criteriaSearch.addParameter(parameter1);
            // Call this method to include any modification to the criteria, default implementation is void.
            criteriaSearch = modifyobtenODEsPublicadosPorID(criteriaSearch);
            java.util.List results = criteriaSearch.executeAsList();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }
    
    /**
     * Defauly implementation. Overrride to include any distinct search.
     * 
     * @param criteriaSearch The criteriaSearch to modify.          
     */
    protected es.pode.publicacion.negocio.CriteriaSearch modifyobtenODEsPublicadosPorID (es.pode.publicacion.negocio.CriteriaSearch criteriaSearch){
        return criteriaSearch;
    }
    

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenODEsPorDimensionDesdeaHasta(es.pode.publicacion.negocio.dominio.PublicadoDesdeHastaTamanioCriteria)
     */
    public java.util.List obtenODEsPorDimensionDesdeaHasta(es.pode.publicacion.negocio.dominio.PublicadoDesdeHastaTamanioCriteria criterio)
    {
        return this.obtenODEsPorDimensionDesdeaHasta(TRANSFORM_NONE, criterio);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenODEsPorDimensionDesdeaHasta(int, java.lang.String, es.pode.publicacion.negocio.dominio.PublicadoDesdeHastaTamanioCriteria)
     */
    public java.util.List obtenODEsPorDimensionDesdeaHasta(final int transform, final es.pode.publicacion.negocio.dominio.PublicadoDesdeHastaTamanioCriteria criterio)
    {
        try
        {
            es.pode.publicacion.negocio.CriteriaSearch criteriaSearch = new es.pode.publicacion.negocio.CriteriaSearch(super.getSession(false), es.pode.publicacion.negocio.dominio.OdePublicadoImpl.class);
            criteriaSearch.getConfiguration().setFirstResult(criterio.getFirstResult());
            criteriaSearch.getConfiguration().setFetchSize(criterio.getFetchSize());
            criteriaSearch.getConfiguration().setMaximumResultSize(criterio.getMaximumResultSize());
						            es.pode.publicacion.negocio.CriteriaSearchParameter parameter1 =
                new es.pode.publicacion.negocio.CriteriaSearchParameter(
                    criterio.getFechaDesde(),
                    "fecha", es.pode.publicacion.negocio.CriteriaSearchParameter.GREATER_THAN_OR_EQUAL_COMPARATOR);
            criteriaSearch.addParameter(parameter1);
						            es.pode.publicacion.negocio.CriteriaSearchParameter parameter2 =
                new es.pode.publicacion.negocio.CriteriaSearchParameter(
                    criterio.getFechaHasta(),
                    "fecha", es.pode.publicacion.negocio.CriteriaSearchParameter.LESS_THAN_OR_EQUAL_COMPARATOR);
            criteriaSearch.addParameter(parameter2);
						            es.pode.publicacion.negocio.CriteriaSearchParameter parameter3 =
                new es.pode.publicacion.negocio.CriteriaSearchParameter(
                    criterio.getTamanio(),
                    "tamanio");
            parameter3.setOrderDirection(es.pode.publicacion.negocio.CriteriaSearchParameter.ORDER_DESC);
            parameter3.setOrderRelevance(-1);
            criteriaSearch.addParameter(parameter3);
            // Call this method to include any modification to the criteria, default implementation is void.
            criteriaSearch = modifyobtenODEsPorDimensionDesdeaHasta(criteriaSearch);
            java.util.List results = criteriaSearch.executeAsList();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }
    
    /**
     * Defauly implementation. Overrride to include any distinct search.
     * 
     * @param criteriaSearch The criteriaSearch to modify.          
     */
    protected es.pode.publicacion.negocio.CriteriaSearch modifyobtenODEsPorDimensionDesdeaHasta (es.pode.publicacion.negocio.CriteriaSearch criteriaSearch){
        return criteriaSearch;
    }
    

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenODEsPublicadosPorIdioma(es.pode.publicacion.negocio.dominio.IdiomaCriteria)
     */
    public java.util.List obtenODEsPublicadosPorIdioma(es.pode.publicacion.negocio.dominio.IdiomaCriteria criterio)
    {
        return this.obtenODEsPublicadosPorIdioma(TRANSFORM_NONE, criterio);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenODEsPublicadosPorIdioma(int, java.lang.String, es.pode.publicacion.negocio.dominio.IdiomaCriteria)
     */
    public java.util.List obtenODEsPublicadosPorIdioma(final int transform, final es.pode.publicacion.negocio.dominio.IdiomaCriteria criterio)
    {
        try
        {
            es.pode.publicacion.negocio.CriteriaSearch criteriaSearch = new es.pode.publicacion.negocio.CriteriaSearch(super.getSession(false), es.pode.publicacion.negocio.dominio.OdePublicadoImpl.class);
            criteriaSearch.getConfiguration().setFirstResult(criterio.getFirstResult());
            criteriaSearch.getConfiguration().setFetchSize(criterio.getFetchSize());
            criteriaSearch.getConfiguration().setMaximumResultSize(criterio.getMaximumResultSize());
						            es.pode.publicacion.negocio.CriteriaSearchParameter parameter1 =
                new es.pode.publicacion.negocio.CriteriaSearchParameter(
                    criterio.getIdioma(),
                    "idioma", es.pode.publicacion.negocio.CriteriaSearchParameter.EQUAL_COMPARATOR);
            criteriaSearch.addParameter(parameter1);
            // Call this method to include any modification to the criteria, default implementation is void.
            criteriaSearch = modifyobtenODEsPublicadosPorIdioma(criteriaSearch);
            java.util.List results = criteriaSearch.executeAsList();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }
    
    /**
     * Defauly implementation. Overrride to include any distinct search.
     * 
     * @param criteriaSearch The criteriaSearch to modify.          
     */
    protected es.pode.publicacion.negocio.CriteriaSearch modifyobtenODEsPublicadosPorIdioma (es.pode.publicacion.negocio.CriteriaSearch criteriaSearch){
        return criteriaSearch;
    }
    

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#buscarUltimosPublicados(es.pode.publicacion.negocio.dominio.UltimosOdesPublicadosCriteria)
     */
    public java.util.List buscarUltimosPublicados(es.pode.publicacion.negocio.dominio.UltimosOdesPublicadosCriteria criterio)
    {
        return this.buscarUltimosPublicados(TRANSFORM_NONE, criterio);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#buscarUltimosPublicados(int, java.lang.String, es.pode.publicacion.negocio.dominio.UltimosOdesPublicadosCriteria)
     */
    public java.util.List buscarUltimosPublicados(final int transform, final es.pode.publicacion.negocio.dominio.UltimosOdesPublicadosCriteria criterio)
    {
        try
        {
            es.pode.publicacion.negocio.CriteriaSearch criteriaSearch = new es.pode.publicacion.negocio.CriteriaSearch(super.getSession(false), es.pode.publicacion.negocio.dominio.OdePublicadoImpl.class);
            criteriaSearch.getConfiguration().setFirstResult(criterio.getFirstResult());
            criteriaSearch.getConfiguration().setFetchSize(criterio.getFetchSize());
            criteriaSearch.getConfiguration().setMaximumResultSize(criterio.getMaximumResultSize());
						            es.pode.publicacion.negocio.CriteriaSearchParameter parameter1 =
                new es.pode.publicacion.negocio.CriteriaSearchParameter(
                    criterio.getFecha(),
                    "fecha");
            parameter1.setOrderDirection(es.pode.publicacion.negocio.CriteriaSearchParameter.ORDER_DESC);
            parameter1.setOrderRelevance(-1);
            criteriaSearch.addParameter(parameter1);
            // Call this method to include any modification to the criteria, default implementation is void.
            criteriaSearch = modifybuscarUltimosPublicados(criteriaSearch);
            java.util.List results = criteriaSearch.executeAsList();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }
    
    /**
     * Defauly implementation. Overrride to include any distinct search.
     * 
     * @param criteriaSearch The criteriaSearch to modify.          
     */
    protected es.pode.publicacion.negocio.CriteriaSearch modifybuscarUltimosPublicados (es.pode.publicacion.negocio.CriteriaSearch criteriaSearch){
        return criteriaSearch;
    }
    

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenIdiomasODEsPublicados()
     */
    public java.util.List obtenIdiomasODEsPublicados()
    {
        return this.obtenIdiomasODEsPublicados(TRANSFORM_NONE);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenIdiomasODEsPublicados(java.lang.String)
     */
    public java.util.List obtenIdiomasODEsPublicados(final java.lang.String queryString)
    {
        return this.obtenIdiomasODEsPublicados(TRANSFORM_NONE, queryString);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenIdiomasODEsPublicados(int)
     */
    public java.util.List obtenIdiomasODEsPublicados(final int transform)
    {
        return this.obtenIdiomasODEsPublicados(transform, "select distinct(Ode.idioma) from OdePublicadoImpl as Ode ");
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenIdiomasODEsPublicados(int, java.lang.String)
     */
    public java.util.List obtenIdiomasODEsPublicados(final int transform, final java.lang.String queryString)
    {
        try
        {
            org.hibernate.Query queryObject = super.getSession(false).createQuery(queryString);
            java.util.List results = queryObject.list();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenNumODEsPublicadosPorIdioma(java.lang.String)
     */
    public java.lang.Long obtenNumODEsPublicadosPorIdioma(java.lang.String idioma)
    {
        return (java.lang.Long)this.obtenNumODEsPublicadosPorIdioma(TRANSFORM_NONE, idioma);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenNumODEsPublicadosPorIdioma(java.lang.String, java.lang.String)
     */
    public java.lang.Long obtenNumODEsPublicadosPorIdioma(final java.lang.String queryString, final java.lang.String idioma)
    {
        return (java.lang.Long)this.obtenNumODEsPublicadosPorIdioma(TRANSFORM_NONE, queryString, idioma);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenNumODEsPublicadosPorIdioma(int, java.lang.String)
     */
    public Object obtenNumODEsPublicadosPorIdioma(final int transform, final java.lang.String idioma)
    {
        return this.obtenNumODEsPublicadosPorIdioma(transform, "select count(*) from OdePublicadoImpl as O where O.idioma = :idioma", idioma);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenNumODEsPublicadosPorIdioma(int, java.lang.String, java.lang.String)
     */
    public Object obtenNumODEsPublicadosPorIdioma(final int transform, final java.lang.String queryString, final java.lang.String idioma)
    {
        try
        {
            org.hibernate.Query queryObject = super.getSession(false).createQuery(queryString);
            queryObject.setParameter("idioma", idioma);
            java.util.List results = queryObject.list();
            Object result = null;
            if (results != null)
            {
                if (results.size() > 1)
                {
                    throw new org.springframework.dao.InvalidDataAccessResourceUsageException(
                        "More than one instance of 'java.lang.Long"
                            + "' was found when executing query --> '" + queryString + "'");
                }
                else if (results.size() == 1)
                {
                    result = (es.pode.publicacion.negocio.dominio.OdePublicado)results.iterator().next();
                }
            }
            result = transformEntity(transform, (es.pode.publicacion.negocio.dominio.OdePublicado)result);
            return result;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenNumODEsPublicados()
     */
    public java.lang.Long obtenNumODEsPublicados()
    {
        return (java.lang.Long)this.obtenNumODEsPublicados(TRANSFORM_NONE);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenNumODEsPublicados(java.lang.String)
     */
    public java.lang.Long obtenNumODEsPublicados(final java.lang.String queryString)
    {
        return (java.lang.Long)this.obtenNumODEsPublicados(TRANSFORM_NONE, queryString);
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenNumODEsPublicados(int)
     */
    public Object obtenNumODEsPublicados(final int transform)
    {
        return this.obtenNumODEsPublicados(transform, "select count(*) from OdePublicadoImpl");
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicado#obtenNumODEsPublicados(int, java.lang.String)
     */
    public Object obtenNumODEsPublicados(final int transform, final java.lang.String queryString)
    {
        try
        {
            org.hibernate.Query queryObject = super.getSession(false).createQuery(queryString);
            java.util.List results = queryObject.list();
            Object result = null;
            if (results != null)
            {
                if (results.size() > 1)
                {
                    throw new org.springframework.dao.InvalidDataAccessResourceUsageException(
                        "More than one instance of 'java.lang.Long"
                            + "' was found when executing query --> '" + queryString + "'");
                }
                else if (results.size() == 1)
                {
                    result = (es.pode.publicacion.negocio.dominio.OdePublicado)results.iterator().next();
                }
            }
            result = transformEntity(transform, (es.pode.publicacion.negocio.dominio.OdePublicado)result);
            return result;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#eliminaODEsPublicadosPorId(java.lang.String)
     */
    public void eliminaODEsPublicadosPorId(final java.lang.String idODE)
    {
        if (idODE == null)
        {
            throw new IllegalArgumentException(
                "es.pode.publicacion.negocio.dominio.OdePublicadoDao.eliminaODEsPublicadosPorId(java.lang.String idODE) - 'idODE' can not be null");
        }
        try
        {
            this.handleEliminaODEsPublicadosPorId(idODE);
        }
        
        
        catch (Throwable th)
        {
            throw new java.lang.RuntimeException(
            "Error performing 'es.pode.publicacion.negocio.dominio.OdePublicadoDao.eliminaODEsPublicadosPorId(java.lang.String idODE)' --> " + th,
            th);
        }
    }

     /**
      * Performs the core logic for {@link #eliminaODEsPublicadosPorId(java.lang.String)}
      */
    protected abstract void handleEliminaODEsPublicadosPorId(java.lang.String idODE)
        throws java.lang.Exception;

    /**
     * Allows transformation of entities into value objects
     * (or something else for that matter), when the <code>transform</code>
     * flag is set to one of the constants defined in <code>es.pode.publicacion.negocio.dominio.OdePublicadoDao</code>, please note
     * that the {@link #TRANSFORM_NONE} constant denotes no transformation, so the entity itself
     * will be returned.
     * <p/>
     * This method will return instances of these types:
     * <ul>
     *   <li>{@link es.pode.publicacion.negocio.dominio.OdePublicado} - {@link #TRANSFORM_NONE}</li>
     *   <li>{@link es.pode.publicacion.negocio.servicios.PesoODEVO} - {@link TRANSFORM_PESOODEVO}</li>
     *   <li>{@link es.pode.publicacion.negocio.servicios.DetallePublicadoODEVO} - {@link TRANSFORM_DETALLEPUBLICADOODEVO}</li>
     *   <li>{@link es.pode.publicacion.negocio.servicios.OdePublicadoVO} - {@link TRANSFORM_ODEPUBLICADOVO}</li>
     * </ul>
     *
     * If the integer argument value is unknown {@link #TRANSFORM_NONE} is assumed.
     *
     * @param transform one of the constants declared in {@link es.pode.publicacion.negocio.dominio.OdePublicadoDao}
     * @param entity an entity that was found
     * @return the transformed entity (i.e. new value object, etc)
     * @see #transformEntities(int,java.util.Collection)
     */
    private final Object transformEntity(final int transform, final es.pode.publicacion.negocio.dominio.OdePublicado entity)
    {
        Object target = null;
        if (entity != null)
        {
            switch (transform)
            {
                case es.pode.publicacion.negocio.dominio.OdePublicadoDao.TRANSFORM_PESOODEVO :
                    target = toPesoODEVO(entity);
                    break;
                case es.pode.publicacion.negocio.dominio.OdePublicadoDao.TRANSFORM_DETALLEPUBLICADOODEVO :
                    target = toDetallePublicadoODEVO(entity);
                    break;
                case es.pode.publicacion.negocio.dominio.OdePublicadoDao.TRANSFORM_ODEPUBLICADOVO :
                    target = toOdePublicadoVO(entity);
                    break;
                case TRANSFORM_NONE : // fall-through
                default:
                    target = entity;
            }
        }
        return target;
    }

    /**
     * Transforms a collection of entities using the
     * {@link #transformEntity(int,es.pode.publicacion.negocio.dominio.OdePublicado)}
     * method. This method does not instantiate a new collection.
     * <p/>
     * This method is to be used internally only.
     *
     * @param transform one of the constants declared in <code>es.pode.publicacion.negocio.dominio.OdePublicadoDao</code>
     * @param entities the collection of entities to transform
     * @return the same collection as the argument, but this time containing the transformed entities
     * @see #transformEntity(int,es.pode.publicacion.negocio.dominio.OdePublicado)
     */
    private final void transformEntities(final int transform, final java.util.Collection entities)
    {
        switch (transform)
        {
            case es.pode.publicacion.negocio.dominio.OdePublicadoDao.TRANSFORM_PESOODEVO :
                toPesoODEVOCollection(entities);
                break;
            case es.pode.publicacion.negocio.dominio.OdePublicadoDao.TRANSFORM_DETALLEPUBLICADOODEVO :
                toDetallePublicadoODEVOCollection(entities);
                break;
            case es.pode.publicacion.negocio.dominio.OdePublicadoDao.TRANSFORM_ODEPUBLICADOVO :
                toOdePublicadoVOCollection(entities);
                break;
            case TRANSFORM_NONE : // fall-through
                default:
                // do nothing;
        }
    }

    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#toPesoODEVOCollection(java.util.Collection)
     */
    public final void toPesoODEVOCollection(java.util.Collection entities)
    {
        if (entities == null)
        {
            entities = java.util.Collections.EMPTY_LIST;
        }
        else
        {
            org.apache.commons.collections.CollectionUtils.transform(entities, PESOODEVO_TRANSFORMER);
        }
    }

    /**
     * Base implementation for transforming the results of a report query into a value object. This
     * implementation exists for convenience reasons only. It needs only be overridden in the
     * {@link OdePublicadoDaoImpl} class if you intend to use reporting queries.
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#toPesoODEVO(es.pode.publicacion.negocio.dominio.OdePublicado)
     */
    protected es.pode.publicacion.negocio.servicios.PesoODEVO toPesoODEVO(Object[] row)
    {
        return null;
    }

    /**
     * This anonymous transformer is designed to transform entities or report query results
     * (which result in an array of objects) to {@link es.pode.publicacion.negocio.servicios.PesoODEVO}
     * using the Jakarta Commons-Collections Transformation API.
     */
    private final org.apache.commons.collections.Transformer PESOODEVO_TRANSFORMER =
        new org.apache.commons.collections.Transformer()
        {
            public Object transform(Object input)
            {
                Object result = null;
                if (input instanceof es.pode.publicacion.negocio.dominio.OdePublicado)
                {
                    result = toPesoODEVO((es.pode.publicacion.negocio.dominio.OdePublicado)input);
                }
                else if (input instanceof Object[])
                {
                    result = toPesoODEVO((Object[])input);
                }
                return result;
            }
        };

	/**
	 * Copy a VO to a new entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @return A new entity created with the values extracted from the vo.
	 */
	public es.pode.publicacion.negocio.dominio.OdePublicado fromPesoODEVO(final es.pode.publicacion.negocio.servicios.PesoODEVO vo) {
        //default mapping between VO and entity
        return (es.pode.publicacion.negocio.dominio.OdePublicado) 
                  this.getBeanMapper().map(vo, es.pode.publicacion.negocio.dominio.OdePublicadoImpl.class, DEF_MAPPING_PESOODEVO_ODEPUBLICADO);
    }

	/**
	 * Copy a VO to an existing entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @param entity The destination bean (an existing entity)
	 */
    public void fromPesoODEVO(es.pode.publicacion.negocio.servicios.PesoODEVO vo, es.pode.publicacion.negocio.dominio.OdePublicado entity) {
        //default mapping between VO and entity
        this.getBeanMapper().map(vo, entity, DEF_MAPPING_PESOODEVO_ODEPUBLICADO);
    }
		
		
    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#toDetallePublicadoODEVOCollection(java.util.Collection)
     */
    public final void toDetallePublicadoODEVOCollection(java.util.Collection entities)
    {
        if (entities == null)
        {
            entities = java.util.Collections.EMPTY_LIST;
        }
        else
        {
            org.apache.commons.collections.CollectionUtils.transform(entities, DETALLEPUBLICADOODEVO_TRANSFORMER);
        }
    }

    /**
     * Base implementation for transforming the results of a report query into a value object. This
     * implementation exists for convenience reasons only. It needs only be overridden in the
     * {@link OdePublicadoDaoImpl} class if you intend to use reporting queries.
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#toDetallePublicadoODEVO(es.pode.publicacion.negocio.dominio.OdePublicado)
     */
    protected es.pode.publicacion.negocio.servicios.DetallePublicadoODEVO toDetallePublicadoODEVO(Object[] row)
    {
        return null;
    }

    /**
     * This anonymous transformer is designed to transform entities or report query results
     * (which result in an array of objects) to {@link es.pode.publicacion.negocio.servicios.DetallePublicadoODEVO}
     * using the Jakarta Commons-Collections Transformation API.
     */
    private final org.apache.commons.collections.Transformer DETALLEPUBLICADOODEVO_TRANSFORMER =
        new org.apache.commons.collections.Transformer()
        {
            public Object transform(Object input)
            {
                Object result = null;
                if (input instanceof es.pode.publicacion.negocio.dominio.OdePublicado)
                {
                    result = toDetallePublicadoODEVO((es.pode.publicacion.negocio.dominio.OdePublicado)input);
                }
                else if (input instanceof Object[])
                {
                    result = toDetallePublicadoODEVO((Object[])input);
                }
                return result;
            }
        };

	/**
	 * Copy a VO to a new entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @return A new entity created with the values extracted from the vo.
	 */
	public es.pode.publicacion.negocio.dominio.OdePublicado fromDetallePublicadoODEVO(final es.pode.publicacion.negocio.servicios.DetallePublicadoODEVO vo) {
        //default mapping between VO and entity
        return (es.pode.publicacion.negocio.dominio.OdePublicado) 
                  this.getBeanMapper().map(vo, es.pode.publicacion.negocio.dominio.OdePublicadoImpl.class, DEF_MAPPING_DETALLEPUBLICADOODEVO_ODEPUBLICADO);
    }

	/**
	 * Copy a VO to an existing entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @param entity The destination bean (an existing entity)
	 */
    public void fromDetallePublicadoODEVO(es.pode.publicacion.negocio.servicios.DetallePublicadoODEVO vo, es.pode.publicacion.negocio.dominio.OdePublicado entity) {
        //default mapping between VO and entity
        this.getBeanMapper().map(vo, entity, DEF_MAPPING_DETALLEPUBLICADOODEVO_ODEPUBLICADO);
    }
		
		
    /**
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#toOdePublicadoVOCollection(java.util.Collection)
     */
    public final void toOdePublicadoVOCollection(java.util.Collection entities)
    {
        if (entities == null)
        {
            entities = java.util.Collections.EMPTY_LIST;
        }
        else
        {
            org.apache.commons.collections.CollectionUtils.transform(entities, ODEPUBLICADOVO_TRANSFORMER);
        }
    }

    /**
     * Base implementation for transforming the results of a report query into a value object. This
     * implementation exists for convenience reasons only. It needs only be overridden in the
     * {@link OdePublicadoDaoImpl} class if you intend to use reporting queries.
     * @see es.pode.publicacion.negocio.dominio.OdePublicadoDao#toOdePublicadoVO(es.pode.publicacion.negocio.dominio.OdePublicado)
     */
    protected es.pode.publicacion.negocio.servicios.OdePublicadoVO toOdePublicadoVO(Object[] row)
    {
        return null;
    }

    /**
     * This anonymous transformer is designed to transform entities or report query results
     * (which result in an array of objects) to {@link es.pode.publicacion.negocio.servicios.OdePublicadoVO}
     * using the Jakarta Commons-Collections Transformation API.
     */
    private final org.apache.commons.collections.Transformer ODEPUBLICADOVO_TRANSFORMER =
        new org.apache.commons.collections.Transformer()
        {
            public Object transform(Object input)
            {
                Object result = null;
                if (input instanceof es.pode.publicacion.negocio.dominio.OdePublicado)
                {
                    result = toOdePublicadoVO((es.pode.publicacion.negocio.dominio.OdePublicado)input);
                }
                else if (input instanceof Object[])
                {
                    result = toOdePublicadoVO((Object[])input);
                }
                return result;
            }
        };

	/**
	 * Copy a VO to a new entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @return A new entity created with the values extracted from the vo.
	 */
	public es.pode.publicacion.negocio.dominio.OdePublicado fromOdePublicadoVO(final es.pode.publicacion.negocio.servicios.OdePublicadoVO vo) {
        //default mapping between VO and entity
        return (es.pode.publicacion.negocio.dominio.OdePublicado) 
                  this.getBeanMapper().map(vo, es.pode.publicacion.negocio.dominio.OdePublicadoImpl.class, DEF_MAPPING_ODEPUBLICADOVO_ODEPUBLICADO);
    }

	/**
	 * Copy a VO to an existing entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @param entity The destination bean (an existing entity)
	 */
    public void fromOdePublicadoVO(es.pode.publicacion.negocio.servicios.OdePublicadoVO vo, es.pode.publicacion.negocio.dominio.OdePublicado entity) {
        //default mapping between VO and entity
        this.getBeanMapper().map(vo, entity, DEF_MAPPING_ODEPUBLICADOVO_ODEPUBLICADO);
    }
		
		
}