// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringDao.vsl in andromda-spring-cartridge.
//
package es.pode.publicacion.negocio.dominio;

/**
 * @see es.pode.publicacion.negocio.dominio.Transicion
 */
public interface TransicionDao
{
    /**
     * This constant is used as a transformation flag; entities can be converted automatically into value objects
     * or other types, different methods in a class implementing this interface support this feature: look for
     * an <code>int</code> parameter called <code>transform</code>.
     * <p/>
     * This specific flag denotes no transformation will occur.
     */
    public final static int TRANSFORM_NONE = 0;

    /**
     * This constant is used as a transformation flag; entities can be converted automatically into value objects
     * or other types, different methods in a class implementing this interface support this feature: look for
     * an <code>int</code> parameter called <code>transform</code>.
     * <p/>
     * This specific flag denotes entities must be transformed into objects of type
     * {@link es.pode.publicacion.negocio.servicios.TransicionVO}.
     */
    public final static int TRANSFORM_TRANSICIONVO = 1;
    
    
    /**
     * Converts this DAO's entity to an object of type {@link es.pode.publicacion.negocio.servicios.TransicionVO}.
     * @param entity es.pode.publicacion.negocio.dominio.Transicion
     * @return es.pode.publicacion.negocio.servicios.TransicionVO     
     */
    public es.pode.publicacion.negocio.servicios.TransicionVO toTransicionVO(es.pode.publicacion.negocio.dominio.Transicion entity);

    /**
     * Converts this DAO's entity to a Collection of instances of type {@link es.pode.publicacion.negocio.servicios.TransicionVO}.
     * @param entities java.util.Collection
     */
    public void toTransicionVOCollection(java.util.Collection entities);

    public es.pode.publicacion.negocio.dominio.Transicion fromTransicionVO(es.pode.publicacion.negocio.servicios.TransicionVO vo);
    
    public void fromTransicionVO(es.pode.publicacion.negocio.servicios.TransicionVO vo, es.pode.publicacion.negocio.dominio.Transicion entity);    


    /**
     * This constant is used as a transformation flag; entities can be converted automatically into value objects
     * or other types, different methods in a class implementing this interface support this feature: look for
     * an <code>int</code> parameter called <code>transform</code>.
     * <p/>
     * This specific flag denotes entities must be transformed into objects of type
     * {@link es.pode.publicacion.negocio.servicios.IdUsuarioVO}.
     */
    public final static int TRANSFORM_IDUSUARIOVO = 2;
    
    
    /**
     * Converts this DAO's entity to an object of type {@link es.pode.publicacion.negocio.servicios.IdUsuarioVO}.
     * @param entity es.pode.publicacion.negocio.dominio.Transicion
     * @return es.pode.publicacion.negocio.servicios.IdUsuarioVO     
     */
    public es.pode.publicacion.negocio.servicios.IdUsuarioVO toIdUsuarioVO(es.pode.publicacion.negocio.dominio.Transicion entity);

    /**
     * Converts this DAO's entity to a Collection of instances of type {@link es.pode.publicacion.negocio.servicios.IdUsuarioVO}.
     * @param entities java.util.Collection
     */
    public void toIdUsuarioVOCollection(java.util.Collection entities);

    public es.pode.publicacion.negocio.dominio.Transicion fromIdUsuarioVO(es.pode.publicacion.negocio.servicios.IdUsuarioVO vo);
    
    public void fromIdUsuarioVO(es.pode.publicacion.negocio.servicios.IdUsuarioVO vo, es.pode.publicacion.negocio.dominio.Transicion entity);    


    /**
     * This constant is used as a transformation flag; entities can be converted automatically into value objects
     * or other types, different methods in a class implementing this interface support this feature: look for
     * an <code>int</code> parameter called <code>transform</code>.
     * <p/>
     * This specific flag denotes entities must be transformed into objects of type
     * {@link es.pode.publicacion.negocio.servicios.TransicionAutorVO}.
     */
    public final static int TRANSFORM_TRANSICIONAUTORVO = 3;
    
    
    /**
     * Converts this DAO's entity to an object of type {@link es.pode.publicacion.negocio.servicios.TransicionAutorVO}.
     * @param entity es.pode.publicacion.negocio.dominio.Transicion
     * @return es.pode.publicacion.negocio.servicios.TransicionAutorVO     
     */
    public es.pode.publicacion.negocio.servicios.TransicionAutorVO toTransicionAutorVO(es.pode.publicacion.negocio.dominio.Transicion entity);

    /**
     * Converts this DAO's entity to a Collection of instances of type {@link es.pode.publicacion.negocio.servicios.TransicionAutorVO}.
     * @param entities java.util.Collection
     */
    public void toTransicionAutorVOCollection(java.util.Collection entities);

    public es.pode.publicacion.negocio.dominio.Transicion fromTransicionAutorVO(es.pode.publicacion.negocio.servicios.TransicionAutorVO vo);
    
    public void fromTransicionAutorVO(es.pode.publicacion.negocio.servicios.TransicionAutorVO vo, es.pode.publicacion.negocio.dominio.Transicion entity);    


    /**
     * Loads an instance of es.pode.publicacion.negocio.dominio.Transicion from the persistent store.
     * @param id java.lang.Long
     * @return es.pode.publicacion.negocio.dominio.Transicion     
     */
    public es.pode.publicacion.negocio.dominio.Transicion load(java.lang.Long id);

    /**
     * <p>
     *   Does the same thing as {@link #load(java.lang.Long)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined in this class then the result <strong>WILL BE</strong> passed through an operation which can
     *   optionally transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int   
     * @param id the identifier of the entity to load.
     * @return either the entity or the object transformed from the entity.
     */
    public Object load(int transform, java.lang.Long id);
    
    /**
     * Loads all entities of type {@link es.pode.publicacion.negocio.dominio.Transicion}. 
     * 
     * @return the loaded entities.
     */
    public java.util.Collection loadAll();
    
    /** 
     * <p>
     *   Does the same thing as {@link #loadAll()} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     * 
     * @param transform the flag indicating what transformation to use.
     * @return the loaded entities.
     */
    public java.util.Collection loadAll(final int transform);

    /**
     * Creates an instance of es.pode.publicacion.negocio.dominio.Transicion and adds it to the persistent store.
     * @param transicion es.pode.publicacion.negocio.dominio.Transicion
     * @return es.pode.publicacion.negocio.dominio.Transicion     
     */
    public es.pode.publicacion.negocio.dominio.Transicion create(es.pode.publicacion.negocio.dominio.Transicion transicion);

    /**
     * <p>
     *   Does the same thing as {@link #create(es.pode.publicacion.negocio.dominio.Transicion)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
     * @param transicion es.pode.publicacion.negocio.dominio.Transicion
     * @return Object     
     */
    public Object create(int transform, es.pode.publicacion.negocio.dominio.Transicion transicion);

    /**
     * Creates a new instance of es.pode.publicacion.negocio.dominio.Transicion and adds
     * from the passed in <code>entities</code> collection
     *
     * @param entities the collection of es.pode.publicacion.negocio.dominio.Transicion
     *        instances to create.
     *
     * @return the created instances.
     */
    public java.util.Collection create(java.util.Collection entities);

    /**
     * <p>
     *   Does the same thing as {@link #create(es.pode.publicacion.negocio.dominio.Transicion)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
     * @param entities java.util.Collection
     * @return java.util.Collection        
     */
    public java.util.Collection create(int transform, java.util.Collection entities);

    /**
     * <p>
     *   Creates a new <code>es.pode.publicacion.negocio.dominio.Transicion</code>
     *   instance from <strong>all</strong> attributes and adds it to
     *   the persistent store.
     * </p>
					 * @param fecha java.util.Calendar  
						    		 * @param comentarios java.lang.String  
						    		 * @param idODE java.lang.String  
						    		 * @param idUsuario java.lang.String  
						    		 * @param titulo java.lang.String  
						    		 * @param idUsuarioCreacion java.lang.String  
						    		 * @param milisegundos java.lang.Long  
						    		 * @param compartido java.lang.Boolean  
			     * @return es.pode.publicacion.negocio.dominio.Transicion
     */
    public es.pode.publicacion.negocio.dominio.Transicion create(
					java.util.Calendar fecha 
						,		java.lang.String comentarios 
						,		java.lang.String idODE 
						,		java.lang.String idUsuario 
						,		java.lang.String titulo 
						,		java.lang.String idUsuarioCreacion 
						,		java.lang.Long milisegundos 
						,		java.lang.Boolean compartido 
			);



    /**
     * <p>
     *   Does the same thing as {@link #create(java.util.Calendar, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.Boolean)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param int
					 * @param fecha java.util.Calendar 
						    		 * @param comentarios java.lang.String 
						    		 * @param idODE java.lang.String 
						    		 * @param idUsuario java.lang.String 
						    		 * @param titulo java.lang.String 
						    		 * @param idUsuarioCreacion java.lang.String 
						    		 * @param milisegundos java.lang.Long 
						    		 * @param compartido java.lang.Boolean 
			     * @return Object
     */
    public Object create(int transform,
					java.util.Calendar fecha 
						,		java.lang.String comentarios 
						,		java.lang.String idODE 
						,		java.lang.String idUsuario 
						,		java.lang.String titulo 
						,		java.lang.String idUsuarioCreacion 
						,		java.lang.Long milisegundos 
						,		java.lang.Boolean compartido 
			);
    /**
     * <p>
     *  Creates a new <code>es.pode.publicacion.negocio.dominio.Transicion</code>
     *  instance from only <strong>required</strong> properties (attributes
     *  and association ends) and adds it to the persistent store.
     * </p>
     * @param compartido java.lang.Boolean
     * @param estadoActual es.pode.publicacion.negocio.dominio.Estado
     * @param fecha java.util.Calendar
     * @param idODE java.lang.String
     * @param idUsuario java.lang.String
     * @param idUsuarioCreacion java.lang.String
     * @param milisegundos java.lang.Long
     * @return es.pode.publicacion.negocio.dominio.Transicion
     */
    public es.pode.publicacion.negocio.dominio.Transicion create(
		java.util.Calendar fecha,
		java.lang.String comentarios,
		java.lang.String idODE,
		java.lang.String idUsuario,
		java.lang.String titulo,
		java.lang.String idUsuarioCreacion,
		java.lang.Long milisegundos,
		java.lang.Boolean compartido,
		es.pode.publicacion.negocio.dominio.Estado estadoTransitado,
		es.pode.publicacion.negocio.dominio.Estado estadoActual);

    /**
     * <p>
     *   Does the same thing as {@link #create(java.util.Calendar, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.Boolean)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
     * @param compartido java.lang.Boolean
     * @param estadoActual es.pode.publicacion.negocio.dominio.Estado
     * @param fecha java.util.Calendar
     * @param idODE java.lang.String
     * @param idUsuario java.lang.String
     * @param idUsuarioCreacion java.lang.String
     * @param milisegundos java.lang.Long
     * @return Object
     */
    public Object create(
        int transform,
		java.util.Calendar fecha,
		java.lang.String comentarios,
		java.lang.String idODE,
		java.lang.String idUsuario,
		java.lang.String titulo,
		java.lang.String idUsuarioCreacion,
		java.lang.Long milisegundos,
		java.lang.Boolean compartido,
		es.pode.publicacion.negocio.dominio.Estado estadoTransitado,
		es.pode.publicacion.negocio.dominio.Estado estadoActual);



    /**
     * Updates the <code>transicion</code> instance in the persistent store.
     * @param transicion es.pode.publicacion.negocio.dominio.Transicion
     */
    public void update(es.pode.publicacion.negocio.dominio.Transicion transicion);

    /**
     * Updates all instances in the <code>entities</code> collection in the persistent store.
     * @param entities java.util.Collection
     */
    public void update(java.util.Collection entities);

    /**
     * Removes the instance of es.pode.publicacion.negocio.dominio.Transicion from the persistent store.
     * @param transicion es.pode.publicacion.negocio.dominio.Transicion  
     */
    public void remove(es.pode.publicacion.negocio.dominio.Transicion transicion);

    /**
     * Removes the instance of es.pode.publicacion.negocio.dominio.Transicion having the given
     * <code>identifier</code> from the persistent store.
     * @param id java.lang.Long
     */
    public void remove(java.lang.Long id);

    /**
     * Removes all entities in the given <code>entities<code> collection.
     * @param entities java.util.Collection
     */
    public void remove(java.util.Collection entities);

  /**
   * <p>
   * Este metodo selecciona las transiciones que tengan como IdODE el
   * suministrado al metodo.
   * </p>
      * @param idODE  Identificador del ODE por el que buscamos.
      * @return java.util.List
   */
    public java.util.List buscarHistorialPorIdODE(java.lang.String idODE);

    /**
     * <p>
     *   Does the same thing as {@link #buscarHistorialPorIdODE(java.lang.String)} with an
     *   additional argument called <code>queryString</code>.  This <code>queryString</code>
     *   argument allows you to override the query string defined in {@link #buscarHistorialPorIdODE(java.lang.String)}.
     * </p>
     * @param queryString String
        * @param idODE  Identificador del ODE por el que buscamos.
        * @return java.util.List
     */
    public java.util.List buscarHistorialPorIdODE(String queryString, java.lang.String idODE);

    /**
     * <p>
     *   Does the same thing as {@link #buscarHistorialPorIdODE(java.lang.String)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param idODE  Identificador del ODE por el que buscamos.
        * @return java.util.List
     */
    public java.util.List buscarHistorialPorIdODE(int transform, java.lang.String idODE);

    /**
     * <p>
     *   Does the same thing as {@link #buscarHistorialPorIdODE(boolean, java.lang.String)} with an
     *   additional argument called <code>queryString</code>.  This <code>queryString</code>
     *   argument allows you to override the query string defined in {@link #buscarHistorialPorIdODE(int, java.lang.String idODE)}.
     * </p>
     * @param transform int
     * @param queryString String     
        * @param idODE  Identificador del ODE por el que buscamos.
        * @return java.util.List
     */
    public java.util.List buscarHistorialPorIdODE(int transform, String queryString, java.lang.String idODE);

  /**
   * <p>
   * Este metodo busca transiciones con el ultimo estado del ODE.
   * Para ello utiliza el criterio de busqueda que le pasan, que
   * contiene la informacion de busqueda y las condiciones de la
   * misma.
   * </p>
      * @param criterio  Criterio de busqueda del ultimno Estado el ODE.
      * @return java.util.List
   */
    public java.util.List buscarEstadoPorCriterioIdODE(es.pode.publicacion.negocio.dominio.IdODECriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarEstadoPorCriterioIdODE(es.pode.publicacion.negocio.dominio.IdODECriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param criterio  Criterio de busqueda del ultimno Estado el ODE.
        * @return java.util.List
     */
    public java.util.List buscarEstadoPorCriterioIdODE(final int transform, final es.pode.publicacion.negocio.dominio.IdODECriteria criterio);

  /**
   * <p>
   * Obtenemos un listado de transiciones con ODEs que tienen como
   * estado actual el estado que se pasa.
   * </p>
      * @param criterio  Criterio de busqueda para encontrar ODE's en el estado final que nos pasan.
      * @return java.util.List
   */
    public java.util.List buscarODEsPorCriterioEstado(es.pode.publicacion.negocio.dominio.EstadoCriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarODEsPorCriterioEstado(es.pode.publicacion.negocio.dominio.EstadoCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param criterio  Criterio de busqueda para encontrar ODE's en el estado final que nos pasan.
        * @return java.util.List
     */
    public java.util.List buscarODEsPorCriterioEstado(final int transform, final es.pode.publicacion.negocio.dominio.EstadoCriteria criterio);

  /**
   * <p>
   * Este metodo de busqueda devuelve una coleccion de transiciones
   * asociadas a ODEs con el mismo usuario.
   * </p>
      * @param criterio  Criterio de busqueda de transiciones por usuario.
      * @return java.util.List
   */
    public java.util.List buscarODEsPorCriterioUsuario(es.pode.publicacion.negocio.dominio.UsuarioCriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarODEsPorCriterioUsuario(es.pode.publicacion.negocio.dominio.UsuarioCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param criterio  Criterio de busqueda de transiciones por usuario.
        * @return java.util.List
     */
    public java.util.List buscarODEsPorCriterioUsuario(final int transform, final es.pode.publicacion.negocio.dominio.UsuarioCriteria criterio);

    public java.util.List buscarODEsPorCriterioEstadoUsuario(es.pode.publicacion.negocio.dominio.UsuarioEstadoCriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarODEsPorCriterioEstadoUsuario(es.pode.publicacion.negocio.dominio.UsuarioEstadoCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param criterio  Criterio de busqueda de usuarios y estados.
        * @return java.util.List
     */
    public java.util.List buscarODEsPorCriterioEstadoUsuario(final int transform, final es.pode.publicacion.negocio.dominio.UsuarioEstadoCriteria criterio);

  /**
   * <p>
   * Este metodo consulta los ODEs (solo habra 1) que estando en el
   * estado que le pasan, con el mismo identificador fue el usuario
   * el que se le pasa el que le llevo a dicho estado.
   * </p>
      * @param criterio  Criterio de busqueda por identificador de ODE, usuario y estado actual.
      * @return java.util.List
   */
    public java.util.List buscarODEsPorCriterioEstadoUsuarioIdODE(es.pode.publicacion.negocio.dominio.UsuarioEstadoODECriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarODEsPorCriterioEstadoUsuarioIdODE(es.pode.publicacion.negocio.dominio.UsuarioEstadoODECriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param criterio  Criterio de busqueda por identificador de ODE, usuario y estado actual.
        * @return java.util.List
     */
    public java.util.List buscarODEsPorCriterioEstadoUsuarioIdODE(final int transform, final es.pode.publicacion.negocio.dominio.UsuarioEstadoODECriteria criterio);

  /**
   * <p>
   * Se trata del metodo que nos permite obtener los ODEs que estan
   * en cierto estado ordenados por fecha en la que han transitado a
   * este estado. De mas reciente a mas tardio.
   * </p>
      * @param criterio  Criterio de busqueda por estado y fecha de modificacion.
      * @return java.util.List
   */
    public java.util.List buscarODEsPorCriterioEstadoFecha(es.pode.publicacion.negocio.dominio.EstadoFechaCriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarODEsPorCriterioEstadoFecha(es.pode.publicacion.negocio.dominio.EstadoFechaCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param criterio  Criterio de busqueda por estado y fecha de modificacion.
        * @return java.util.List
     */
    public java.util.List buscarODEsPorCriterioEstadoFecha(final int transform, final es.pode.publicacion.negocio.dominio.EstadoFechaCriteria criterio);

  /**
   * <p>
   * Consulta que devuelve una lista de historiales para un ode
   * concreto ordenado por fecha reciente.
   * </p>
      * @param criterio  Criterio de busqueda.
      * @return java.util.List
   */
    public java.util.List buscarHistorialPorIdODEFecha(es.pode.publicacion.negocio.dominio.IdODEFechaCriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarHistorialPorIdODEFecha(es.pode.publicacion.negocio.dominio.IdODEFechaCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param criterio  Criterio de busqueda.
        * @return java.util.List
     */
    public java.util.List buscarHistorialPorIdODEFecha(final int transform, final es.pode.publicacion.negocio.dominio.IdODEFechaCriteria criterio);

  /**
   * <p>
   * Se trata del metodo que permite buscar los ODEs que han sido
   * creados por cierto usuario y que estan actualmente en cierto
   * estado. Los resultados se devuelven ordenados por fecha de
   * transicion al ultimo estado.
   * </p>
      * @param criterio  Criterio para buscar los ODEs en cierto estado que han sido creados por cierto usuario. Odenados por fecha.
      * @return java.util.List
   */
    public java.util.List buscarODEsPorCriterioUsuarioCreacionEstadoFecha(es.pode.publicacion.negocio.dominio.UsuarioCreacionEstadoFechaCriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarODEsPorCriterioUsuarioCreacionEstadoFecha(es.pode.publicacion.negocio.dominio.UsuarioCreacionEstadoFechaCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param criterio  Criterio para buscar los ODEs en cierto estado que han sido creados por cierto usuario. Odenados por fecha.
        * @return java.util.List
     */
    public java.util.List buscarODEsPorCriterioUsuarioCreacionEstadoFecha(final int transform, final es.pode.publicacion.negocio.dominio.UsuarioCreacionEstadoFechaCriteria criterio);

  /**
   * <p>
   * Este metodo busca los ODEs que se encuentran en cierto estado,
   * creados por el usuario dado y que lleven en este estado dentro
   * del periodo dado.
   * </p>
      * @param criterio  Criterio de busqueda.
      * @return java.util.List
   */
    public java.util.List buscarODEsPorCriterioUsuarioEstadoDesdeHasta(es.pode.publicacion.negocio.dominio.UsuarioEstadoDesdeHastaCriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarODEsPorCriterioUsuarioEstadoDesdeHasta(es.pode.publicacion.negocio.dominio.UsuarioEstadoDesdeHastaCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param criterio  Criterio de busqueda.
        * @return java.util.List
     */
    public java.util.List buscarODEsPorCriterioUsuarioEstadoDesdeHasta(final int transform, final es.pode.publicacion.negocio.dominio.UsuarioEstadoDesdeHastaCriteria criterio);

  /**
   * <p>
   * Este metodo busca los ODEs que se encuentran en cierto estado y
   * que lleven en este estado dentro del periodo dado.
   * </p>
      * @param criterio  Criterio de busqueda.
      * @return java.util.List
   */
    public java.util.List buscarODEsPorCriterioEstadoDesdeHasta(es.pode.publicacion.negocio.dominio.EstadoDesdeHastaCriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarODEsPorCriterioEstadoDesdeHasta(es.pode.publicacion.negocio.dominio.EstadoDesdeHastaCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param criterio  Criterio de busqueda.
        * @return java.util.List
     */
    public java.util.List buscarODEsPorCriterioEstadoDesdeHasta(final int transform, final es.pode.publicacion.negocio.dominio.EstadoDesdeHastaCriteria criterio);

  /**
   * <p>
   * Este metodo implementa la busqueda de transiciones con el
   * criterio pasado.
   * </p>
      * @param criterio  Criterio de busqueda.
      * @return java.util.List
   */
    public java.util.List buscarTransicionesPorCriterioDesdeHasta(es.pode.publicacion.negocio.dominio.ActividadDesdeHastaCriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarTransicionesPorCriterioDesdeHasta(es.pode.publicacion.negocio.dominio.ActividadDesdeHastaCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param criterio  Criterio de busqueda.
        * @return java.util.List
     */
    public java.util.List buscarTransicionesPorCriterioDesdeHasta(final int transform, final es.pode.publicacion.negocio.dominio.ActividadDesdeHastaCriteria criterio);

  /**
   * <p>
   * Este metodo devuelve las transiciones finales de los ODEs en la
   * fecha dada. Para cada ODE que estuviera en la plataforma en el
   * estado que fuere, devuelve la ultima transicion para la fecha
   * dada.
   * </p>
      * @param fecha  Fecha para la que se quieren obtener las transiciones.
      * @return java.util.List
   */
    public java.util.List obtenerTransicionesFinalesFecha(java.util.Calendar fecha);

    /**
     * <p>
     *   Does the same thing as {@link #obtenerTransicionesFinalesFecha(java.util.Calendar)} with an
     *   additional argument called <code>queryString</code>.  This <code>queryString</code>
     *   argument allows you to override the query string defined in {@link #obtenerTransicionesFinalesFecha(java.util.Calendar)}.
     * </p>
     * @param queryString String
        * @param fecha  Fecha para la que se quieren obtener las transiciones.
        * @return java.util.List
     */
    public java.util.List obtenerTransicionesFinalesFecha(String queryString, java.util.Calendar fecha);

    /**
     * <p>
     *   Does the same thing as {@link #obtenerTransicionesFinalesFecha(java.util.Calendar)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param fecha  Fecha para la que se quieren obtener las transiciones.
        * @return java.util.List
     */
    public java.util.List obtenerTransicionesFinalesFecha(int transform, java.util.Calendar fecha);

    /**
     * <p>
     *   Does the same thing as {@link #obtenerTransicionesFinalesFecha(boolean, java.util.Calendar)} with an
     *   additional argument called <code>queryString</code>.  This <code>queryString</code>
     *   argument allows you to override the query string defined in {@link #obtenerTransicionesFinalesFecha(int, java.util.Calendar fecha)}.
     * </p>
     * @param transform int
     * @param queryString String     
        * @param fecha  Fecha para la que se quieren obtener las transiciones.
        * @return java.util.List
     */
    public java.util.List obtenerTransicionesFinalesFecha(int transform, String queryString, java.util.Calendar fecha);

  /**
   * <p>
   * Este metodo implementa la busqueda por el criterio dado.
   * </p>
      * @param criterio  Criterio de busqueda de transiciones asociadas a un ODE creado por un usuario en un periodo de fechas dado.
      * @return java.util.List
   */
    public java.util.List buscarTransicionesPorCriterioActividad(es.pode.publicacion.negocio.dominio.UsuarioActividadCriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarTransicionesPorCriterioActividad(es.pode.publicacion.negocio.dominio.UsuarioActividadCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @param criterio  Criterio de busqueda de transiciones asociadas a un ODE creado por un usuario en un periodo de fechas dado.
        * @return java.util.List
     */
    public java.util.List buscarTransicionesPorCriterioActividad(final int transform, final es.pode.publicacion.negocio.dominio.UsuarioActividadCriteria criterio);

  /**
   * <p>
   * Este metodo implementa la busqueda por el criterio dado.
   * </p>
      * @return java.util.List
   */
    public java.util.List buscarODEsPorCriterioUsuariosCreacionEstadoFecha(es.pode.publicacion.negocio.dominio.UsuariosCreacionEstadoFechaCriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarODEsPorCriterioUsuariosCreacionEstadoFecha(es.pode.publicacion.negocio.dominio.UsuariosCreacionEstadoFechaCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @return java.util.List
     */
    public java.util.List buscarODEsPorCriterioUsuariosCreacionEstadoFecha(final int transform, final es.pode.publicacion.negocio.dominio.UsuariosCreacionEstadoFechaCriteria criterio);

  /**
   * <p>
   * Metodo que devuelve la lista de Odes creados o rechazados que
   * esten compartidos por una lista de usuarios
   * </p>
      * @return java.util.List
   */
    public java.util.List buscarOdesPorEstadoCompartidoUsuarios(es.pode.publicacion.negocio.dominio.EstadoCompartidoUsuariosCriteria criterio);

    /**
     * <p>
     *   Does the same thing as {@link #buscarOdesPorEstadoCompartidoUsuarios(es.pode.publicacion.negocio.dominio.EstadoCompartidoUsuariosCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @return java.util.List
     */
    public java.util.List buscarOdesPorEstadoCompartidoUsuarios(final int transform, final es.pode.publicacion.negocio.dominio.EstadoCompartidoUsuariosCriteria criterio);

  /**
   * <p>
   * Metodo que devuelve la lista de Odes creados o rechazados que
   * esten compartidos
   * </p>
      * @return java.util.List
   */
    public java.util.List buscarOdesPorEstadoCompartido(es.pode.publicacion.negocio.dominio.EstadoCompartidoCriteria criteria);

    /**
     * <p>
     *   Does the same thing as {@link #buscarOdesPorEstadoCompartido(es.pode.publicacion.negocio.dominio.EstadoCompartidoCriteria)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     * @param transform int
        * @return java.util.List
     */
    public java.util.List buscarOdesPorEstadoCompartido(final int transform, final es.pode.publicacion.negocio.dominio.EstadoCompartidoCriteria criteria);

}
