// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.dri.negocio.servicios.SQI;

import net.sf.dozer.util.mapping.MapperIF;

import org.apache.log4j.Logger;


/**
 * <p>
 * Spring Service base class for <code>es.pode.dri.negocio.servicios.SQI.SrvSQIService</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.dri.negocio.servicios.SQI.SrvSQIService
 */
public abstract class SrvSQIServiceBase
    implements es.pode.dri.negocio.servicios.SQI.SrvSQIService
{

		 protected static final Logger logger = Logger.getLogger(SrvSQIServiceBase.class);


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


	
	        
    
	    	    private es.pode.dri.negocio.servicios.Sesion.SrvSesionesService srvSesionesService;
	
	    /**
	     * Sets the reference to <code>srvSesionesService</code>.
	     */
	    public void setSrvSesionesService(es.pode.dri.negocio.servicios.Sesion.SrvSesionesService srvSesionesService)
	    {
	        this.srvSesionesService = srvSesionesService;
	    }
	
	    /**
	     * Gets the reference to <code>srvSesionesService</code>.
	     */
	    protected es.pode.dri.negocio.servicios.Sesion.SrvSesionesService getSrvSesionesService()
	    {
	        return this.srvSesionesService;
	    }
	    
	        
	
	        
    
	    	    private es.pode.dri.negocio.servicios.SQI.SrvSQISincronoService srvSQISincronoService;
	
	    /**
	     * Sets the reference to <code>srvSQISincronoService</code>.
	     */
	    public void setSrvSQISincronoService(es.pode.dri.negocio.servicios.SQI.SrvSQISincronoService srvSQISincronoService)
	    {
	        this.srvSQISincronoService = srvSQISincronoService;
	    }
	
	    /**
	     * Gets the reference to <code>srvSQISincronoService</code>.
	     */
	    protected es.pode.dri.negocio.servicios.SQI.SrvSQISincronoService getSrvSQISincronoService()
	    {
	        return this.srvSQISincronoService;
	    }
	    
	        
	
	        
    
	    	    private es.pode.dri.negocio.servicios.SQI.SrvSQIAsincronoService srvSQIAsincronoService;
	
	    /**
	     * Sets the reference to <code>srvSQIAsincronoService</code>.
	     */
	    public void setSrvSQIAsincronoService(es.pode.dri.negocio.servicios.SQI.SrvSQIAsincronoService srvSQIAsincronoService)
	    {
	        this.srvSQIAsincronoService = srvSQIAsincronoService;
	    }
	
	    /**
	     * Gets the reference to <code>srvSQIAsincronoService</code>.
	     */
	    protected es.pode.dri.negocio.servicios.SQI.SrvSQIAsincronoService getSrvSQIAsincronoService()
	    {
	        return this.srvSQIAsincronoService;
	    }
	    
	        
    private es.pode.dri.negocio.dominio.ConsultaDao consultaDao;

    /**
     * Sets the reference to <code>consulta</code>'s DAO.
     */
    public void setConsultaDao(es.pode.dri.negocio.dominio.ConsultaDao consultaDao)
    {
        this.consultaDao = consultaDao;
    }

    /**
     * Gets the reference to <code>consulta</code>'s DAO.
     */
    protected es.pode.dri.negocio.dominio.ConsultaDao getConsultaDao()
    {
        return this.consultaDao;
    }


    /**
     * @see es.pode.dri.negocio.servicios.SQI.SrvSQIService#getTotalResultsCount(java.lang.String, java.lang.String)
     */
    public java.lang.Integer getTotalResultsCount(java.lang.String targetSessionID, java.lang.String queryStatement)
        throws es.pode.dri.negocio.servicios.SQI.NoQuerySubmittedException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException
    {
        if (targetSessionID == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.getTotalResultsCount(java.lang.String targetSessionID, java.lang.String queryStatement) - 'targetSessionID' can not be null");
        }
        if (queryStatement == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.getTotalResultsCount(java.lang.String targetSessionID, java.lang.String queryStatement) - 'queryStatement' can not be null");
        }
        try
        {
            return this.handleGetTotalResultsCount(targetSessionID, queryStatement);
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoQuerySubmittedException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoSuchSessionException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.dri.negocio.servicios.SQI.SrvSQIServiceException(
                "Error performing 'es.pode.dri.negocio.servicios.SQI.SrvSQIService.getTotalResultsCount(java.lang.String targetSessionID, java.lang.String queryStatement)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #getTotalResultsCount(java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.Integer handleGetTotalResultsCount(java.lang.String targetSessionID, java.lang.String queryStatement)
        throws java.lang.Exception;

    /**
     * @see es.pode.dri.negocio.servicios.SQI.SrvSQIService#setMaxDuration(java.lang.String, java.lang.Integer)
     */
    public void setMaxDuration(java.lang.String targetSessionID, java.lang.Integer maxDuration)
        throws es.pode.dri.negocio.servicios.SQI.NoValidMaxDurationException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException
    {
        if (targetSessionID == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.setMaxDuration(java.lang.String targetSessionID, java.lang.Integer maxDuration) - 'targetSessionID' can not be null");
        }
        if (maxDuration == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.setMaxDuration(java.lang.String targetSessionID, java.lang.Integer maxDuration) - 'maxDuration' can not be null");
        }
        try
        {
            this.handleSetMaxDuration(targetSessionID, maxDuration);
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoValidMaxDurationException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoSuchSessionException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.dri.negocio.servicios.SQI.SrvSQIServiceException(
                "Error performing 'es.pode.dri.negocio.servicios.SQI.SrvSQIService.setMaxDuration(java.lang.String targetSessionID, java.lang.Integer maxDuration)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #setMaxDuration(java.lang.String, java.lang.Integer)}
      */
    protected abstract void handleSetMaxDuration(java.lang.String targetSessionID, java.lang.Integer maxDuration)
        throws java.lang.Exception;

    /**
     * @see es.pode.dri.negocio.servicios.SQI.SrvSQIService#setResultsFormat(java.lang.String, java.lang.String)
     */
    public void setResultsFormat(java.lang.String targetSessionID, java.lang.String resultsFormat)
        throws es.pode.dri.negocio.servicios.SQI.ResultsFormatNotSupportedException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException
    {
        if (targetSessionID == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.setResultsFormat(java.lang.String targetSessionID, java.lang.String resultsFormat) - 'targetSessionID' can not be null");
        }
        if (resultsFormat == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.setResultsFormat(java.lang.String targetSessionID, java.lang.String resultsFormat) - 'resultsFormat' can not be null");
        }
        try
        {
            this.handleSetResultsFormat(targetSessionID, resultsFormat);
        }
        catch (es.pode.dri.negocio.servicios.SQI.ResultsFormatNotSupportedException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoSuchSessionException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.dri.negocio.servicios.SQI.SrvSQIServiceException(
                "Error performing 'es.pode.dri.negocio.servicios.SQI.SrvSQIService.setResultsFormat(java.lang.String targetSessionID, java.lang.String resultsFormat)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #setResultsFormat(java.lang.String, java.lang.String)}
      */
    protected abstract void handleSetResultsFormat(java.lang.String targetSessionID, java.lang.String resultsFormat)
        throws java.lang.Exception;

    /**
     * @see es.pode.dri.negocio.servicios.SQI.SrvSQIService#setResultsSetSize(java.lang.String, java.lang.Integer)
     */
    public void setResultsSetSize(java.lang.String targetSessionID, java.lang.Integer resultsSetSize)
        throws es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException, es.pode.dri.negocio.servicios.SQI.NoValidResultsSetSizeException
    {
        if (targetSessionID == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.setResultsSetSize(java.lang.String targetSessionID, java.lang.Integer resultsSetSize) - 'targetSessionID' can not be null");
        }
        if (resultsSetSize == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.setResultsSetSize(java.lang.String targetSessionID, java.lang.Integer resultsSetSize) - 'resultsSetSize' can not be null");
        }
        try
        {
            this.handleSetResultsSetSize(targetSessionID, resultsSetSize);
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoSuchSessionException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoValidResultsSetSizeException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.dri.negocio.servicios.SQI.SrvSQIServiceException(
                "Error performing 'es.pode.dri.negocio.servicios.SQI.SrvSQIService.setResultsSetSize(java.lang.String targetSessionID, java.lang.Integer resultsSetSize)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #setResultsSetSize(java.lang.String, java.lang.Integer)}
      */
    protected abstract void handleSetResultsSetSize(java.lang.String targetSessionID, java.lang.Integer resultsSetSize)
        throws java.lang.Exception;

    /**
     * @see es.pode.dri.negocio.servicios.SQI.SrvSQIService#setSourceLocation(java.lang.String, java.lang.String)
     */
    public void setSourceLocation(java.lang.String targetSessionID, java.lang.String sourceLocation)
        throws es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException, es.pode.dri.negocio.servicios.SQI.NoValidLocationException
    {
        if (targetSessionID == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.setSourceLocation(java.lang.String targetSessionID, java.lang.String sourceLocation) - 'targetSessionID' can not be null");
        }
        if (sourceLocation == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.setSourceLocation(java.lang.String targetSessionID, java.lang.String sourceLocation) - 'sourceLocation' can not be null");
        }
        try
        {
            this.handleSetSourceLocation(targetSessionID, sourceLocation);
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoSuchSessionException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoValidLocationException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.dri.negocio.servicios.SQI.SrvSQIServiceException(
                "Error performing 'es.pode.dri.negocio.servicios.SQI.SrvSQIService.setSourceLocation(java.lang.String targetSessionID, java.lang.String sourceLocation)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #setSourceLocation(java.lang.String, java.lang.String)}
      */
    protected abstract void handleSetSourceLocation(java.lang.String targetSessionID, java.lang.String sourceLocation)
        throws java.lang.Exception;

    /**
     * @see es.pode.dri.negocio.servicios.SQI.SrvSQIService#setQueryLanguage(java.lang.String, java.lang.String)
     */
    public void setQueryLanguage(java.lang.String targetSessionID, java.lang.String queryLanguageID)
        throws es.pode.dri.negocio.servicios.SQI.QueryLanguageNotSupportedException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException
    {
        if (targetSessionID == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.setQueryLanguage(java.lang.String targetSessionID, java.lang.String queryLanguageID) - 'targetSessionID' can not be null");
        }
        if (queryLanguageID == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.setQueryLanguage(java.lang.String targetSessionID, java.lang.String queryLanguageID) - 'queryLanguageID' can not be null");
        }
        try
        {
            this.handleSetQueryLanguage(targetSessionID, queryLanguageID);
        }
        catch (es.pode.dri.negocio.servicios.SQI.QueryLanguageNotSupportedException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoSuchSessionException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.dri.negocio.servicios.SQI.SrvSQIServiceException(
                "Error performing 'es.pode.dri.negocio.servicios.SQI.SrvSQIService.setQueryLanguage(java.lang.String targetSessionID, java.lang.String queryLanguageID)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #setQueryLanguage(java.lang.String, java.lang.String)}
      */
    protected abstract void handleSetQueryLanguage(java.lang.String targetSessionID, java.lang.String queryLanguageID)
        throws java.lang.Exception;

    /**
     * @see es.pode.dri.negocio.servicios.SQI.SrvSQIService#setMaxQueryResults(java.lang.String, java.lang.Integer)
     */
    public void setMaxQueryResults(java.lang.String targetSessionID, java.lang.Integer maxQueryResults)
        throws es.pode.dri.negocio.servicios.SQI.NoValidMaxQueryResultsException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException
    {
        if (targetSessionID == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.setMaxQueryResults(java.lang.String targetSessionID, java.lang.Integer maxQueryResults) - 'targetSessionID' can not be null");
        }
        if (maxQueryResults == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.setMaxQueryResults(java.lang.String targetSessionID, java.lang.Integer maxQueryResults) - 'maxQueryResults' can not be null");
        }
        try
        {
            this.handleSetMaxQueryResults(targetSessionID, maxQueryResults);
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoValidMaxQueryResultsException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoSuchSessionException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.dri.negocio.servicios.SQI.SrvSQIServiceException(
                "Error performing 'es.pode.dri.negocio.servicios.SQI.SrvSQIService.setMaxQueryResults(java.lang.String targetSessionID, java.lang.Integer maxQueryResults)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #setMaxQueryResults(java.lang.String, java.lang.Integer)}
      */
    protected abstract void handleSetMaxQueryResults(java.lang.String targetSessionID, java.lang.Integer maxQueryResults)
        throws java.lang.Exception;

    /**
     * @see es.pode.dri.negocio.servicios.SQI.SrvSQIService#asynchronousQuery(java.lang.String, java.lang.String, java.lang.String)
     */
    public void asynchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.String queryID)
        throws es.pode.dri.negocio.servicios.SQI.NoValidQueryStatementException, es.pode.dri.negocio.servicios.SQI.NoSourceLocationException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException
    {
        if (targetSessionID == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.asynchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.String queryID) - 'targetSessionID' can not be null");
        }
        if (queryStatement == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.asynchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.String queryID) - 'queryStatement' can not be null");
        }
        if (queryID == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.asynchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.String queryID) - 'queryID' can not be null");
        }
        try
        {
            this.handleAsynchronousQuery(targetSessionID, queryStatement, queryID);
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoValidQueryStatementException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoSourceLocationException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoSuchSessionException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.dri.negocio.servicios.SQI.SrvSQIServiceException(
                "Error performing 'es.pode.dri.negocio.servicios.SQI.SrvSQIService.asynchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.String queryID)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #asynchronousQuery(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract void handleAsynchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.String queryID)
        throws java.lang.Exception;

    /**
     * @see es.pode.dri.negocio.servicios.SQI.SrvSQIService#synchronousQuery(java.lang.String, java.lang.String, java.lang.Integer)
     */
    public java.lang.String synchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.Integer startResult)
        throws es.pode.dri.negocio.servicios.SQI.NoValidQueryStatementException, es.pode.dri.negocio.servicios.SQI.NoValidStartResultException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException
    {
        if (targetSessionID == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.synchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.Integer startResult) - 'targetSessionID' can not be null");
        }
        if (queryStatement == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.synchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.Integer startResult) - 'queryStatement' can not be null");
        }
        if (startResult == null)
        {
            throw new IllegalArgumentException(
                "es.pode.dri.negocio.servicios.SQI.SrvSQIService.synchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.Integer startResult) - 'startResult' can not be null");
        }
        try
        {
            return this.handleSynchronousQuery(targetSessionID, queryStatement, startResult);
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoValidQueryStatementException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoValidStartResultException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoSuchSessionException ex)
        {
            throw ex;
        }
        catch (es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.dri.negocio.servicios.SQI.SrvSQIServiceException(
                "Error performing 'es.pode.dri.negocio.servicios.SQI.SrvSQIService.synchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.Integer startResult)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #synchronousQuery(java.lang.String, java.lang.String, java.lang.Integer)}
      */
    protected abstract java.lang.String handleSynchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.Integer startResult)
        throws java.lang.Exception;

    /**
     * @see es.pode.dri.negocio.servicios.SQI.SrvSQIService#estasActivo()
     */
    public java.lang.Boolean estasActivo()
        throws es.pode.dri.negocio.servicios.SQI.NoSuchSessionException
    {
        try
        {
            return this.handleEstasActivo();
        }
        catch (es.pode.dri.negocio.servicios.SQI.NoSuchSessionException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.dri.negocio.servicios.SQI.SrvSQIServiceException(
                "Error performing 'es.pode.dri.negocio.servicios.SQI.SrvSQIService.estasActivo()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #estasActivo()}
      */
    protected abstract java.lang.Boolean handleEstasActivo()
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.dri.negocio.PrincipalStore.get();
    }
}