// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringHibernateDaoBase.vsl in andromda-spring-cartridge.
//
package es.pode.dri.negocio.dominio;

import net.sf.dozer.util.mapping.MapperIF;

/**
 * <p>
 * Base Spring DAO Class: is able to create, update, remove, load, and find
 * objects of type <code>es.pode.dri.negocio.dominio.Consulta</code>.
 * </p>
 *
 * @see es.pode.dri.negocio.dominio.Consulta
 */
public abstract class ConsultaDaoBase
    extends org.springframework.orm.hibernate3.support.HibernateDaoSupport
    implements es.pode.dri.negocio.dominio.ConsultaDao
{



	

	/**
	 * Constant that identifies a mapping between an 
	 * entity (Consulta) and a VO (ConsultaVO)
	 */
	public final static String DEF_MAPPING_CONSULTA_CONSULTAVO = "DEF_MAPPING_CONSULTA_CONSULTAVO";
	
	/**
	 * Constant that identifies a mapping between a 
	 * VO (ConsultaVO) and an entity (Consulta)
	 */
	public final static String DEF_MAPPING_CONSULTAVO_CONSULTA = "DEF_MAPPING_CONSULTAVO_CONSULTA";
	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#load(int, java.lang.Long)
     */
    public Object load(final int transform, final java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "Consulta.load - 'id' can not be null");
        }
        final java.util.List list = this.getHibernateTemplate().find(
            "from es.pode.dri.negocio.dominio.Consulta as entity where entity.id = ?", id);
        final Object entity = list != null && !list.isEmpty() ? list.iterator().next() : null;
        return transformEntity(transform, (es.pode.dri.negocio.dominio.Consulta)entity);
    }

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#load(java.lang.Long)
     */
    public es.pode.dri.negocio.dominio.Consulta load(java.lang.Long id)
    {
        return (es.pode.dri.negocio.dominio.Consulta)this.load(TRANSFORM_NONE, id);
    }
    
    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#loadAll()
     */
    public java.util.Collection loadAll()
    {
        return this.loadAll(TRANSFORM_NONE);
    }
    
    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#loadAll(int)
     */
    public java.util.Collection loadAll(final int transform)
    {
        final java.util.Collection results = this.getHibernateTemplate().loadAll(es.pode.dri.negocio.dominio.ConsultaImpl.class);
        this.transformEntities(transform, results);
        return results;
    }
    

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#create(es.pode.dri.negocio.dominio.Consulta)
     */
    public es.pode.dri.negocio.dominio.Consulta create(es.pode.dri.negocio.dominio.Consulta consulta)
    {
        return (es.pode.dri.negocio.dominio.Consulta)this.create(TRANSFORM_NONE, consulta);
    }

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#create(int transform, es.pode.dri.negocio.dominio.Consulta)
     */
    public Object create(final int transform, final es.pode.dri.negocio.dominio.Consulta consulta)
    {
        if (consulta == null)
        {
            throw new IllegalArgumentException(
                "Consulta.create - 'consulta' can not be null");
        }
        Object identifier = this.getHibernateTemplate().save(consulta);
        consulta.setId((java.lang.Long)identifier);
        return this.transformEntity(transform, consulta);
    }

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#create(java.util.Collection)
     */
    public java.util.Collection create(final java.util.Collection entities)
    {
        return create(TRANSFORM_NONE, entities);
    }

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#create(int, java.util.Collection)
     */
    public java.util.Collection create(final int transform, final java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Consulta.create - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate3.HibernateCallback()
            {
                public Object doInHibernate(org.hibernate.Session session)
                    throws org.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        create(transform, (es.pode.dri.negocio.dominio.Consulta)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
        return entities;
    }

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#create(int, java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer)
     */
    public es.pode.dri.negocio.dominio.Consulta create(
 java.lang.String query, java.lang.String lenguaje, java.lang.Integer maxDuracion, java.lang.Integer maxResultados, java.lang.String formatoResultados, java.lang.Integer resultadosDevueltos, java.lang.String localizacionRemota, java.lang.String idRemota, java.lang.Integer totalResultados)
    {
         return (es.pode.dri.negocio.dominio.Consulta)this.create(TRANSFORM_NONE,  query, lenguaje, maxDuracion, maxResultados, formatoResultados, resultadosDevueltos, localizacionRemota, idRemota, totalResultados);
    }

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#create(int, java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer)
     */
    public Object create(
        final int transform,
 java.lang.String query, java.lang.String lenguaje, java.lang.Integer maxDuracion, java.lang.Integer maxResultados, java.lang.String formatoResultados, java.lang.Integer resultadosDevueltos, java.lang.String localizacionRemota, java.lang.String idRemota, java.lang.Integer totalResultados)
    {
        es.pode.dri.negocio.dominio.Consulta entity = new es.pode.dri.negocio.dominio.ConsultaImpl();
        entity.setQuery(query);
        entity.setLenguaje(lenguaje);
        entity.setMaxDuracion(maxDuracion);
        entity.setMaxResultados(maxResultados);
        entity.setFormatoResultados(formatoResultados);
        entity.setResultadosDevueltos(resultadosDevueltos);
        entity.setLocalizacionRemota(localizacionRemota);
        entity.setIdRemota(idRemota);
        entity.setTotalResultados(totalResultados);
        return this.create(transform, entity);
    }

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#update(es.pode.dri.negocio.dominio.Consulta)
     */
    public void update(es.pode.dri.negocio.dominio.Consulta consulta)
    {
        if (consulta == null)
        {
            throw new IllegalArgumentException(
                "Consulta.update - 'consulta' can not be null");
        }
        this.getHibernateTemplate().update(consulta);
    }

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#update(java.util.Collection)
     */
    public void update(final java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Consulta.update - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate3.HibernateCallback()
            {
                public Object doInHibernate(org.hibernate.Session session)
                    throws org.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        update((es.pode.dri.negocio.dominio.Consulta)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
    }

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#remove(es.pode.dri.negocio.dominio.Consulta)
     */
    public void remove(es.pode.dri.negocio.dominio.Consulta consulta)
    {
        if (consulta == null)
        {
            throw new IllegalArgumentException(
                "Consulta.remove - 'consulta' can not be null");
        }
        this.getHibernateTemplate().delete(consulta);
    }

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#remove(java.lang.Long)
     */
    public void remove(java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "Consulta.remove - 'id' can not be null");
        }
        es.pode.dri.negocio.dominio.Consulta entity = this.load(id);
        if (entity != null)
        {
            this.remove(entity);
        }
    }

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#remove(java.util.Collection)
     */
    public void remove(java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Consulta.remove - 'entities' can not be null");
        }
        this.getHibernateTemplate().deleteAll(entities);
    }

    /**
     * @see es.pode.dri.negocio.dominio.Consulta#buscaConsultaPorCriterioSesion(es.pode.dri.negocio.dominio.ConsultaPorSesionCriteria)
     */
    public java.util.List buscaConsultaPorCriterioSesion(es.pode.dri.negocio.dominio.ConsultaPorSesionCriteria criterio)
    {
        return this.buscaConsultaPorCriterioSesion(TRANSFORM_NONE, criterio);
    }

    /**
     * @see es.pode.dri.negocio.dominio.Consulta#buscaConsultaPorCriterioSesion(int, java.lang.String, es.pode.dri.negocio.dominio.ConsultaPorSesionCriteria)
     */
    public java.util.List buscaConsultaPorCriterioSesion(final int transform, final es.pode.dri.negocio.dominio.ConsultaPorSesionCriteria criterio)
    {
        try
        {
            es.pode.dri.negocio.CriteriaSearch criteriaSearch = new es.pode.dri.negocio.CriteriaSearch(super.getSession(false), es.pode.dri.negocio.dominio.ConsultaImpl.class);
            criteriaSearch.getConfiguration().setFirstResult(criterio.getFirstResult());
            criteriaSearch.getConfiguration().setFetchSize(criterio.getFetchSize());
            criteriaSearch.getConfiguration().setMaximumResultSize(criterio.getMaximumResultSize());
										            es.pode.dri.negocio.CriteriaSearchParameter parameter1 =
                new es.pode.dri.negocio.CriteriaSearchParameter(
                    criterio.getSesion(),
                    "sesion.idSesion", es.pode.dri.negocio.CriteriaSearchParameter.EQUAL_COMPARATOR);
            criteriaSearch.addParameter(parameter1);
            // Call this method to include any modification to the criteria, default implementation is void.
            criteriaSearch = modifybuscaConsultaPorCriterioSesion(criteriaSearch);
            java.util.List results = criteriaSearch.executeAsList();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }
    
    /**
     * Defauly implementation. Overrride to include any distinct search.
     * 
     * @param criteriaSearch The criteriaSearch to modify.          
     */
    protected es.pode.dri.negocio.CriteriaSearch modifybuscaConsultaPorCriterioSesion (es.pode.dri.negocio.CriteriaSearch criteriaSearch){
        return criteriaSearch;
    }
    

    /**
     * Allows transformation of entities into value objects
     * (or something else for that matter), when the <code>transform</code>
     * flag is set to one of the constants defined in <code>es.pode.dri.negocio.dominio.ConsultaDao</code>, please note
     * that the {@link #TRANSFORM_NONE} constant denotes no transformation, so the entity itself
     * will be returned.
     * <p/>
     * This method will return instances of these types:
     * <ul>
     *   <li>{@link es.pode.dri.negocio.dominio.Consulta} - {@link #TRANSFORM_NONE}</li>
     *   <li>{@link es.pode.dri.negocio.servicios.ConsultaVO} - {@link TRANSFORM_CONSULTAVO}</li>
     * </ul>
     *
     * If the integer argument value is unknown {@link #TRANSFORM_NONE} is assumed.
     *
     * @param transform one of the constants declared in {@link es.pode.dri.negocio.dominio.ConsultaDao}
     * @param entity an entity that was found
     * @return the transformed entity (i.e. new value object, etc)
     * @see #transformEntities(int,java.util.Collection)
     */
    private final Object transformEntity(final int transform, final es.pode.dri.negocio.dominio.Consulta entity)
    {
        Object target = null;
        if (entity != null)
        {
            switch (transform)
            {
                case es.pode.dri.negocio.dominio.ConsultaDao.TRANSFORM_CONSULTAVO :
                    target = toConsultaVO(entity);
                    break;
                case TRANSFORM_NONE : // fall-through
                default:
                    target = entity;
            }
        }
        return target;
    }

    /**
     * Transforms a collection of entities using the
     * {@link #transformEntity(int,es.pode.dri.negocio.dominio.Consulta)}
     * method. This method does not instantiate a new collection.
     * <p/>
     * This method is to be used internally only.
     *
     * @param transform one of the constants declared in <code>es.pode.dri.negocio.dominio.ConsultaDao</code>
     * @param entities the collection of entities to transform
     * @return the same collection as the argument, but this time containing the transformed entities
     * @see #transformEntity(int,es.pode.dri.negocio.dominio.Consulta)
     */
    private final void transformEntities(final int transform, final java.util.Collection entities)
    {
        switch (transform)
        {
            case es.pode.dri.negocio.dominio.ConsultaDao.TRANSFORM_CONSULTAVO :
                toConsultaVOCollection(entities);
                break;
            case TRANSFORM_NONE : // fall-through
                default:
                // do nothing;
        }
    }

    /**
     * @see es.pode.dri.negocio.dominio.ConsultaDao#toConsultaVOCollection(java.util.Collection)
     */
    public final void toConsultaVOCollection(java.util.Collection entities)
    {
        if (entities == null)
        {
            entities = java.util.Collections.EMPTY_LIST;
        }
        else
        {
            org.apache.commons.collections.CollectionUtils.transform(entities, CONSULTAVO_TRANSFORMER);
        }
    }

    /**
     * Base implementation for transforming the results of a report query into a value object. This
     * implementation exists for convenience reasons only. It needs only be overridden in the
     * {@link ConsultaDaoImpl} class if you intend to use reporting queries.
     * @see es.pode.dri.negocio.dominio.ConsultaDao#toConsultaVO(es.pode.dri.negocio.dominio.Consulta)
     */
    protected es.pode.dri.negocio.servicios.ConsultaVO toConsultaVO(Object[] row)
    {
        return null;
    }

    /**
     * This anonymous transformer is designed to transform entities or report query results
     * (which result in an array of objects) to {@link es.pode.dri.negocio.servicios.ConsultaVO}
     * using the Jakarta Commons-Collections Transformation API.
     */
    private final org.apache.commons.collections.Transformer CONSULTAVO_TRANSFORMER =
        new org.apache.commons.collections.Transformer()
        {
            public Object transform(Object input)
            {
                Object result = null;
                if (input instanceof es.pode.dri.negocio.dominio.Consulta)
                {
                    result = toConsultaVO((es.pode.dri.negocio.dominio.Consulta)input);
                }
                else if (input instanceof Object[])
                {
                    result = toConsultaVO((Object[])input);
                }
                return result;
            }
        };

	/**
	 * Copy a VO to a new entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @return A new entity created with the values extracted from the vo.
	 */
	public es.pode.dri.negocio.dominio.Consulta fromConsultaVO(final es.pode.dri.negocio.servicios.ConsultaVO vo) {
        //default mapping between VO and entity
        return (es.pode.dri.negocio.dominio.Consulta) 
                  this.getBeanMapper().map(vo, es.pode.dri.negocio.dominio.ConsultaImpl.class, DEF_MAPPING_CONSULTAVO_CONSULTA);
    }

	/**
	 * Copy a VO to an existing entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @param entity The destination bean (an existing entity)
	 */
    public void fromConsultaVO(es.pode.dri.negocio.servicios.ConsultaVO vo, es.pode.dri.negocio.dominio.Consulta entity) {
        //default mapping between VO and entity
        this.getBeanMapper().map(vo, entity, DEF_MAPPING_CONSULTAVO_CONSULTA);
    }
		
		
}