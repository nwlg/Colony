// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringService.vsl in andromda-spring-cartridge.
//
package es.pode.dri.negocio.servicios.SQI;

/**
 * <p>
 * Este servicio (Web Service) implementa la interfaz SQI que tiene
 * que soportar el DRI. Esta interfaz esta definida como una
 * coleccion de metodos los cuales tienen que cunplir cierta
 * funcionalidad que esta definida en el documento:
 * </p>
 * <p>
 * ftp://ftp.cenorm.be/PUBLIC/CWAs/e-Europe/WS-LT/CWA15454-00-2005-Nov.pdf
 * </p>
 */
public interface SrvSQIService
{
  /**
   * <p>
   * Este metodo devuelve el numero total de resultados disponibles
   * para una query.
   * </p>
   * <p>
   * Recibe como parametro el identificador de la sesion sobre la que
   * se realiza la operacion y la query de la que se quiere saber
   * cuantos resultados dispobibles hay.
   * </p>
   * <p>
   * Si la query ya se ha ejecutado, intentamos averiguar dicha
   * informacion sin necesidad de ejecutarla.
   * </p>
      * @param targetSessionID  Identificador de la sesion sobre la que se realiza la operacion.
         * @param queryStatement  La query sobre la que se quiere saber el numero de resutlados dispobibles.
      * @return java.lang.Integer
   * @throws throws es.pode.dri.negocio.servicios.SQI.NoQuerySubmittedException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException Exception
   */
    public java.lang.Integer getTotalResultsCount(java.lang.String targetSessionID, java.lang.String queryStatement)
        throws es.pode.dri.negocio.servicios.SQI.NoQuerySubmittedException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException;

  /**
   * <p>
   * Este metodo permite establecer un timeout para las consultas
   * asincronas.
   * </p>
      * @param targetSessionID  Identificador de la sesion que se va a utilizar.
         * @param maxDuration  Maxima duracion de una consulta. El valor se interpreta como milisegundos.
      * @throws throws es.pode.dri.negocio.servicios.SQI.NoValidMaxDurationException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException Exception
   */
    public void setMaxDuration(java.lang.String targetSessionID, java.lang.Integer maxDuration)
        throws es.pode.dri.negocio.servicios.SQI.NoValidMaxDurationException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException;

  /**
   * <p>
   * Este metodo permite especificar el formato del result set que se
   * devuelve como resulado de la ejecucion de una query. Este
   * parametro se define como una URI al esquema de como se quieren
   * los resulados o como un valor predefinido.
   * </p>
      * @param targetSessionID  Identificador de la sesion que se va a utilizar.
         * @param resultsFormat  URI o valor predefinido que define un tipo de formato de generacion de resulados de una query.
      * @throws throws es.pode.dri.negocio.servicios.SQI.ResultsFormatNotSupportedException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException Exception
   */
    public void setResultsFormat(java.lang.String targetSessionID, java.lang.String resultsFormat)
        throws es.pode.dri.negocio.servicios.SQI.ResultsFormatNotSupportedException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException;

  /**
   * <p>
   * Este metodo define el numero maximo de resultados que se van a
   * devolver en un result set.
   * </p>
      * @param targetSessionID  Identificador de la sesion que se va a utilizar.
         * @param resultsSetSize  Maxima cantidad de resultados a devolver en una sola consulta.
      * @throws throws es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException, es.pode.dri.negocio.servicios.SQI.NoValidResultsSetSizeException Exception
   */
    public void setResultsSetSize(java.lang.String targetSessionID, java.lang.Integer resultsSetSize)
        throws es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException, es.pode.dri.negocio.servicios.SQI.NoValidResultsSetSizeException;

  /**
   * <p>
   * Este metodo recoge la localizacion del usuario del API al que
   * debemos devolver los resultados de una query ejecutada
   * asincronamente.
   * </p>
   * <p>
   * Este metodo se tiene que ejecutar por parte del cliente del api
   * antes de la ejecucion del la query de forma asincrona.
   * </p>
      * @param targetSessionID  Identificador de la sesion que se va a utilizar.
         * @param sourceLocation  Localizacion donde debemos contestar con los resultados obtenidos por la ejecucion de una query asincrona.
 Se trata de una URL.
      * @throws throws es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException, es.pode.dri.negocio.servicios.SQI.NoValidLocationException Exception
   */
    public void setSourceLocation(java.lang.String targetSessionID, java.lang.String sourceLocation)
        throws es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException, es.pode.dri.negocio.servicios.SQI.NoValidLocationException;

  /**
   * <p>
   * Este metodo permite al invocador controlar la sintaxis a
   * utilizar en la sentencia de consulta mediante la identificacion
   * del lenguaje de consulta.
   * </p>
   * <p>
   * En nuestro caso, estaremos limitados a una coleccion de
   * lenguajes.
   * </p>
      * @param targetSessionID  Identificador de la sesion que se va a utilizar.
         * @param queryLanguageID  Identificador del lenguaje a utilizar en las queries que se ejecuten en esta sesion.
      * @throws throws es.pode.dri.negocio.servicios.SQI.QueryLanguageNotSupportedException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException Exception
   */
    public void setQueryLanguage(java.lang.String targetSessionID, java.lang.String queryLanguageID)
        throws es.pode.dri.negocio.servicios.SQI.QueryLanguageNotSupportedException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException;

  /**
   * <p>
   * Este metodo define el maximo numero de resultados que una query
   * puede producir.
   * </p>
      * @param targetSessionID  Identificador de la sesion que se va a utilizar.
         * @param maxQueryResults  Cifra maxima de resultados permitidos por query.
      * @throws throws es.pode.dri.negocio.servicios.SQI.NoValidMaxQueryResultsException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException Exception
   */
    public void setMaxQueryResults(java.lang.String targetSessionID, java.lang.Integer maxQueryResults)
        throws es.pode.dri.negocio.servicios.SQI.NoValidMaxQueryResultsException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException;

  /**
   * <p>
   * Este metodo permite realizar ejecuciones de queries en modo
   * asincrono, de manera que el API devuelve los resultados de la
   * query cuando termine de ejecutar la busqueda.
   * </p>
   * <p>
   * Este metodo esta en sintonia con setSourceLocation, el cual se
   * tiene que ejecutar antes para suministar la localizacion donde
   * se van a devolver los resutlados de la query.
   * </p>
      * @param targetSessionID  Identificador de la sesion que se va a utilizar.
         * @param queryStatement  Sentencia a ejecutar en modo asincrono.
         * @param queryID  Identificador de la query que se va a ejecutar. Este identifiacador es un valor suministrado por el cliente del API que lo utiliza para identificar su consulta.
      * @throws throws es.pode.dri.negocio.servicios.SQI.NoValidQueryStatementException, es.pode.dri.negocio.servicios.SQI.NoSourceLocationException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException Exception
   */
    public void asynchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.String queryID)
        throws es.pode.dri.negocio.servicios.SQI.NoValidQueryStatementException, es.pode.dri.negocio.servicios.SQI.NoSourceLocationException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException;

  /**
   * <p>
   * Este metodo realiza la query que se le pasa sobre la sesion que
   * indica. Recoge los resulados que genera y los devuelve teniendo
   * en cuenta el numero maximo de resultados para una query, el
   * numero de resultados de un result set y el indice del resultado
   * a partir del cual se esta interesado.
   * </p>
   * <p>
   * Se devuelve el resultado de la consulta.
   * </p>
      * @param targetSessionID  Identificador de la sesion que se va a utilizar.
         * @param queryStatement  Sentencia que se va a ejecutar.
         * @param startResult  Numero que indica el registro de comienzo del result set devuelto.
 Esta cifra existe en combinacion con el numero de resultados devueltos en un result set y el numero maximo de resultados por query.
 Una cifra correcta se encuentra entre 1 y el maximo numero de resultados por query.
 Para una consulta dada, se podrian recoger 5 resulados (numero de resultados devueltos en un result set) empezando por el decimo (con un startResult de 10) de una consulta que dio un maximo de resultados de 300.
 Ver documento: ftp://ftp.cenorm.be/PUBLIC/CWAs/e-Europe/WS-LT/CWA15454-00-2005-Nov.pdf pagina 19-20
      * @return java.lang.String
   * @throws throws es.pode.dri.negocio.servicios.SQI.NoValidQueryStatementException, es.pode.dri.negocio.servicios.SQI.NoValidStartResultException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException Exception
   */
    public java.lang.String synchronousQuery(java.lang.String targetSessionID, java.lang.String queryStatement, java.lang.Integer startResult)
        throws es.pode.dri.negocio.servicios.SQI.NoValidQueryStatementException, es.pode.dri.negocio.servicios.SQI.NoValidStartResultException, es.pode.dri.negocio.servicios.SQI.NoSuchSessionException, es.pode.dri.negocio.servicios.SQI.QueryModeNotSupportedException;

    public java.lang.Boolean estasActivo()
        throws es.pode.dri.negocio.servicios.SQI.NoSuchSessionException;

}
