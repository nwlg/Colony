// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package es.pode.dri.negocio.dominio;

/**
 * <p>
 * Esta entidad representa la sesion del cliente que utiliza el API
 * SQI.
 * </p>
 */
public abstract class Sesion
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 8612912658271485359L;

    private java.lang.String usuario;

  /**
   * <p>
   * Nombre del usuario al que pertenece la sesion.
   * </p>
   * @return java.lang.String
   */
    public java.lang.String getUsuario()
    {
        return this.usuario;
    }

  /**
   * <p>
   * Nombre del usuario al que pertenece la sesion.
   * </p>
   *  @param usuario  Nombre del usuario al que pertenece la sesion. 
   */
    public void setUsuario(java.lang.String usuario)
    {
        this.usuario = usuario;
    }
    private java.util.Calendar fechaExpiracion;

  /**
   * <p>
   * Fecha de expiracion de la sesion.
   * </p>
   * @return java.util.Calendar
   */
    public java.util.Calendar getFechaExpiracion()
    {
        return this.fechaExpiracion;
    }

  /**
   * <p>
   * Fecha de expiracion de la sesion.
   * </p>
   *  @param fechaExpiracion  Fecha de expiracion de la sesion. 
   */
    public void setFechaExpiracion(java.util.Calendar fechaExpiracion)
    {
        this.fechaExpiracion = fechaExpiracion;
    }
    private java.util.Calendar fechaCreacion;

  /**
   * <p>
   * Fecha de creacion de la sesion.
   * </p>
   * @return java.util.Calendar
   */
    public java.util.Calendar getFechaCreacion()
    {
        return this.fechaCreacion;
    }

  /**
   * <p>
   * Fecha de creacion de la sesion.
   * </p>
   *  @param fechaCreacion  Fecha de creacion de la sesion. 
   */
    public void setFechaCreacion(java.util.Calendar fechaCreacion)
    {
        this.fechaCreacion = fechaCreacion;
    }
    private java.lang.Boolean anonima;

  /**
   * <p>
   * Si la sesion es anonima o no.
   * </p>
   * @return java.lang.Boolean
   */
    public java.lang.Boolean getAnonima()
    {
        return this.anonima;
    }

  /**
   * <p>
   * Si la sesion es anonima o no.
   * </p>
   *  @param anonima  Si la sesion es anonima o no. 
   */
    public void setAnonima(java.lang.Boolean anonima)
    {
        this.anonima = anonima;
    }
    private java.lang.String idSesion;

  /**
   * <p>
   * Identificador de la sesion.
   * </p>
   * @return java.lang.String
   */
    public java.lang.String getIdSesion()
    {
        return this.idSesion;
    }

  /**
   * <p>
   * Identificador de la sesion.
   * </p>
   *  @param idSesion  Identificador de la sesion. 
   */
    public void setIdSesion(java.lang.String idSesion)
    {
        this.idSesion = idSesion;
    }
    private java.lang.String clave;

  /**
   * <p>
   * Clave del usuario. Se guarda codificada.
   * </p>
   * @return java.lang.String
   */
    public java.lang.String getClave()
    {
        return this.clave;
    }

  /**
   * <p>
   * Clave del usuario. Se guarda codificada.
   * </p>
   *  @param clave  Clave del usuario. Se guarda codificada. 
   */
    public void setClave(java.lang.String clave)
    {
        this.clave = clave;
    }


    /**
     * Returns <code>true</code> if the argument is an Sesion instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     *
     * @param object The object to compare
     * @return boolean
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof Sesion))
        {
            return false;
        }
        final Sesion that = (Sesion)object;
        if (this.idSesion == null || that.idSesion == null || !this.idSesion.equals(that.idSesion))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     * @return int
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (idSesion == null ? 0 : idSesion.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link es.pode.dri.negocio.dominio.Sesion}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link es.pode.dri.negocio.dominio.Sesion}.
         * @return es.pode.dri.negocio.dominio.Sesion
         */
        public static es.pode.dri.negocio.dominio.Sesion newInstance()
        {
            return new es.pode.dri.negocio.dominio.SesionImpl();
        }
    }

// HibernateEntity.vsl merge-point
}