// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringHibernateDaoBase.vsl in andromda-spring-cartridge.
//
package es.pode.auditoria.negocio.dominio;

import net.sf.dozer.util.mapping.MapperIF;

/**
 * <p>
 * Base Spring DAO Class: is able to create, update, remove, load, and find
 * objects of type <code>es.pode.auditoria.negocio.dominio.Busqueda</code>.
 * </p>
 *
 * @see es.pode.auditoria.negocio.dominio.Busqueda
 */
public abstract class BusquedaDaoBase
    extends org.springframework.orm.hibernate3.support.HibernateDaoSupport
    implements es.pode.auditoria.negocio.dominio.BusquedaDao
{



	

	/**
	 * Constant that identifies a mapping between an 
	 * entity (Busqueda) and a VO (BusquedaVO)
	 */
	public final static String DEF_MAPPING_BUSQUEDA_BUSQUEDAVO = "DEF_MAPPING_BUSQUEDA_BUSQUEDAVO";
	
	/**
	 * Constant that identifies a mapping between a 
	 * VO (BusquedaVO) and an entity (Busqueda)
	 */
	public final static String DEF_MAPPING_BUSQUEDAVO_BUSQUEDA = "DEF_MAPPING_BUSQUEDAVO_BUSQUEDA";
	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#load(int, java.lang.Long)
     */
    public Object load(final int transform, final java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "Busqueda.load - 'id' can not be null");
        }
        final java.util.List list = this.getHibernateTemplate().find(
            "from es.pode.auditoria.negocio.dominio.Busqueda as entity where entity.id = ?", id);
        final Object entity = list != null && !list.isEmpty() ? list.iterator().next() : null;
        return transformEntity(transform, (es.pode.auditoria.negocio.dominio.Busqueda)entity);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#load(java.lang.Long)
     */
    public es.pode.auditoria.negocio.dominio.Busqueda load(java.lang.Long id)
    {
        return (es.pode.auditoria.negocio.dominio.Busqueda)this.load(TRANSFORM_NONE, id);
    }
    
    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#loadAll()
     */
    public java.util.Collection loadAll()
    {
        return this.loadAll(TRANSFORM_NONE);
    }
    
    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#loadAll(int)
     */
    public java.util.Collection loadAll(final int transform)
    {
        final java.util.Collection results = this.getHibernateTemplate().loadAll(es.pode.auditoria.negocio.dominio.BusquedaImpl.class);
        this.transformEntities(transform, results);
        return results;
    }
    

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#create(es.pode.auditoria.negocio.dominio.Busqueda)
     */
    public es.pode.auditoria.negocio.dominio.Busqueda create(es.pode.auditoria.negocio.dominio.Busqueda busqueda)
    {
        return (es.pode.auditoria.negocio.dominio.Busqueda)this.create(TRANSFORM_NONE, busqueda);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#create(int transform, es.pode.auditoria.negocio.dominio.Busqueda)
     */
    public Object create(final int transform, final es.pode.auditoria.negocio.dominio.Busqueda busqueda)
    {
        if (busqueda == null)
        {
            throw new IllegalArgumentException(
                "Busqueda.create - 'busqueda' can not be null");
        }
        Object identifier = this.getHibernateTemplate().save(busqueda);
        busqueda.setId((java.lang.Long)identifier);
        return this.transformEntity(transform, busqueda);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#create(java.util.Collection)
     */
    public java.util.Collection create(final java.util.Collection entities)
    {
        return create(TRANSFORM_NONE, entities);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#create(int, java.util.Collection)
     */
    public java.util.Collection create(final int transform, final java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Busqueda.create - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate3.HibernateCallback()
            {
                public Object doInHibernate(org.hibernate.Session session)
                    throws org.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        create(transform, (es.pode.auditoria.negocio.dominio.Busqueda)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
        return entities;
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#create(int, java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.lang.String,java.lang.String)
     */
    public es.pode.auditoria.negocio.dominio.Busqueda create(
 java.lang.String terminoBuscado, java.lang.String usuario, java.lang.String tipo_busqueda, java.util.Calendar fecha, java.lang.String ambito_busqueda, java.lang.String tipo)
    {
         return (es.pode.auditoria.negocio.dominio.Busqueda)this.create(TRANSFORM_NONE,  terminoBuscado, usuario, tipo_busqueda, fecha, ambito_busqueda, tipo);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#create(int, java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.lang.String,java.lang.String)
     */
    public Object create(
        final int transform,
 java.lang.String terminoBuscado, java.lang.String usuario, java.lang.String tipo_busqueda, java.util.Calendar fecha, java.lang.String ambito_busqueda, java.lang.String tipo)
    {
        es.pode.auditoria.negocio.dominio.Busqueda entity = new es.pode.auditoria.negocio.dominio.BusquedaImpl();
        entity.setTerminoBuscado(terminoBuscado);
        entity.setUsuario(usuario);
        entity.setTipo_busqueda(tipo_busqueda);
        entity.setFecha(fecha);
        entity.setAmbito_busqueda(ambito_busqueda);
        entity.setTipo(tipo);
        return this.create(transform, entity);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#update(es.pode.auditoria.negocio.dominio.Busqueda)
     */
    public void update(es.pode.auditoria.negocio.dominio.Busqueda busqueda)
    {
        if (busqueda == null)
        {
            throw new IllegalArgumentException(
                "Busqueda.update - 'busqueda' can not be null");
        }
        this.getHibernateTemplate().update(busqueda);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#update(java.util.Collection)
     */
    public void update(final java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Busqueda.update - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate3.HibernateCallback()
            {
                public Object doInHibernate(org.hibernate.Session session)
                    throws org.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        update((es.pode.auditoria.negocio.dominio.Busqueda)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#remove(es.pode.auditoria.negocio.dominio.Busqueda)
     */
    public void remove(es.pode.auditoria.negocio.dominio.Busqueda busqueda)
    {
        if (busqueda == null)
        {
            throw new IllegalArgumentException(
                "Busqueda.remove - 'busqueda' can not be null");
        }
        this.getHibernateTemplate().delete(busqueda);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#remove(java.lang.Long)
     */
    public void remove(java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "Busqueda.remove - 'id' can not be null");
        }
        es.pode.auditoria.negocio.dominio.Busqueda entity = this.load(id);
        if (entity != null)
        {
            this.remove(entity);
        }
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#remove(java.util.Collection)
     */
    public void remove(java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Busqueda.remove - 'entities' can not be null");
        }
        this.getHibernateTemplate().deleteAll(entities);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.Busqueda#listarTerminosBuscadosDesdeHasta(java.util.Calendar, java.util.Calendar)
     */
    public java.util.List listarTerminosBuscadosDesdeHasta(java.util.Calendar fechaDesde, java.util.Calendar fechaHasta)
    {
        return this.listarTerminosBuscadosDesdeHasta(TRANSFORM_NONE, fechaDesde, fechaHasta);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.Busqueda#listarTerminosBuscadosDesdeHasta(java.lang.String, java.util.Calendar, java.util.Calendar)
     */
    public java.util.List listarTerminosBuscadosDesdeHasta(final java.lang.String queryString, final java.util.Calendar fechaDesde, final java.util.Calendar fechaHasta)
    {
        return this.listarTerminosBuscadosDesdeHasta(TRANSFORM_NONE, queryString, fechaDesde, fechaHasta);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.Busqueda#listarTerminosBuscadosDesdeHasta(int, java.util.Calendar, java.util.Calendar)
     */
    public java.util.List listarTerminosBuscadosDesdeHasta(final int transform, final java.util.Calendar fechaDesde, final java.util.Calendar fechaHasta)
    {
        return this.listarTerminosBuscadosDesdeHasta(transform, "select distinct(busqueda.terminoBuscado) from BusquedaImpl as busqueda where :fechaHasta>=busqueda.fecha AND :fechaDesde<=busqueda.fecha and (busqueda.tipo_busqueda = 'normal' or busqueda.tipo_busqueda = 'busquedaAvanzada')", fechaDesde, fechaHasta);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.Busqueda#listarTerminosBuscadosDesdeHasta(int, java.lang.String, java.util.Calendar, java.util.Calendar)
     */
    public java.util.List listarTerminosBuscadosDesdeHasta(final int transform, final java.lang.String queryString, final java.util.Calendar fechaDesde, final java.util.Calendar fechaHasta)
    {
        try
        {
            org.hibernate.Query queryObject = super.getSession(false).createQuery(queryString);
            queryObject.setParameter("fechaDesde", fechaDesde);
            queryObject.setParameter("fechaHasta", fechaHasta);
            java.util.List results = queryObject.list();
            transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.Busqueda#listarNumBusquedasDesdeHasta(java.util.Calendar, java.util.Calendar, java.lang.String)
     */
    public java.lang.Long listarNumBusquedasDesdeHasta(java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String ambito_busqueda)
    {
        return (java.lang.Long)this.listarNumBusquedasDesdeHasta(TRANSFORM_NONE, fechaDesde, fechaHasta, ambito_busqueda);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.Busqueda#listarNumBusquedasDesdeHasta(java.lang.String, java.util.Calendar, java.util.Calendar, java.lang.String)
     */
    public java.lang.Long listarNumBusquedasDesdeHasta(final java.lang.String queryString, final java.util.Calendar fechaDesde, final java.util.Calendar fechaHasta, final java.lang.String ambito_busqueda)
    {
        return (java.lang.Long)this.listarNumBusquedasDesdeHasta(TRANSFORM_NONE, queryString, fechaDesde, fechaHasta, ambito_busqueda);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.Busqueda#listarNumBusquedasDesdeHasta(int, java.util.Calendar, java.util.Calendar, java.lang.String)
     */
    public Object listarNumBusquedasDesdeHasta(final int transform, final java.util.Calendar fechaDesde, final java.util.Calendar fechaHasta, final java.lang.String ambito_busqueda)
    {
        return this.listarNumBusquedasDesdeHasta(transform, "select count(*) from es.pode.auditoria.negocio.dominio.Busqueda as busqueda where :fechaHasta>=busqueda.fecha AND :fechaDesde<=busqueda.fecha AND busqueda.ambito_busqueda = :ambito_busqueda", fechaDesde, fechaHasta, ambito_busqueda);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.Busqueda#listarNumBusquedasDesdeHasta(int, java.lang.String, java.util.Calendar, java.util.Calendar, java.lang.String)
     */
    public Object listarNumBusquedasDesdeHasta(final int transform, final java.lang.String queryString, final java.util.Calendar fechaDesde, final java.util.Calendar fechaHasta, final java.lang.String ambito_busqueda)
    {
        try
        {
            org.hibernate.Query queryObject = super.getSession(false).createQuery(queryString);
            queryObject.setParameter("fechaDesde", fechaDesde);
            queryObject.setParameter("fechaHasta", fechaHasta);
            queryObject.setParameter("ambito_busqueda", ambito_busqueda);
            java.util.List results = queryObject.list();
            Object result = null;
            if (results != null)
            {
                if (results.size() > 1)
                {
                    throw new org.springframework.dao.InvalidDataAccessResourceUsageException(
                        "More than one instance of 'java.lang.Long"
                            + "' was found when executing query --> '" + queryString + "'");
                }
                else if (results.size() == 1)
                {
                    result = (es.pode.auditoria.negocio.dominio.Busqueda)results.iterator().next();
                }
            }
            result = transformEntity(transform, (es.pode.auditoria.negocio.dominio.Busqueda)result);
            return result;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.Busqueda#obtenerNumTerminosBuscados(java.util.Calendar, java.util.Calendar, java.lang.String)
     */
    public java.lang.Long obtenerNumTerminosBuscados(java.util.Calendar fechaDesde, java.util.Calendar fechaHasta, java.lang.String terminoBuscado)
    {
        return (java.lang.Long)this.obtenerNumTerminosBuscados(TRANSFORM_NONE, fechaDesde, fechaHasta, terminoBuscado);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.Busqueda#obtenerNumTerminosBuscados(java.lang.String, java.util.Calendar, java.util.Calendar, java.lang.String)
     */
    public java.lang.Long obtenerNumTerminosBuscados(final java.lang.String queryString, final java.util.Calendar fechaDesde, final java.util.Calendar fechaHasta, final java.lang.String terminoBuscado)
    {
        return (java.lang.Long)this.obtenerNumTerminosBuscados(TRANSFORM_NONE, queryString, fechaDesde, fechaHasta, terminoBuscado);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.Busqueda#obtenerNumTerminosBuscados(int, java.util.Calendar, java.util.Calendar, java.lang.String)
     */
    public Object obtenerNumTerminosBuscados(final int transform, final java.util.Calendar fechaDesde, final java.util.Calendar fechaHasta, final java.lang.String terminoBuscado)
    {
        return this.obtenerNumTerminosBuscados(transform, "select count(*) from es.pode.auditoria.negocio.dominio.Busqueda as busqueda where :fechaHasta>=busqueda.fecha AND :fechaDesde<=busqueda.fecha AND busqueda.terminoBuscado = :terminoBuscado", fechaDesde, fechaHasta, terminoBuscado);
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.Busqueda#obtenerNumTerminosBuscados(int, java.lang.String, java.util.Calendar, java.util.Calendar, java.lang.String)
     */
    public Object obtenerNumTerminosBuscados(final int transform, final java.lang.String queryString, final java.util.Calendar fechaDesde, final java.util.Calendar fechaHasta, final java.lang.String terminoBuscado)
    {
        try
        {
            org.hibernate.Query queryObject = super.getSession(false).createQuery(queryString);
            queryObject.setParameter("fechaDesde", fechaDesde);
            queryObject.setParameter("fechaHasta", fechaHasta);
            queryObject.setParameter("terminoBuscado", terminoBuscado);
            java.util.List results = queryObject.list();
            Object result = null;
            if (results != null)
            {
                if (results.size() > 1)
                {
                    throw new org.springframework.dao.InvalidDataAccessResourceUsageException(
                        "More than one instance of 'java.lang.Long"
                            + "' was found when executing query --> '" + queryString + "'");
                }
                else if (results.size() == 1)
                {
                    result = (es.pode.auditoria.negocio.dominio.Busqueda)results.iterator().next();
                }
            }
            result = transformEntity(transform, (es.pode.auditoria.negocio.dominio.Busqueda)result);
            return result;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * Allows transformation of entities into value objects
     * (or something else for that matter), when the <code>transform</code>
     * flag is set to one of the constants defined in <code>es.pode.auditoria.negocio.dominio.BusquedaDao</code>, please note
     * that the {@link #TRANSFORM_NONE} constant denotes no transformation, so the entity itself
     * will be returned.
     * <p/>
     * This method will return instances of these types:
     * <ul>
     *   <li>{@link es.pode.auditoria.negocio.dominio.Busqueda} - {@link #TRANSFORM_NONE}</li>
     *   <li>{@link es.pode.auditoria.negocio.servicios.BusquedaVO} - {@link TRANSFORM_BUSQUEDAVO}</li>
     * </ul>
     *
     * If the integer argument value is unknown {@link #TRANSFORM_NONE} is assumed.
     *
     * @param transform one of the constants declared in {@link es.pode.auditoria.negocio.dominio.BusquedaDao}
     * @param entity an entity that was found
     * @return the transformed entity (i.e. new value object, etc)
     * @see #transformEntities(int,java.util.Collection)
     */
    private final Object transformEntity(final int transform, final es.pode.auditoria.negocio.dominio.Busqueda entity)
    {
        Object target = null;
        if (entity != null)
        {
            switch (transform)
            {
                case es.pode.auditoria.negocio.dominio.BusquedaDao.TRANSFORM_BUSQUEDAVO :
                    target = toBusquedaVO(entity);
                    break;
                case TRANSFORM_NONE : // fall-through
                default:
                    target = entity;
            }
        }
        return target;
    }

    /**
     * Transforms a collection of entities using the
     * {@link #transformEntity(int,es.pode.auditoria.negocio.dominio.Busqueda)}
     * method. This method does not instantiate a new collection.
     * <p/>
     * This method is to be used internally only.
     *
     * @param transform one of the constants declared in <code>es.pode.auditoria.negocio.dominio.BusquedaDao</code>
     * @param entities the collection of entities to transform
     * @return the same collection as the argument, but this time containing the transformed entities
     * @see #transformEntity(int,es.pode.auditoria.negocio.dominio.Busqueda)
     */
    private final void transformEntities(final int transform, final java.util.Collection entities)
    {
        switch (transform)
        {
            case es.pode.auditoria.negocio.dominio.BusquedaDao.TRANSFORM_BUSQUEDAVO :
                toBusquedaVOCollection(entities);
                break;
            case TRANSFORM_NONE : // fall-through
                default:
                // do nothing;
        }
    }

    /**
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#toBusquedaVOCollection(java.util.Collection)
     */
    public final void toBusquedaVOCollection(java.util.Collection entities)
    {
        if (entities == null)
        {
            entities = java.util.Collections.EMPTY_LIST;
        }
        else
        {
            org.apache.commons.collections.CollectionUtils.transform(entities, BUSQUEDAVO_TRANSFORMER);
        }
    }

    /**
     * Base implementation for transforming the results of a report query into a value object. This
     * implementation exists for convenience reasons only. It needs only be overridden in the
     * {@link BusquedaDaoImpl} class if you intend to use reporting queries.
     * @see es.pode.auditoria.negocio.dominio.BusquedaDao#toBusquedaVO(es.pode.auditoria.negocio.dominio.Busqueda)
     */
    protected es.pode.auditoria.negocio.servicios.BusquedaVO toBusquedaVO(Object[] row)
    {
        return null;
    }

    /**
     * This anonymous transformer is designed to transform entities or report query results
     * (which result in an array of objects) to {@link es.pode.auditoria.negocio.servicios.BusquedaVO}
     * using the Jakarta Commons-Collections Transformation API.
     */
    private final org.apache.commons.collections.Transformer BUSQUEDAVO_TRANSFORMER =
        new org.apache.commons.collections.Transformer()
        {
            public Object transform(Object input)
            {
                Object result = null;
                if (input instanceof es.pode.auditoria.negocio.dominio.Busqueda)
                {
                    result = toBusquedaVO((es.pode.auditoria.negocio.dominio.Busqueda)input);
                }
                else if (input instanceof Object[])
                {
                    result = toBusquedaVO((Object[])input);
                }
                return result;
            }
        };

	/**
	 * Copy a VO to a new entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @return A new entity created with the values extracted from the vo.
	 */
	public es.pode.auditoria.negocio.dominio.Busqueda fromBusquedaVO(final es.pode.auditoria.negocio.servicios.BusquedaVO vo) {
        //default mapping between VO and entity
        return (es.pode.auditoria.negocio.dominio.Busqueda) 
                  this.getBeanMapper().map(vo, es.pode.auditoria.negocio.dominio.BusquedaImpl.class, DEF_MAPPING_BUSQUEDAVO_BUSQUEDA);
    }

	/**
	 * Copy a VO to an existing entity using the default Dozer mappings.
	 * @param vo The source bean (VO)
	 * @param entity The destination bean (an existing entity)
	 */
    public void fromBusquedaVO(es.pode.auditoria.negocio.servicios.BusquedaVO vo, es.pode.auditoria.negocio.dominio.Busqueda entity) {
        //default mapping between VO and entity
        this.getBeanMapper().map(vo, entity, DEF_MAPPING_BUSQUEDAVO_BUSQUEDA);
    }
		
		
}