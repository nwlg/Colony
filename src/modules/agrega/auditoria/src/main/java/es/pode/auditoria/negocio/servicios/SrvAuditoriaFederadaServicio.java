// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringService.vsl in andromda-spring-cartridge.
//
package es.pode.auditoria.negocio.servicios;

/**
 * <p>
 * Clase encargada de la generación de los informes federados
 * </p>
 */
public interface SrvAuditoriaFederadaServicio
{
  /**
   * <p>
   * Método que generará un array de VO con la información de los
   * odes que pertenecen a cada nivel de agregación dentro de la
   * federación
   * </p>
      * @param parametros  VO con los párametros necesarios para la generación del informe
      * @return es.pode.auditoria.negocio.servicios.InformeAgregacionFederadaVO[]
   */
    public es.pode.auditoria.negocio.servicios.InformeAgregacionFederadaVO[] informeNivelAgregacionFederado(es.pode.auditoria.negocio.servicios.ParametrosInformeFederadoVO parametros);

  /**
   * <p>
   * Método de generación del informe de nivel de agregación local
   * </p>
      * @param parametros  VO con los parámetros necesarios para la generación del informe de nivel de agregación
      * @return es.pode.auditoria.negocio.servicios.InformeAgregacionFederadaVO
   */
    public es.pode.auditoria.negocio.servicios.InformeAgregacionFederadaVO nivelAgregacionFederadoLocal(es.pode.auditoria.negocio.servicios.ParametrosInformeFederadoVO parametros);

  /**
   * <p>
   * Obtiene el informe federados de los odes por área curricular en
   * cada uno de los nodos de la federación
   * </p>
      * @param parametros  VO con los parámetros para la generación del informe
      * @return es.pode.auditoria.negocio.servicios.InformeCoberturaFederadoVO[]
   */
    public es.pode.auditoria.negocio.servicios.InformeCoberturaFederadoVO[] informeCoberturaFederado(es.pode.auditoria.negocio.servicios.ParametrosInformeFederadoVO parametros);

  /**
   * <p>
   * método de obtención de los odes por cobertura curricular
   * </p>
      * @return es.pode.auditoria.negocio.servicios.InformeCoberturaFederadoVO
   */
    public es.pode.auditoria.negocio.servicios.InformeCoberturaFederadoVO coberturaFederadoLocal(es.pode.auditoria.negocio.servicios.ParametrosInformeFederadoVO parametros);

  /**
   * <p>
   * método que obtiene el número de odes publicados en cada nodo
   * </p>
      * @return es.pode.auditoria.negocio.servicios.InformeOdesPublicadosFederadaVO[]
   */
    public es.pode.auditoria.negocio.servicios.InformeOdesPublicadosFederadaVO[] informeOdesPublicadosFederado(es.pode.auditoria.negocio.servicios.ParametrosInformeFederadoVO parametros);

    public es.pode.auditoria.negocio.servicios.InformeOdesPublicadosFederadaVO odesPublicadosFederadoLocal(es.pode.auditoria.negocio.servicios.ParametrosInformeFederadoVO parametros);

  /**
   * <p>
   * método que devuelve los odes publicados en cada idioma para cada
   * nodo
   * </p>
      * @return es.pode.auditoria.negocio.servicios.InformeOdesIdiomaFederadoVO[]
   */
    public es.pode.auditoria.negocio.servicios.InformeOdesIdiomaFederadoVO[] informeOdesIdiomaFederado(es.pode.auditoria.negocio.servicios.ParametrosInformeFederadoVO parametros);

  /**
   * <p>
   * método que devuelve los odes publicados en cada idioma
   * </p>
      * @return es.pode.auditoria.negocio.servicios.InformeOdesIdiomaFederadoVO
   */
    public es.pode.auditoria.negocio.servicios.InformeOdesIdiomaFederadoVO informeOdesIdiomaLocal(es.pode.auditoria.negocio.servicios.ParametrosInformeFederadoVO parametros);

}
