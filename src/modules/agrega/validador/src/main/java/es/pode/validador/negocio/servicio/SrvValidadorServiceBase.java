// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.validador.negocio.servicio;

import net.sf.dozer.util.mapping.MapperIF;

import org.apache.log4j.Logger;


/**
 * <p>
 * Spring Service base class for <code>es.pode.validador.negocio.servicio.SrvValidadorService</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.validador.negocio.servicio.SrvValidadorService
 */
public abstract class SrvValidadorServiceBase
    implements es.pode.validador.negocio.servicio.SrvValidadorService
{

		 protected static final Logger logger = Logger.getLogger(SrvValidadorServiceBase.class);


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


	
	        
    
	    	    	    
		    private es.pode.parseadorXML.SCORM2004Dao scormDao;
		
		    /**
		     * Sets the reference to <code>scormDao</code>.
		     */
		    public void setScormDao(es.pode.parseadorXML.SCORM2004Dao scormDao)
		    {
		        this.scormDao = scormDao;
		    }
		
		    /**
		     * Gets the reference to <code>scormDao</code>.
		     */
		    protected es.pode.parseadorXML.SCORM2004Dao getScormDao()
		    {
		        return this.scormDao;
		    }
	    
	        
	
	        
    
	    	    	    
		    private es.pode.parseadorXML.LomESDao lomesDao;
		
		    /**
		     * Sets the reference to <code>lomesDao</code>.
		     */
		    public void setLomesDao(es.pode.parseadorXML.LomESDao lomesDao)
		    {
		        this.lomesDao = lomesDao;
		    }
		
		    /**
		     * Gets the reference to <code>lomesDao</code>.
		     */
		    protected es.pode.parseadorXML.LomESDao getLomesDao()
		    {
		        return this.lomesDao;
		    }
	    
	        

    /**
     * @see es.pode.validador.negocio.servicio.SrvValidadorService#obtenerValidacionBin(java.lang.String)
     */
    public es.pode.validador.negocio.servicio.ValidaVO obtenerValidacionBin(java.lang.String rutaManifest)
    {
        if (rutaManifest == null)
        {
            throw new IllegalArgumentException(
                "es.pode.validador.negocio.servicio.SrvValidadorService.obtenerValidacionBin(java.lang.String rutaManifest) - 'rutaManifest' can not be null");
        }
        try
        {
            return this.handleObtenerValidacionBin(rutaManifest);
        }
        catch (Throwable th)
        {
            throw new es.pode.validador.negocio.servicio.SrvValidadorServiceException(
                "Error performing 'es.pode.validador.negocio.servicio.SrvValidadorService.obtenerValidacionBin(java.lang.String rutaManifest)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerValidacionBin(java.lang.String)}
      */
    protected abstract es.pode.validador.negocio.servicio.ValidaVO handleObtenerValidacionBin(java.lang.String rutaManifest)
        throws java.lang.Exception;

    /**
     * @see es.pode.validador.negocio.servicio.SrvValidadorService#obtenervalidacionLigera(java.lang.String, java.lang.String)
     */
    public es.pode.validador.negocio.servicio.ValidaVO obtenervalidacionLigera(java.lang.String rutaManifest, java.lang.String tipoOde)
    {
        if (rutaManifest == null)
        {
            throw new IllegalArgumentException(
                "es.pode.validador.negocio.servicio.SrvValidadorService.obtenervalidacionLigera(java.lang.String rutaManifest, java.lang.String tipoOde) - 'rutaManifest' can not be null");
        }
        if (tipoOde == null)
        {
            throw new IllegalArgumentException(
                "es.pode.validador.negocio.servicio.SrvValidadorService.obtenervalidacionLigera(java.lang.String rutaManifest, java.lang.String tipoOde) - 'tipoOde' can not be null");
        }
        try
        {
            return this.handleObtenervalidacionLigera(rutaManifest, tipoOde);
        }
        catch (Throwable th)
        {
            throw new es.pode.validador.negocio.servicio.SrvValidadorServiceException(
                "Error performing 'es.pode.validador.negocio.servicio.SrvValidadorService.obtenervalidacionLigera(java.lang.String rutaManifest, java.lang.String tipoOde)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenervalidacionLigera(java.lang.String, java.lang.String)}
      */
    protected abstract es.pode.validador.negocio.servicio.ValidaVO handleObtenervalidacionLigera(java.lang.String rutaManifest, java.lang.String tipoOde)
        throws java.lang.Exception;

    /**
     * @see es.pode.validador.negocio.servicio.SrvValidadorService#validarCargaOde(java.lang.String)
     */
    public es.pode.validador.negocio.servicio.ValidaVO validarCargaOde(java.lang.String rutaOde)
    {
        if (rutaOde == null)
        {
            throw new IllegalArgumentException(
                "es.pode.validador.negocio.servicio.SrvValidadorService.validarCargaOde(java.lang.String rutaOde) - 'rutaOde' can not be null");
        }
        try
        {
            return this.handleValidarCargaOde(rutaOde);
        }
        catch (Throwable th)
        {
            throw new es.pode.validador.negocio.servicio.SrvValidadorServiceException(
                "Error performing 'es.pode.validador.negocio.servicio.SrvValidadorService.validarCargaOde(java.lang.String rutaOde)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #validarCargaOde(java.lang.String)}
      */
    protected abstract es.pode.validador.negocio.servicio.ValidaVO handleValidarCargaOde(java.lang.String rutaOde)
        throws java.lang.Exception;

    /**
     * @see es.pode.validador.negocio.servicio.SrvValidadorService#validarMDBasicosObl(es.pode.validador.negocio.servicio.MDBasicosOblVO)
     */
    public es.pode.validador.negocio.servicio.ValidaVO validarMDBasicosObl(es.pode.validador.negocio.servicio.MDBasicosOblVO mDBasicos)
    {
        if (mDBasicos == null)
        {
            throw new IllegalArgumentException(
                "es.pode.validador.negocio.servicio.SrvValidadorService.validarMDBasicosObl(es.pode.validador.negocio.servicio.MDBasicosOblVO mDBasicos) - 'mDBasicos' can not be null");
        }
        try
        {
            return this.handleValidarMDBasicosObl(mDBasicos);
        }
        catch (Throwable th)
        {
            throw new es.pode.validador.negocio.servicio.SrvValidadorServiceException(
                "Error performing 'es.pode.validador.negocio.servicio.SrvValidadorService.validarMDBasicosObl(es.pode.validador.negocio.servicio.MDBasicosOblVO mDBasicos)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #validarMDBasicosObl(es.pode.validador.negocio.servicio.MDBasicosOblVO)}
      */
    protected abstract es.pode.validador.negocio.servicio.ValidaVO handleValidarMDBasicosObl(es.pode.validador.negocio.servicio.MDBasicosOblVO mDBasicos)
        throws java.lang.Exception;

    /**
     * @see es.pode.validador.negocio.servicio.SrvValidadorService#validarMec(java.lang.String)
     */
    public java.lang.String validarMec(java.lang.String rutaManifest)
    {
        if (rutaManifest == null)
        {
            throw new IllegalArgumentException(
                "es.pode.validador.negocio.servicio.SrvValidadorService.validarMec(java.lang.String rutaManifest) - 'rutaManifest' can not be null");
        }
        try
        {
            return this.handleValidarMec(rutaManifest);
        }
        catch (Throwable th)
        {
            throw new es.pode.validador.negocio.servicio.SrvValidadorServiceException(
                "Error performing 'es.pode.validador.negocio.servicio.SrvValidadorService.validarMec(java.lang.String rutaManifest)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #validarMec(java.lang.String)}
      */
    protected abstract java.lang.String handleValidarMec(java.lang.String rutaManifest)
        throws java.lang.Exception;

    /**
     * @see es.pode.validador.negocio.servicio.SrvValidadorService#estoyActivo()
     */
    public boolean estoyActivo()
    {
        try
        {
            return this.handleEstoyActivo();
        }
        catch (Throwable th)
        {
            throw new es.pode.validador.negocio.servicio.SrvValidadorServiceException(
                "Error performing 'es.pode.validador.negocio.servicio.SrvValidadorService.estoyActivo()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #estoyActivo()}
      */
    protected abstract boolean handleEstoyActivo()
        throws java.lang.Exception;

    /**
     * @see es.pode.validador.negocio.servicio.SrvValidadorService#obtenerValidacionLomes(javax.activation.DataHandler)
     */
    public java.lang.Boolean obtenerValidacionLomes(javax.activation.DataHandler fichero)
    {
        if (fichero == null)
        {
            throw new IllegalArgumentException(
                "es.pode.validador.negocio.servicio.SrvValidadorService.obtenerValidacionLomes(javax.activation.DataHandler fichero) - 'fichero' can not be null");
        }
        try
        {
            return this.handleObtenerValidacionLomes(fichero);
        }
        catch (Throwable th)
        {
            throw new es.pode.validador.negocio.servicio.SrvValidadorServiceException(
                "Error performing 'es.pode.validador.negocio.servicio.SrvValidadorService.obtenerValidacionLomes(javax.activation.DataHandler fichero)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerValidacionLomes(javax.activation.DataHandler)}
      */
    protected abstract java.lang.Boolean handleObtenerValidacionLomes(javax.activation.DataHandler fichero)
        throws java.lang.Exception;

    /**
     * @see es.pode.validador.negocio.servicio.SrvValidadorService#obtenerValidacion(java.lang.String)
     */
    public es.pode.validador.negocio.servicio.ValidaVO obtenerValidacion(java.lang.String rutaOde)
    {
        if (rutaOde == null)
        {
            throw new IllegalArgumentException(
                "es.pode.validador.negocio.servicio.SrvValidadorService.obtenerValidacion(java.lang.String rutaOde) - 'rutaOde' can not be null");
        }
        try
        {
            return this.handleObtenerValidacion(rutaOde);
        }
        catch (Throwable th)
        {
            throw new es.pode.validador.negocio.servicio.SrvValidadorServiceException(
                "Error performing 'es.pode.validador.negocio.servicio.SrvValidadorService.obtenerValidacion(java.lang.String rutaOde)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerValidacion(java.lang.String)}
      */
    protected abstract es.pode.validador.negocio.servicio.ValidaVO handleObtenerValidacion(java.lang.String rutaOde)
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.validador.negocio.PrincipalStore.get();
    }
}