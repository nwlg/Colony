<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Axis Web Service Deployment Descriptor (WSDD),
     generated by andromda-webservice cartridge
     (server-config.wsdd.vsl) do not edit! -->
<deployment xmlns="http://xml.apache.org/axis/wsdd/" xmlns:java="http://xml.apache.org/axis/wsdd/providers/java">
    <globalConfiguration>
        <parameter name="adminPassword" value="admin"/>
        <parameter name="attachments.implementation" value="org.apache.axis.attachments.AttachmentsImpl"/>
        <parameter name="sendXsiTypes" value="true"/>
        <parameter name="sendMultiRefs" value="true"/>
        <parameter name="sendXMLDeclaration" value="true"/>
        <parameter name="axis.sendMinimizedElements" value="true"/>
        <parameter name="axis.servicesPath" value="/services/"/>
    </globalConfiguration>
    <handler name="LocalResponder" type="java:org.apache.axis.transport.local.LocalResponder"/>
    <handler name="URLMapper" type="java:org.apache.axis.handlers.http.URLMapper"/>
    <handler name="Authenticate" type="java:org.apache.axis.handlers.SimpleAuthenticationHandler"/>
    <service name="SrvValidadorVDEXService" provider="java:RPC" style="wrapped" use="literal">
        <wsdlFile>/es/pode/validador/negocio/servicio/SrvValidadorVDEXService.wsdl</wsdlFile>
        <documentation>
            El servicio contiene metodos para las siguientes tareas:
            A) obtenerValidacionTesauro:
            recibe como parámetro la ruta al xml que se quiere validar. 
            realiza la validacion contra esquemas requerida y devuelve un VO
            ValidaVdexVO con el resultado de la validacion.
            valida contra el esquema imsvdex_v1p0_thesaurus.xsd
            B) obtenerValidacionTaxonomia::
            recibe como parámetro la ruta al xml que se quiere validar. 
            realiza la validacion contra esquemas requerida y devuelve un VO
            ValidaVdexVO con el resultado de la validacion.
            valida contra el esquema imsvdex_v1p0_hierarchical.xsd
        </documentation>
        <namespace>http://es.pode.validador.negocio.servicio</namespace>
        <parameter name="allowedMethods" value="obtenerValidacionTaxonomia obtenerValidacionTesauro obtenerValidacionVdex"/>
        <parameter name="className" value="es.pode.validador.negocio.servicio.SrvValidadorVDEXServiceWSDelegator" />
        <operation name="obtenerValidacionTaxonomia">
            <parameter name="rutaVdex"/>
        </operation>
        <operation name="obtenerValidacionTesauro">
            <parameter name="rutaVdex"/>
        </operation>
        <operation name="obtenerValidacionVdex">
            <parameter name="rutaVdex"/>
        </operation>
        <typeMapping
            type="java:es.pode.validador.negocio.servicio.ValidaVdexVO"
            xmlns:ns1="http://es.pode.validador.negocio.servicio"
            qname="ns1:ValidaVdexVO"
            serializer="org.apache.axis.encoding.ser.BeanSerializerFactory"
            deserializer="org.apache.axis.encoding.ser.BeanDeserializerFactory"
            encodingStyle="">
            <documentation>
            tipo de datos que devuelven los metodos del servicio
            SrvValidadorVDEXService.
            contiene un Boolean llamado valido que indica si el Tesauro o la
            Taxonomia ha pasado la validación.
            </documentation>
        </typeMapping>
    </service>
    <service name="SrvValidadorService" provider="java:RPC" style="wrapped" use="literal">
        <wsdlFile>/es/pode/validador/negocio/servicio/SrvValidadorService.wsdl</wsdlFile>
        <documentation>
            El servicio de validacion consta de cuatro metodos para
            diferentes tipos de validacion:
            a) obtenerValidacionBin: parametro de entrada rutaManifest de
            tipo String, es la ruta en la      que    se   encuentra el
            fichero imsmanifest.xml; parametro de salida, el tipo ValidaVO
            Este tipo de validacion realiza las siguientes tareas:
            1.- chequea que el fichero se encuentre en la ruta
            correspondiente
            2.- realiza el parseo del fichero y comprueba que los nodos y
            atributos sean correctos
            3.- chequeo de los contenidos, en los que se testea que los
            ficheros a los que referencia           el imsmanifest.xml sean
            correctos y esten en su ruta correspondiente
            El resultado de esta validacion sera del tipo ValidaVO, con sus
            atributos rellenos seguno
            se ha comentado en el mismo
            b) obtenerValidacionLigera: parametro de entrada rutaManifest de
            tipo String, es la ruta en
            la que se encuentra el fichero imsmanifest.xml; parametro de
            salida, el tipo ValidaVO
            Este tipo de validacion realiza las siguientes tareas:
            1.- chequea que el fichero se encuentre en la ruta
            correspondiente
            2.- realiza el parseo del fichero y comprueba que los nodos y
            atributos sean correctos;
            esta comprobacion tendra mayor o menor restriccion dependiendo
            del tipo de ODE que
            puede ser: CA (contentAggregation--> si es obligatorio que tenga
            al menos una
            organizacion) o RCP (ResourceContentPackage --> la etiqueta
            organizations tiene que ir
            vacia)
            El resultado de esta validacion sera del tipo ValidaVO, con sus
            atributos rellenos seguno
            se ha comentado en el mismo
            c) validarCargaOde: parametro de entrada rutaManifest de tipo
            String, es la ruta en
            la que se encuentra el fichero imsmanifest.xml; parametro de
            salida, el tipo ValidaVO
            Este tipo de validacion realiza las siguientes tareas:
            1.- valida que el fichero se encuentre en la ruta
            correspondiente
            2.- chequea que todos los metadatos de tipo LOM-ES sean
            correctos
            3.- Realiza la validacion Binaria (explicado en apartado a)
            4.- chequea que esten rellenos los campos de metadatos basicos
            obligatorios
            d) validarMDBasicosObl: parametro de entrada MDBasicosOblVO, es
            la ruta en
            la que se encuentra el fichero imsmanifest.xml; parametro de
            salida, el tipo ValidaVO
            Con este metodo se obliga a que se rellenen los metadatos
            basicos obligatorios, si no estan
            devolvera un error
        </documentation>
        <namespace>http://es.pode.validador.negocio.servicio</namespace>
        <parameter name="allowedMethods" value="estoyActivo obtenerValidacion obtenerValidacionBin obtenervalidacionLigera obtenerValidacionLomes validarCargaOde validarMDBasicosObl validarMec"/>
        <parameter name="className" value="es.pode.validador.negocio.servicio.SrvValidadorServiceWSDelegator" />
        <operation name="estoyActivo">
        </operation>
        <operation name="obtenerValidacion">
            <parameter name="rutaOde"/>
        </operation>
        <operation name="obtenerValidacionBin">
            <parameter name="rutaManifest"/>
        </operation>
        <operation name="obtenervalidacionLigera">
            <parameter name="rutaManifest"/>
            <parameter name="tipoOde"/>
        </operation>
        <operation name="obtenerValidacionLomes">
            <parameter name="fichero"/>
        </operation>
        <operation name="validarCargaOde">
            <parameter name="rutaOde"/>
        </operation>
        <operation name="validarMDBasicosObl">
            <parameter name="mDBasicos"/>
        </operation>
        <operation name="validarMec">
            <parameter name="rutaManifest"/>
        </operation>
        <typeMapping
            type="java:es.pode.validador.negocio.servicio.ErrorParseoVO"
            xmlns:ns1="http://es.pode.validador.negocio.servicio"
            qname="ns1:ErrorParseoVO"
            serializer="org.apache.axis.encoding.ser.BeanSerializerFactory"
            deserializer="org.apache.axis.encoding.ser.BeanDeserializerFactory"
            encodingStyle="">
            <documentation>
            Objeto VO conteniendo los datos del mensaje de error devuelto en
            el parseo contra esquema de los manifiestos.
            </documentation>
        </typeMapping>
        <typeMapping
            type="java:es.pode.validador.negocio.servicio.ErrorParseoVO[]"
            xmlns:ns1="http://es.pode.validador.negocio.servicio"
            qname="ns1:ArrayOfErrorParseoVO"
            serializer="org.apache.axis.encoding.ser.ArraySerializerFactory"
            deserializer="org.apache.axis.encoding.ser.ArrayDeserializerFactory"
            encodingStyle="">
            <documentation>
            Objeto VO conteniendo los datos del mensaje de error devuelto en
            el parseo contra esquema de los manifiestos.
            </documentation>
        </typeMapping>
        <typeMapping
            type="java:es.pode.validador.negocio.servicio.MDBasicosOblVO"
            xmlns:ns2="http://es.pode.validador.negocio.servicio"
            qname="ns2:MDBasicosOblVO"
            serializer="org.apache.axis.encoding.ser.BeanSerializerFactory"
            deserializer="org.apache.axis.encoding.ser.BeanDeserializerFactory"
            encodingStyle="">
            <documentation>
            MDBasicosOblVO, tipo de datos para metadatos basicos
            obligatorios; sus atributos son los que deben estar rellenos
            obligatoriamente en los metadatos de tipo LOM-ES
            </documentation>
        </typeMapping>
        <typeMapping
            type="java:es.pode.validador.negocio.servicio.ValidaVO"
            xmlns:ns3="http://es.pode.validador.negocio.servicio"
            qname="ns3:ValidaVO"
            serializer="org.apache.axis.encoding.ser.BeanSerializerFactory"
            deserializer="org.apache.axis.encoding.ser.BeanDeserializerFactory"
            encodingStyle="">
            <documentation>
            Tipo que sera devuelto por los metodos del servicio. Esta
            compuesto por tres Atributos:
            rutaManifest: su tipo es string e informa de la ruta donde se
            encuentra el fichero                                   
            principal imsmanifest.xml
            esValidoManifes: su tipo es Boolean e informa de si la
            validacion ha sido correcta o no
            resultadoValidacion: su tipo es String e informa de los errores
            que se han producido con una serie de codigos que se detallan a
            continuacion:
            0.0 sin errores
            1.1 imsmanifest es incorrecto
            1.2 error de parseo en el manifest
            1.3 error, la etiqueta principal debe ser manifest o lom
            1.4 error de chequeo de contenidos
            2.1 el LOM-ES es obligatorio para metadata
            2.2 el LOM-ES es incorrecto
            2.3 el LOM-ES es incorrecto para la etiqueta de organizaciones
            3.1 no existe el ODE
            4.1 los datos del formulario son obligatorios
            4.2 el Titulo es obligatorio
            4.3 el Idioma es obligatorio
            4.4 la Descripcion es obligatoria
            4.5 el Tipo es obligatorio
            4.6 el Contexto es obligatorio
            4.7 la Edad es obligatoria
            4.8 el Idioma Destino es obligatorio
            4.9 el Proceso Cognitivo es obligatorio
            detalleValidacion: de tipo String, donde se recogerán los
            errores de Xerces cuando se produzca un error en el parseo
            contra esquemas.
            </documentation>
        </typeMapping>
    </service>
    <transport name="http">
        <requestFlow>
            <handler type="URLMapper"/>
            <handler type="java:org.apache.axis.handlers.http.HTTPAuthHandler"/>
        </requestFlow>
    </transport>
    <transport name="local">
        <responseFlow>
            <handler type="LocalResponder"/>
        </responseFlow>
    </transport>
</deployment>