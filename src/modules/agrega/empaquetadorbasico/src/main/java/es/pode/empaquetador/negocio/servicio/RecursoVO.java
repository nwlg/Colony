// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: ValueObject.vsl in andromda-java-cartridge.
//
package es.pode.empaquetador.negocio.servicio;

/**
 * <p>
 * Objeto que representa un recurso de SCORM2004. Es una version
 * simplificada de la clase Resource.
 * </p>
 */
public class RecursoVO
    implements java.io.Serializable
{

    /**
     * Constructor por defecto
     */        
    public RecursoVO()
    {
    }

    /**
     * Constructor taking all properties.
     * @param identifier  Identificador del recurso. Se corresponde con el atributo identifier de la clase Resource.
     * @param href  Fichero principal del recurso. Se corresponde con el atributo href de la clase Resource.
     * @param type  Tipo de recurso. Se corresponde con el atributo type de la clase Resource.
     * @param scormType  Tipo de recurso (ADL)
     * @param idManifest  Identificador del Manifest que contiene este recurso.
     * @param recursoURL  URL del fichero principal del recurso (localizador + bases + href)
     * @param fileList  Lista de ficheros que componen el recurso. Se corresponde con el atributo file de la clase Resource.
     * @param dependencias  
     * @param lom  
     */
    public RecursoVO(
        java.lang.String identifier,
        java.lang.String href,
        java.lang.String type,
        java.lang.String scormType,
        java.lang.String idManifest,
        java.lang.String recursoURL,
        es.pode.empaquetador.negocio.servicio.FileVO[] fileList,
        es.pode.empaquetador.negocio.servicio.DependenciaVO[] dependencias,
        es.pode.empaquetador.negocio.servicio.LomVO lom)

    {
        this.identifier = identifier;
        this.href = href;
        this.type = type;
        this.scormType = scormType;
        this.idManifest = idManifest;
        this.recursoURL = recursoURL;
        this.fileList = fileList;
        this.dependencias = dependencias;
        this.lom = lom;
    }

    /**
     * Copies constructor from other RecursoVO
     * @param otherBean RecursoVO 
     */
    public RecursoVO(RecursoVO otherBean)
    {
        if (otherBean != null)
        {
            this.identifier = otherBean.getIdentifier();
            this.href = otherBean.getHref();
            this.type = otherBean.getType();
            this.scormType = otherBean.getScormType();
            this.idManifest = otherBean.getIdManifest();
            this.recursoURL = otherBean.getRecursoURL();
            this.fileList = otherBean.getFileList();
            this.dependencias = otherBean.getDependencias();
            this.lom = otherBean.getLom();
        }
    }

    private java.lang.String identifier;

    /**
     * <p>
     * Identificador del recurso. Se corresponde con el atributo
     * identifier de la clase Resource.
     * </p>
     * @return java.lang.String
     */
    public java.lang.String getIdentifier()
    {
        return this.identifier;
    }

    /**
   * <p>
   * Identificador del recurso. Se corresponde con el atributo
   * identifier de la clase Resource.
   * </p>
     *  @param identifier  Identificador del recurso. Se corresponde con el atributo identifier de la clase Resource.  
     */
    public void setIdentifier(java.lang.String identifier)
    {
        this.identifier = identifier;
    }

    private java.lang.String href;

    /**
     * <p>
     * Fichero principal del recurso. Se corresponde con el atributo
     * href de la clase Resource.
     * </p>
     * @return java.lang.String
     */
    public java.lang.String getHref()
    {
        return this.href;
    }

    /**
   * <p>
   * Fichero principal del recurso. Se corresponde con el atributo
   * href de la clase Resource.
   * </p>
     *  @param href  Fichero principal del recurso. Se corresponde con el atributo href de la clase Resource.  
     */
    public void setHref(java.lang.String href)
    {
        this.href = href;
    }

    private java.lang.String type;

    /**
     * <p>
     * Tipo de recurso. Se corresponde con el atributo type de la clase
     * Resource.
     * </p>
     * @return java.lang.String
     */
    public java.lang.String getType()
    {
        return this.type;
    }

    /**
   * <p>
   * Tipo de recurso. Se corresponde con el atributo type de la clase
   * Resource.
   * </p>
     *  @param type  Tipo de recurso. Se corresponde con el atributo type de la clase Resource.  
     */
    public void setType(java.lang.String type)
    {
        this.type = type;
    }

    private java.lang.String scormType;

    /**
     * <p>
     * Tipo de recurso (ADL)
     * </p>
     * @return java.lang.String
     */
    public java.lang.String getScormType()
    {
        return this.scormType;
    }

    /**
   * <p>
   * Tipo de recurso (ADL)
   * </p>
     *  @param scormType  Tipo de recurso (ADL)  
     */
    public void setScormType(java.lang.String scormType)
    {
        this.scormType = scormType;
    }

    private java.lang.String idManifest;

    /**
     * <p>
     * Identificador del Manifest que contiene este recurso.
     * </p>
     * @return java.lang.String
     */
    public java.lang.String getIdManifest()
    {
        return this.idManifest;
    }

    /**
   * <p>
   * Identificador del Manifest que contiene este recurso.
   * </p>
     *  @param idManifest  Identificador del Manifest que contiene este recurso.  
     */
    public void setIdManifest(java.lang.String idManifest)
    {
        this.idManifest = idManifest;
    }

    private java.lang.String recursoURL;

    /**
     * <p>
     * URL del fichero principal del recurso (localizador + bases +
     * href)
     * </p>
     * @return java.lang.String
     */
    public java.lang.String getRecursoURL()
    {
        return this.recursoURL;
    }

    /**
   * <p>
   * URL del fichero principal del recurso (localizador + bases +
   * href)
   * </p>
     *  @param recursoURL  URL del fichero principal del recurso (localizador + bases + href)  
     */
    public void setRecursoURL(java.lang.String recursoURL)
    {
        this.recursoURL = recursoURL;
    }

    /**
   * <p>
   * Clase que representa un fichero contenido en un recurso. Se
   * mapea de la clase es.pode.parseadorXML.scorm2004.File.
   * </p>
     */
    private es.pode.empaquetador.negocio.servicio.FileVO[] fileList;

    /**
     * Getter of fileList.  
     * @return es.pode.empaquetador.negocio.servicio.FileVO[]  Clase que representa un fichero contenido en un recurso. Se mapea de la clase es.pode.parseadorXML.scorm2004.File.
     */
    public es.pode.empaquetador.negocio.servicio.FileVO[] getFileList()
    {
        return this.fileList;
    }

  /**
   * Setter of fileList  
   *  @param fileList  Clase que representa un fichero contenido en un recurso. Se mapea de la clase es.pode.parseadorXML.scorm2004.File. 
   */
    public void setFileList(es.pode.empaquetador.negocio.servicio.FileVO[] fileList)
    {
        this.fileList = fileList;
    }

    /**
   * <p>
   * Dependencia del recurso.
   * </p>
     */
    private es.pode.empaquetador.negocio.servicio.DependenciaVO[] dependencias;

    /**
     * Getter of dependencias.  
     * @return es.pode.empaquetador.negocio.servicio.DependenciaVO[]  Dependencia del recurso.
     */
    public es.pode.empaquetador.negocio.servicio.DependenciaVO[] getDependencias()
    {
        return this.dependencias;
    }

  /**
   * Setter of dependencias  
   *  @param dependencias  Dependencia del recurso. 
   */
    public void setDependencias(es.pode.empaquetador.negocio.servicio.DependenciaVO[] dependencias)
    {
        this.dependencias = dependencias;
    }

    /**
   * <p>
   * Informacion basica del Lom. Se almacenara el titulo idioma y
   * descripcion de la entidad catalogada.
   * </p>
     */
    private es.pode.empaquetador.negocio.servicio.LomVO lom;

    /**
     * Getter of lom.  
     * @return es.pode.empaquetador.negocio.servicio.LomVO  Informacion basica del Lom. Se almacenara el titulo idioma y descripcion de la entidad catalogada.
     */
    public es.pode.empaquetador.negocio.servicio.LomVO getLom()
    {
        return this.lom;
    }

  /**
   * Setter of lom  
   *  @param lom  Informacion basica del Lom. Se almacenara el titulo idioma y descripcion de la entidad catalogada. 
   */
    public void setLom(es.pode.empaquetador.negocio.servicio.LomVO lom)
    {
        this.lom = lom;
    }

}