// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.empaquetador.negocio.servicio;

import net.sf.dozer.util.mapping.MapperIF;

import org.apache.log4j.Logger;


/**
 * <p>
 * Spring Service base class for <code>es.pode.empaquetador.negocio.servicio.SrvGestorManifestService</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService
 */
public abstract class SrvGestorManifestServiceBase
    implements es.pode.empaquetador.negocio.servicio.SrvGestorManifestService
{

		 protected static final Logger logger = Logger.getLogger(SrvGestorManifestServiceBase.class);


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


	
	        
    
	    	    private es.pode.empaquetador.negocio.servicio.SrvGestorArchivosService srvGestorArchivosService;
	
	    /**
	     * Sets the reference to <code>srvGestorArchivosService</code>.
	     */
	    public void setSrvGestorArchivosService(es.pode.empaquetador.negocio.servicio.SrvGestorArchivosService srvGestorArchivosService)
	    {
	        this.srvGestorArchivosService = srvGestorArchivosService;
	    }
	
	    /**
	     * Gets the reference to <code>srvGestorArchivosService</code>.
	     */
	    protected es.pode.empaquetador.negocio.servicio.SrvGestorArchivosService getSrvGestorArchivosService()
	    {
	        return this.srvGestorArchivosService;
	    }
	    
	        
	
			
    protected final es.pode.publicacion.negocio.servicios.SrvPublicacionService getSrvPublicacionService()
	        throws java.lang.Exception
	    {
            String srvPublicacionServiceFile="importedServices.properties";	    
	          java.io.InputStream srvPublicacionServiceInputStream=SrvGestorManifestServiceBase.class.getClassLoader().getResourceAsStream(srvPublicacionServiceFile);
	          java.util.Properties srvPublicacionServiceProperties = new java.util.Properties();
	          srvPublicacionServiceProperties.load(srvPublicacionServiceInputStream);
	          String srvPublicacionServiceEndPointAddress="";
	          srvPublicacionServiceEndPointAddress=(String) srvPublicacionServiceProperties.get("srvPublicacionServicePort");
			  logger.debug("srvPublicacionServiceEndPointAddress del fichero --> " + srvPublicacionServiceEndPointAddress);
			  es.pode.publicacion.negocio.servicios.SrvPublicacionServiceService srvPublicacionService = new es.pode.publicacion.negocio.servicios.SrvPublicacionServiceServiceLocator();                                                                                                                                                                                                                                                    
            if (srvPublicacionServiceEndPointAddress.length()>0) 
					  ((es.pode.publicacion.negocio.servicios.SrvPublicacionServiceServiceLocator)srvPublicacionService).setSrvPublicacionServiceEndpointAddress(srvPublicacionServiceEndPointAddress);
	    	    es.pode.publicacion.negocio.servicios.SrvPublicacionService port = srvPublicacionService.getSrvPublicacionService();	    
	          return port;
	    }

    
    
	
	        
    
	    	    	    
		    private es.pode.parseadorXML.SCORM2004Dao scormDao;
		
		    /**
		     * Sets the reference to <code>scormDao</code>.
		     */
		    public void setScormDao(es.pode.parseadorXML.SCORM2004Dao scormDao)
		    {
		        this.scormDao = scormDao;
		    }
		
		    /**
		     * Gets the reference to <code>scormDao</code>.
		     */
		    protected es.pode.parseadorXML.SCORM2004Dao getScormDao()
		    {
		        return this.scormDao;
		    }
	    
	        
	
			
    protected final es.pode.validador.negocio.servicio.SrvValidadorService getSrvValidadorService()
	        throws java.lang.Exception
	    {
            String srvValidadorServiceFile="importedServices.properties";	    
	          java.io.InputStream srvValidadorServiceInputStream=SrvGestorManifestServiceBase.class.getClassLoader().getResourceAsStream(srvValidadorServiceFile);
	          java.util.Properties srvValidadorServiceProperties = new java.util.Properties();
	          srvValidadorServiceProperties.load(srvValidadorServiceInputStream);
	          String srvValidadorServiceEndPointAddress="";
	          srvValidadorServiceEndPointAddress=(String) srvValidadorServiceProperties.get("srvValidadorServicePort");
			  logger.debug("srvValidadorServiceEndPointAddress del fichero --> " + srvValidadorServiceEndPointAddress);
			  es.pode.validador.negocio.servicio.SrvValidadorServiceService srvValidadorService = new es.pode.validador.negocio.servicio.SrvValidadorServiceServiceLocator();                                                                                                                                                                                                                                                    
            if (srvValidadorServiceEndPointAddress.length()>0) 
					  ((es.pode.validador.negocio.servicio.SrvValidadorServiceServiceLocator)srvValidadorService).setSrvValidadorServiceEndpointAddress(srvValidadorServiceEndPointAddress);
	    	    es.pode.validador.negocio.servicio.SrvValidadorService port = srvValidadorService.getSrvValidadorService();	    
	          return port;
	    }

    
    
	
	        
    
	    	    	    
		    private es.pode.soporte.zip.TrueZipDaoImpl zipDao;
		
		    /**
		     * Sets the reference to <code>zipDao</code>.
		     */
		    public void setZipDao(es.pode.soporte.zip.TrueZipDaoImpl zipDao)
		    {
		        this.zipDao = zipDao;
		    }
		
		    /**
		     * Gets the reference to <code>zipDao</code>.
		     */
		    protected es.pode.soporte.zip.TrueZipDaoImpl getZipDao()
		    {
		        return this.zipDao;
		    }
	    
	        
	
			
    protected final es.pode.entregar.negocio.servicios.SrvEntregarService getSrvEntregarService()
	        throws java.lang.Exception
	    {
            String srvEntregarServiceFile="importedServices.properties";	    
	          java.io.InputStream srvEntregarServiceInputStream=SrvGestorManifestServiceBase.class.getClassLoader().getResourceAsStream(srvEntregarServiceFile);
	          java.util.Properties srvEntregarServiceProperties = new java.util.Properties();
	          srvEntregarServiceProperties.load(srvEntregarServiceInputStream);
	          String srvEntregarServiceEndPointAddress="";
	          srvEntregarServiceEndPointAddress=(String) srvEntregarServiceProperties.get("srvEntregarServicePort");
			  logger.debug("srvEntregarServiceEndPointAddress del fichero --> " + srvEntregarServiceEndPointAddress);
			  es.pode.entregar.negocio.servicios.SrvEntregarServiceService srvEntregarService = new es.pode.entregar.negocio.servicios.SrvEntregarServiceServiceLocator();                                                                                                                                                                                                                                                    
            if (srvEntregarServiceEndPointAddress.length()>0) 
					  ((es.pode.entregar.negocio.servicios.SrvEntregarServiceServiceLocator)srvEntregarService).setSrvEntregarServiceEndpointAddress(srvEntregarServiceEndPointAddress);
	    	    es.pode.entregar.negocio.servicios.SrvEntregarService port = srvEntregarService.getSrvEntregarService();	    
	          return port;
	    }

    
    
	
			
    protected final es.pode.catalogacion.negocio.servicios.SrvCatalogacionAvanzadaService getSrvCatalogacionAvanzadaService()
	        throws java.lang.Exception
	    {
            String srvCatalogacionAvanzadaServiceFile="importedServices.properties";	    
	          java.io.InputStream srvCatalogacionAvanzadaServiceInputStream=SrvGestorManifestServiceBase.class.getClassLoader().getResourceAsStream(srvCatalogacionAvanzadaServiceFile);
	          java.util.Properties srvCatalogacionAvanzadaServiceProperties = new java.util.Properties();
	          srvCatalogacionAvanzadaServiceProperties.load(srvCatalogacionAvanzadaServiceInputStream);
	          String srvCatalogacionAvanzadaServiceEndPointAddress="";
	          srvCatalogacionAvanzadaServiceEndPointAddress=(String) srvCatalogacionAvanzadaServiceProperties.get("srvCatalogacionAvanzadaServicePort");
			  logger.debug("srvCatalogacionAvanzadaServiceEndPointAddress del fichero --> " + srvCatalogacionAvanzadaServiceEndPointAddress);
			  es.pode.catalogacion.negocio.servicios.SrvCatalogacionAvanzadaServiceService srvCatalogacionAvanzadaService = new es.pode.catalogacion.negocio.servicios.SrvCatalogacionAvanzadaServiceServiceLocator();                                                                                                                                                                                                                                                    
            if (srvCatalogacionAvanzadaServiceEndPointAddress.length()>0) 
					  ((es.pode.catalogacion.negocio.servicios.SrvCatalogacionAvanzadaServiceServiceLocator)srvCatalogacionAvanzadaService).setSrvCatalogacionAvanzadaServiceEndpointAddress(srvCatalogacionAvanzadaServiceEndPointAddress);
	    	    es.pode.catalogacion.negocio.servicios.SrvCatalogacionAvanzadaService port = srvCatalogacionAvanzadaService.getSrvCatalogacionAvanzadaService();	    
	          return port;
	    }

    
    
	
			
    protected final es.pode.catalogacion.negocio.servicios.SrvCatalogacionBasicaService getSrvCatalogacionBasicaService()
	        throws java.lang.Exception
	    {
            String srvCatalogacionBasicaServiceFile="importedServices.properties";	    
	          java.io.InputStream srvCatalogacionBasicaServiceInputStream=SrvGestorManifestServiceBase.class.getClassLoader().getResourceAsStream(srvCatalogacionBasicaServiceFile);
	          java.util.Properties srvCatalogacionBasicaServiceProperties = new java.util.Properties();
	          srvCatalogacionBasicaServiceProperties.load(srvCatalogacionBasicaServiceInputStream);
	          String srvCatalogacionBasicaServiceEndPointAddress="";
	          srvCatalogacionBasicaServiceEndPointAddress=(String) srvCatalogacionBasicaServiceProperties.get("srvCatalogacionBasicaServicePort");
			  logger.debug("srvCatalogacionBasicaServiceEndPointAddress del fichero --> " + srvCatalogacionBasicaServiceEndPointAddress);
			  es.pode.catalogacion.negocio.servicios.SrvCatalogacionBasicaServiceService srvCatalogacionBasicaService = new es.pode.catalogacion.negocio.servicios.SrvCatalogacionBasicaServiceServiceLocator();                                                                                                                                                                                                                                                    
            if (srvCatalogacionBasicaServiceEndPointAddress.length()>0) 
					  ((es.pode.catalogacion.negocio.servicios.SrvCatalogacionBasicaServiceServiceLocator)srvCatalogacionBasicaService).setSrvCatalogacionBasicaServiceEndpointAddress(srvCatalogacionBasicaServiceEndPointAddress);
	    	    es.pode.catalogacion.negocio.servicios.SrvCatalogacionBasicaService port = srvCatalogacionBasicaService.getSrvCatalogacionBasicaService();	    
	          return port;
	    }

    
    
	
			
    protected final es.pode.herramientaOffline.negocio.soporte.DescomprimeYvalida getDescomprimeYvalida()
	        throws java.lang.Exception
	    {
            String descomprimeYvalidaFile="importedServices.properties";	    
	          java.io.InputStream descomprimeYvalidaInputStream=SrvGestorManifestServiceBase.class.getClassLoader().getResourceAsStream(descomprimeYvalidaFile);
	          java.util.Properties descomprimeYvalidaProperties = new java.util.Properties();
	          descomprimeYvalidaProperties.load(descomprimeYvalidaInputStream);
	          String descomprimeYvalidaEndPointAddress="";
	          descomprimeYvalidaEndPointAddress=(String) descomprimeYvalidaProperties.get("descomprimeYvalidaPort");
			  logger.debug("descomprimeYvalidaEndPointAddress del fichero --> " + descomprimeYvalidaEndPointAddress);
			  es.pode.herramientaOffline.negocio.soporte.DescomprimeYvalidaService descomprimeYvalida = new es.pode.herramientaOffline.negocio.soporte.DescomprimeYvalidaServiceLocator();                                                                                                                                                                                                                                                    
            if (descomprimeYvalidaEndPointAddress.length()>0) 
					  ((es.pode.herramientaOffline.negocio.soporte.DescomprimeYvalidaServiceLocator)descomprimeYvalida).setDescomprimeYvalidaEndpointAddress(descomprimeYvalidaEndPointAddress);
	    	    es.pode.herramientaOffline.negocio.soporte.DescomprimeYvalida port = descomprimeYvalida.getDescomprimeYvalida();	    
	          return port;
	    }

    
    
	
			
    protected final es.pode.localizador.negocio.servicios.SrvLocalizadorService getSrvLocalizadorService()
	        throws java.lang.Exception
	    {
            String srvLocalizadorServiceFile="importedServices.properties";	    
	          java.io.InputStream srvLocalizadorServiceInputStream=SrvGestorManifestServiceBase.class.getClassLoader().getResourceAsStream(srvLocalizadorServiceFile);
	          java.util.Properties srvLocalizadorServiceProperties = new java.util.Properties();
	          srvLocalizadorServiceProperties.load(srvLocalizadorServiceInputStream);
	          String srvLocalizadorServiceEndPointAddress="";
	          srvLocalizadorServiceEndPointAddress=(String) srvLocalizadorServiceProperties.get("srvLocalizadorServicePort");
			  logger.debug("srvLocalizadorServiceEndPointAddress del fichero --> " + srvLocalizadorServiceEndPointAddress);
			  es.pode.localizador.negocio.servicios.SrvLocalizadorServiceService srvLocalizadorService = new es.pode.localizador.negocio.servicios.SrvLocalizadorServiceServiceLocator();                                                                                                                                                                                                                                                    
            if (srvLocalizadorServiceEndPointAddress.length()>0) 
					  ((es.pode.localizador.negocio.servicios.SrvLocalizadorServiceServiceLocator)srvLocalizadorService).setSrvLocalizadorServiceEndpointAddress(srvLocalizadorServiceEndPointAddress);
	    	    es.pode.localizador.negocio.servicios.SrvLocalizadorService port = srvLocalizadorService.getSrvLocalizadorService();	    
	          return port;
	    }

    
    

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#cargarManifest(java.lang.String)
     */
    public es.pode.empaquetador.negocio.servicio.OdeVO cargarManifest(java.lang.String identificador)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.cargarManifest(java.lang.String identificador) - 'identificador' can not be null");
        }
        try
        {
            return this.handleCargarManifest(identificador);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.cargarManifest(java.lang.String identificador)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #cargarManifest(java.lang.String)}
      */
    protected abstract es.pode.empaquetador.negocio.servicio.OdeVO handleCargarManifest(java.lang.String identificador)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#descargarManifest(java.lang.String)
     */
    public java.lang.Boolean descargarManifest(java.lang.String identificador)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.descargarManifest(java.lang.String identificador) - 'identificador' can not be null");
        }
        try
        {
            return this.handleDescargarManifest(identificador);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.descargarManifest(java.lang.String identificador)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #descargarManifest(java.lang.String)}
      */
    protected abstract java.lang.Boolean handleDescargarManifest(java.lang.String identificador)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#crearGrupo(java.lang.String, es.pode.empaquetador.negocio.servicio.GrupoVO, java.lang.String)
     */
    public java.lang.String crearGrupo(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.GrupoVO grupoVO, java.lang.String identificadorPadre)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearGrupo(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.GrupoVO grupoVO, java.lang.String identificadorPadre) - 'identificador' can not be null");
        }
        if (grupoVO == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearGrupo(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.GrupoVO grupoVO, java.lang.String identificadorPadre) - 'grupoVO' can not be null");
        }
        if (identificadorPadre == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearGrupo(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.GrupoVO grupoVO, java.lang.String identificadorPadre) - 'identificadorPadre' can not be null");
        }
        try
        {
            return this.handleCrearGrupo(identificador, grupoVO, identificadorPadre);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearGrupo(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.GrupoVO grupoVO, java.lang.String identificadorPadre)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #crearGrupo(java.lang.String, es.pode.empaquetador.negocio.servicio.GrupoVO, java.lang.String)}
      */
    protected abstract java.lang.String handleCrearGrupo(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.GrupoVO grupoVO, java.lang.String identificadorPadre)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#modificarGrupo(java.lang.String, es.pode.empaquetador.negocio.servicio.GrupoVO)
     */
    public java.lang.String modificarGrupo(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.GrupoVO grupoVO)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.modificarGrupo(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.GrupoVO grupoVO) - 'identificador' can not be null");
        }
        if (grupoVO == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.modificarGrupo(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.GrupoVO grupoVO) - 'grupoVO' can not be null");
        }
        try
        {
            return this.handleModificarGrupo(identificador, grupoVO);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.modificarGrupo(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.GrupoVO grupoVO)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #modificarGrupo(java.lang.String, es.pode.empaquetador.negocio.servicio.GrupoVO)}
      */
    protected abstract java.lang.String handleModificarGrupo(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.GrupoVO grupoVO)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#eliminarGrupo(java.lang.String, java.lang.String)
     */
    public java.lang.String eliminarGrupo(java.lang.String identificador, java.lang.String identificadorGrupo)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarGrupo(java.lang.String identificador, java.lang.String identificadorGrupo) - 'identificador' can not be null");
        }
        if (identificadorGrupo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarGrupo(java.lang.String identificador, java.lang.String identificadorGrupo) - 'identificadorGrupo' can not be null");
        }
        try
        {
            return this.handleEliminarGrupo(identificador, identificadorGrupo);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarGrupo(java.lang.String identificador, java.lang.String identificadorGrupo)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #eliminarGrupo(java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleEliminarGrupo(java.lang.String identificador, java.lang.String identificadorGrupo)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#vincularGrupo(java.lang.String, java.lang.String, java.lang.String)
     */
    public java.lang.String vincularGrupo(java.lang.String identificador, java.lang.String identificadorGrupo, java.lang.String identificadorRecurso)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.vincularGrupo(java.lang.String identificador, java.lang.String identificadorGrupo, java.lang.String identificadorRecurso) - 'identificador' can not be null");
        }
        if (identificadorGrupo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.vincularGrupo(java.lang.String identificador, java.lang.String identificadorGrupo, java.lang.String identificadorRecurso) - 'identificadorGrupo' can not be null");
        }
        if (identificadorRecurso == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.vincularGrupo(java.lang.String identificador, java.lang.String identificadorGrupo, java.lang.String identificadorRecurso) - 'identificadorRecurso' can not be null");
        }
        try
        {
            return this.handleVincularGrupo(identificador, identificadorGrupo, identificadorRecurso);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.vincularGrupo(java.lang.String identificador, java.lang.String identificadorGrupo, java.lang.String identificadorRecurso)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #vincularGrupo(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleVincularGrupo(java.lang.String identificador, java.lang.String identificadorGrupo, java.lang.String identificadorRecurso)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#desvincularGrupo(java.lang.String, java.lang.String)
     */
    public java.lang.String desvincularGrupo(java.lang.String identificador, java.lang.String identificadorGrupo)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.desvincularGrupo(java.lang.String identificador, java.lang.String identificadorGrupo) - 'identificador' can not be null");
        }
        if (identificadorGrupo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.desvincularGrupo(java.lang.String identificador, java.lang.String identificadorGrupo) - 'identificadorGrupo' can not be null");
        }
        try
        {
            return this.handleDesvincularGrupo(identificador, identificadorGrupo);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.desvincularGrupo(java.lang.String identificador, java.lang.String identificadorGrupo)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #desvincularGrupo(java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleDesvincularGrupo(java.lang.String identificador, java.lang.String identificadorGrupo)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#guardarManifiesto(java.lang.String)
     */
    public void guardarManifiesto(java.lang.String identificador)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.guardarManifiesto(java.lang.String identificador) - 'identificador' can not be null");
        }
        try
        {
            this.handleGuardarManifiesto(identificador);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.guardarManifiesto(java.lang.String identificador)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #guardarManifiesto(java.lang.String)}
      */
    protected abstract void handleGuardarManifiesto(java.lang.String identificador)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#crearOrganizacion(java.lang.String, es.pode.empaquetador.negocio.servicio.OrganizacionVO)
     */
    public java.lang.String crearOrganizacion(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.OrganizacionVO organizacion)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearOrganizacion(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.OrganizacionVO organizacion) - 'identificador' can not be null");
        }
        if (organizacion == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearOrganizacion(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.OrganizacionVO organizacion) - 'organizacion' can not be null");
        }
        try
        {
            return this.handleCrearOrganizacion(identificador, organizacion);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearOrganizacion(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.OrganizacionVO organizacion)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #crearOrganizacion(java.lang.String, es.pode.empaquetador.negocio.servicio.OrganizacionVO)}
      */
    protected abstract java.lang.String handleCrearOrganizacion(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.OrganizacionVO organizacion)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#eliminarOrganizacion(java.lang.String, java.lang.String)
     */
    public java.lang.String eliminarOrganizacion(java.lang.String identificador, java.lang.String idOrganizacion)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarOrganizacion(java.lang.String identificador, java.lang.String idOrganizacion) - 'identificador' can not be null");
        }
        if (idOrganizacion == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarOrganizacion(java.lang.String identificador, java.lang.String idOrganizacion) - 'idOrganizacion' can not be null");
        }
        try
        {
            return this.handleEliminarOrganizacion(identificador, idOrganizacion);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarOrganizacion(java.lang.String identificador, java.lang.String idOrganizacion)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #eliminarOrganizacion(java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleEliminarOrganizacion(java.lang.String identificador, java.lang.String idOrganizacion)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#modificarOrganizacion(java.lang.String, es.pode.empaquetador.negocio.servicio.OrganizacionVO)
     */
    public java.lang.String modificarOrganizacion(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.OrganizacionVO organizacion)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.modificarOrganizacion(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.OrganizacionVO organizacion) - 'identificador' can not be null");
        }
        if (organizacion == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.modificarOrganizacion(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.OrganizacionVO organizacion) - 'organizacion' can not be null");
        }
        try
        {
            return this.handleModificarOrganizacion(identificador, organizacion);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.modificarOrganizacion(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.OrganizacionVO organizacion)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #modificarOrganizacion(java.lang.String, es.pode.empaquetador.negocio.servicio.OrganizacionVO)}
      */
    protected abstract java.lang.String handleModificarOrganizacion(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.OrganizacionVO organizacion)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#fijarOrganizacionPorDefecto(java.lang.String, java.lang.String)
     */
    public java.lang.String fijarOrganizacionPorDefecto(java.lang.String identificador, java.lang.String idOrganizacion)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.fijarOrganizacionPorDefecto(java.lang.String identificador, java.lang.String idOrganizacion) - 'identificador' can not be null");
        }
        if (idOrganizacion == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.fijarOrganizacionPorDefecto(java.lang.String identificador, java.lang.String idOrganizacion) - 'idOrganizacion' can not be null");
        }
        try
        {
            return this.handleFijarOrganizacionPorDefecto(identificador, idOrganizacion);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.fijarOrganizacionPorDefecto(java.lang.String identificador, java.lang.String idOrganizacion)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #fijarOrganizacionPorDefecto(java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleFijarOrganizacionPorDefecto(java.lang.String identificador, java.lang.String idOrganizacion)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#agregarManifiestoZIP(java.lang.String, javax.activation.DataHandler, java.lang.String)
     */
    public java.lang.String agregarManifiestoZIP(java.lang.String identificador, javax.activation.DataHandler paqueteSCORM, java.lang.String submanifestId)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.agregarManifiestoZIP(java.lang.String identificador, javax.activation.DataHandler paqueteSCORM, java.lang.String submanifestId) - 'identificador' can not be null");
        }
        if (paqueteSCORM == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.agregarManifiestoZIP(java.lang.String identificador, javax.activation.DataHandler paqueteSCORM, java.lang.String submanifestId) - 'paqueteSCORM' can not be null");
        }
        try
        {
            return this.handleAgregarManifiestoZIP(identificador, paqueteSCORM, submanifestId);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.agregarManifiestoZIP(java.lang.String identificador, javax.activation.DataHandler paqueteSCORM, java.lang.String submanifestId)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #agregarManifiestoZIP(java.lang.String, javax.activation.DataHandler, java.lang.String)}
      */
    protected abstract java.lang.String handleAgregarManifiestoZIP(java.lang.String identificador, javax.activation.DataHandler paqueteSCORM, java.lang.String submanifestId)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#agregarManifiestoRepositorio(java.lang.String, java.lang.String, java.lang.String)
     */
    public java.lang.String agregarManifiestoRepositorio(java.lang.String identificador, java.lang.String localizador, java.lang.String submanifestId)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.agregarManifiestoRepositorio(java.lang.String identificador, java.lang.String localizador, java.lang.String submanifestId) - 'identificador' can not be null");
        }
        if (localizador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.agregarManifiestoRepositorio(java.lang.String identificador, java.lang.String localizador, java.lang.String submanifestId) - 'localizador' can not be null");
        }
        try
        {
            return this.handleAgregarManifiestoRepositorio(identificador, localizador, submanifestId);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.agregarManifiestoRepositorio(java.lang.String identificador, java.lang.String localizador, java.lang.String submanifestId)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #agregarManifiestoRepositorio(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleAgregarManifiestoRepositorio(java.lang.String identificador, java.lang.String localizador, java.lang.String submanifestId)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#desagregarSubmanifiestoLocal(java.lang.String, java.lang.String, java.lang.String)
     */
    public javax.activation.DataHandler desagregarSubmanifiestoLocal(java.lang.String identificador, java.lang.String submanifiesto, java.lang.String submanifestId)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.desagregarSubmanifiestoLocal(java.lang.String identificador, java.lang.String submanifiesto, java.lang.String submanifestId) - 'identificador' can not be null");
        }
        if (submanifiesto == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.desagregarSubmanifiestoLocal(java.lang.String identificador, java.lang.String submanifiesto, java.lang.String submanifestId) - 'submanifiesto' can not be null");
        }
        try
        {
            return this.handleDesagregarSubmanifiestoLocal(identificador, submanifiesto, submanifestId);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.desagregarSubmanifiestoLocal(java.lang.String identificador, java.lang.String submanifiesto, java.lang.String submanifestId)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #desagregarSubmanifiestoLocal(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract javax.activation.DataHandler handleDesagregarSubmanifiestoLocal(java.lang.String identificador, java.lang.String submanifiesto, java.lang.String submanifestId)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#eliminarSubmanifiesto(java.lang.String, java.lang.String, java.lang.String)
     */
    public java.lang.String eliminarSubmanifiesto(java.lang.String identificador, java.lang.String submanifiestoId, java.lang.String idSubmanifestPadre)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarSubmanifiesto(java.lang.String identificador, java.lang.String submanifiestoId, java.lang.String idSubmanifestPadre) - 'identificador' can not be null");
        }
        if (submanifiestoId == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarSubmanifiesto(java.lang.String identificador, java.lang.String submanifiestoId, java.lang.String idSubmanifestPadre) - 'submanifiestoId' can not be null");
        }
        try
        {
            return this.handleEliminarSubmanifiesto(identificador, submanifiestoId, idSubmanifestPadre);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarSubmanifiesto(java.lang.String identificador, java.lang.String submanifiestoId, java.lang.String idSubmanifestPadre)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #eliminarSubmanifiesto(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleEliminarSubmanifiesto(java.lang.String identificador, java.lang.String submanifiestoId, java.lang.String idSubmanifestPadre)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#desagregarSubmanifiestoRepositorio(java.lang.String, java.lang.String, java.lang.String)
     */
    public void desagregarSubmanifiestoRepositorio(java.lang.String identificador, java.lang.String submanifiestoId, java.lang.String submanifestId)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.desagregarSubmanifiestoRepositorio(java.lang.String identificador, java.lang.String submanifiestoId, java.lang.String submanifestId) - 'identificador' can not be null");
        }
        if (submanifiestoId == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.desagregarSubmanifiestoRepositorio(java.lang.String identificador, java.lang.String submanifiestoId, java.lang.String submanifestId) - 'submanifiestoId' can not be null");
        }
        try
        {
            this.handleDesagregarSubmanifiestoRepositorio(identificador, submanifiestoId, submanifestId);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.desagregarSubmanifiestoRepositorio(java.lang.String identificador, java.lang.String submanifiestoId, java.lang.String submanifestId)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #desagregarSubmanifiestoRepositorio(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract void handleDesagregarSubmanifiestoRepositorio(java.lang.String identificador, java.lang.String submanifiestoId, java.lang.String submanifestId)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#iniciarNuevoODE(java.lang.String, java.lang.String, java.lang.String)
     */
    public es.pode.empaquetador.negocio.servicio.OdeVO iniciarNuevoODE(java.lang.String user, java.lang.String titulo, java.lang.String idioma)
    {
        if (user == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.iniciarNuevoODE(java.lang.String user, java.lang.String titulo, java.lang.String idioma) - 'user' can not be null");
        }
        if (titulo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.iniciarNuevoODE(java.lang.String user, java.lang.String titulo, java.lang.String idioma) - 'titulo' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.iniciarNuevoODE(java.lang.String user, java.lang.String titulo, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleIniciarNuevoODE(user, titulo, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.iniciarNuevoODE(java.lang.String user, java.lang.String titulo, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #iniciarNuevoODE(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract es.pode.empaquetador.negocio.servicio.OdeVO handleIniciarNuevoODE(java.lang.String user, java.lang.String titulo, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#editarODE(java.lang.String)
     */
    public es.pode.empaquetador.negocio.servicio.OdeVO editarODE(java.lang.String identificador)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.editarODE(java.lang.String identificador) - 'identificador' can not be null");
        }
        try
        {
            return this.handleEditarODE(identificador);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.editarODE(java.lang.String identificador)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #editarODE(java.lang.String)}
      */
    protected abstract es.pode.empaquetador.negocio.servicio.OdeVO handleEditarODE(java.lang.String identificador)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#terminarEdicion(java.lang.String)
     */
    public void terminarEdicion(java.lang.String identificador)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.terminarEdicion(java.lang.String identificador) - 'identificador' can not be null");
        }
        try
        {
            this.handleTerminarEdicion(identificador);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.terminarEdicion(java.lang.String identificador)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #terminarEdicion(java.lang.String)}
      */
    protected abstract void handleTerminarEdicion(java.lang.String identificador)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#crearRecurso(java.lang.String, es.pode.empaquetador.negocio.servicio.RecursoVO)
     */
    public java.lang.String crearRecurso(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.RecursoVO recurso)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearRecurso(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.RecursoVO recurso) - 'identificador' can not be null");
        }
        if (recurso == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearRecurso(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.RecursoVO recurso) - 'recurso' can not be null");
        }
        try
        {
            return this.handleCrearRecurso(identificador, recurso);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearRecurso(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.RecursoVO recurso)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #crearRecurso(java.lang.String, es.pode.empaquetador.negocio.servicio.RecursoVO)}
      */
    protected abstract java.lang.String handleCrearRecurso(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.RecursoVO recurso)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#eliminarRecursos(java.lang.String, java.lang.String[])
     */
    public void eliminarRecursos(java.lang.String identificador, java.lang.String[] recursos)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarRecursos(java.lang.String identificador, java.lang.String[] recursos) - 'identificador' can not be null");
        }
        if (recursos == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarRecursos(java.lang.String identificador, java.lang.String[] recursos) - 'recursos' can not be null");
        }
        try
        {
            this.handleEliminarRecursos(identificador, recursos);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarRecursos(java.lang.String identificador, java.lang.String[] recursos)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #eliminarRecursos(java.lang.String, java.lang.String[])}
      */
    protected abstract void handleEliminarRecursos(java.lang.String identificador, java.lang.String[] recursos)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#modificarRecurso(java.lang.String, es.pode.empaquetador.negocio.servicio.RecursoVO)
     */
    public java.lang.String modificarRecurso(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.RecursoVO recurso)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.modificarRecurso(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.RecursoVO recurso) - 'identificador' can not be null");
        }
        if (recurso == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.modificarRecurso(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.RecursoVO recurso) - 'recurso' can not be null");
        }
        try
        {
            return this.handleModificarRecurso(identificador, recurso);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.modificarRecurso(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.RecursoVO recurso)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #modificarRecurso(java.lang.String, es.pode.empaquetador.negocio.servicio.RecursoVO)}
      */
    protected abstract java.lang.String handleModificarRecurso(java.lang.String identificador, es.pode.empaquetador.negocio.servicio.RecursoVO recurso)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#asociarLom(java.lang.String, java.lang.String, java.lang.String)
     */
    public void asociarLom(java.lang.String identificador, java.lang.String idElemento, java.lang.String href)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.asociarLom(java.lang.String identificador, java.lang.String idElemento, java.lang.String href) - 'identificador' can not be null");
        }
        if (idElemento == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.asociarLom(java.lang.String identificador, java.lang.String idElemento, java.lang.String href) - 'idElemento' can not be null");
        }
        try
        {
            this.handleAsociarLom(identificador, idElemento, href);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.asociarLom(java.lang.String identificador, java.lang.String idElemento, java.lang.String href)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #asociarLom(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract void handleAsociarLom(java.lang.String identificador, java.lang.String idElemento, java.lang.String href)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#prepararCatalogacion(java.lang.String, java.lang.String, java.lang.String)
     */
    public java.lang.String prepararCatalogacion(java.lang.String identificador, java.lang.String idElemento, java.lang.String href)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.prepararCatalogacion(java.lang.String identificador, java.lang.String idElemento, java.lang.String href) - 'identificador' can not be null");
        }
        if (idElemento == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.prepararCatalogacion(java.lang.String identificador, java.lang.String idElemento, java.lang.String href) - 'idElemento' can not be null");
        }
        try
        {
            return this.handlePrepararCatalogacion(identificador, idElemento, href);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.prepararCatalogacion(java.lang.String identificador, java.lang.String idElemento, java.lang.String href)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #prepararCatalogacion(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handlePrepararCatalogacion(java.lang.String identificador, java.lang.String idElemento, java.lang.String href)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#subirItem(java.lang.String, java.lang.String)
     */
    public java.lang.String subirItem(java.lang.String identificador, java.lang.String idItem)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.subirItem(java.lang.String identificador, java.lang.String idItem) - 'identificador' can not be null");
        }
        if (idItem == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.subirItem(java.lang.String identificador, java.lang.String idItem) - 'idItem' can not be null");
        }
        try
        {
            return this.handleSubirItem(identificador, idItem);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.subirItem(java.lang.String identificador, java.lang.String idItem)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #subirItem(java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleSubirItem(java.lang.String identificador, java.lang.String idItem)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#bajarItem(java.lang.String, java.lang.String)
     */
    public java.lang.String bajarItem(java.lang.String identificador, java.lang.String idItem)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.bajarItem(java.lang.String identificador, java.lang.String idItem) - 'identificador' can not be null");
        }
        if (idItem == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.bajarItem(java.lang.String identificador, java.lang.String idItem) - 'idItem' can not be null");
        }
        try
        {
            return this.handleBajarItem(identificador, idItem);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.bajarItem(java.lang.String identificador, java.lang.String idItem)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #bajarItem(java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleBajarItem(java.lang.String identificador, java.lang.String idItem)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#subirOrganization(java.lang.String, java.lang.String)
     */
    public java.lang.String subirOrganization(java.lang.String identificador, java.lang.String idOrganization)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.subirOrganization(java.lang.String identificador, java.lang.String idOrganization) - 'identificador' can not be null");
        }
        if (idOrganization == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.subirOrganization(java.lang.String identificador, java.lang.String idOrganization) - 'idOrganization' can not be null");
        }
        try
        {
            return this.handleSubirOrganization(identificador, idOrganization);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.subirOrganization(java.lang.String identificador, java.lang.String idOrganization)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #subirOrganization(java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleSubirOrganization(java.lang.String identificador, java.lang.String idOrganization)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#bajarOrganization(java.lang.String, java.lang.String)
     */
    public java.lang.String bajarOrganization(java.lang.String identificador, java.lang.String idOrganization)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.bajarOrganization(java.lang.String identificador, java.lang.String idOrganization) - 'identificador' can not be null");
        }
        if (idOrganization == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.bajarOrganization(java.lang.String identificador, java.lang.String idOrganization) - 'idOrganization' can not be null");
        }
        try
        {
            return this.handleBajarOrganization(identificador, idOrganization);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.bajarOrganization(java.lang.String identificador, java.lang.String idOrganization)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #bajarOrganization(java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleBajarOrganization(java.lang.String identificador, java.lang.String idOrganization)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#copiarElementos(java.lang.String, java.lang.String[], java.lang.String)
     */
    public void copiarElementos(java.lang.String identificador, java.lang.String[] elementos, java.lang.String destino)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.copiarElementos(java.lang.String identificador, java.lang.String[] elementos, java.lang.String destino) - 'identificador' can not be null");
        }
        if (elementos == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.copiarElementos(java.lang.String identificador, java.lang.String[] elementos, java.lang.String destino) - 'elementos' can not be null");
        }
        if (destino == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.copiarElementos(java.lang.String identificador, java.lang.String[] elementos, java.lang.String destino) - 'destino' can not be null");
        }
        try
        {
            this.handleCopiarElementos(identificador, elementos, destino);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.copiarElementos(java.lang.String identificador, java.lang.String[] elementos, java.lang.String destino)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #copiarElementos(java.lang.String, java.lang.String[], java.lang.String)}
      */
    protected abstract void handleCopiarElementos(java.lang.String identificador, java.lang.String[] elementos, java.lang.String destino)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#moverElementos(java.lang.String, java.lang.String[], java.lang.String)
     */
    public void moverElementos(java.lang.String identificador, java.lang.String[] elementos, java.lang.String destino)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.moverElementos(java.lang.String identificador, java.lang.String[] elementos, java.lang.String destino) - 'identificador' can not be null");
        }
        if (elementos == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.moverElementos(java.lang.String identificador, java.lang.String[] elementos, java.lang.String destino) - 'elementos' can not be null");
        }
        if (destino == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.moverElementos(java.lang.String identificador, java.lang.String[] elementos, java.lang.String destino) - 'destino' can not be null");
        }
        try
        {
            this.handleMoverElementos(identificador, elementos, destino);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.moverElementos(java.lang.String identificador, java.lang.String[] elementos, java.lang.String destino)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #moverElementos(java.lang.String, java.lang.String[], java.lang.String)}
      */
    protected abstract void handleMoverElementos(java.lang.String identificador, java.lang.String[] elementos, java.lang.String destino)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#asociarSecuencia(java.lang.String, java.lang.String, es.pode.empaquetador.negocio.servicio.ControlModeVO)
     */
    public java.lang.String asociarSecuencia(java.lang.String identificador, java.lang.String idElemento, es.pode.empaquetador.negocio.servicio.ControlModeVO controlMode)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.asociarSecuencia(java.lang.String identificador, java.lang.String idElemento, es.pode.empaquetador.negocio.servicio.ControlModeVO controlMode) - 'identificador' can not be null");
        }
        if (idElemento == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.asociarSecuencia(java.lang.String identificador, java.lang.String idElemento, es.pode.empaquetador.negocio.servicio.ControlModeVO controlMode) - 'idElemento' can not be null");
        }
        if (controlMode == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.asociarSecuencia(java.lang.String identificador, java.lang.String idElemento, es.pode.empaquetador.negocio.servicio.ControlModeVO controlMode) - 'controlMode' can not be null");
        }
        try
        {
            return this.handleAsociarSecuencia(identificador, idElemento, controlMode);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.asociarSecuencia(java.lang.String identificador, java.lang.String idElemento, es.pode.empaquetador.negocio.servicio.ControlModeVO controlMode)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #asociarSecuencia(java.lang.String, java.lang.String, es.pode.empaquetador.negocio.servicio.ControlModeVO)}
      */
    protected abstract java.lang.String handleAsociarSecuencia(java.lang.String identificador, java.lang.String idElemento, es.pode.empaquetador.negocio.servicio.ControlModeVO controlMode)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#crearReferenciaEnCache(java.lang.String, java.lang.String)
     */
    public java.lang.Boolean crearReferenciaEnCache(java.lang.String identificador, java.lang.String idElemento)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearReferenciaEnCache(java.lang.String identificador, java.lang.String idElemento) - 'identificador' can not be null");
        }
        if (idElemento == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearReferenciaEnCache(java.lang.String identificador, java.lang.String idElemento) - 'idElemento' can not be null");
        }
        try
        {
            return this.handleCrearReferenciaEnCache(identificador, idElemento);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.crearReferenciaEnCache(java.lang.String identificador, java.lang.String idElemento)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #crearReferenciaEnCache(java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.Boolean handleCrearReferenciaEnCache(java.lang.String identificador, java.lang.String idElemento)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#importarRecursos(java.lang.String, javax.activation.DataHandler, java.lang.String)
     */
    public void importarRecursos(java.lang.String identificador, javax.activation.DataHandler paqueteRCP, java.lang.String submanifestId)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.importarRecursos(java.lang.String identificador, javax.activation.DataHandler paqueteRCP, java.lang.String submanifestId) - 'identificador' can not be null");
        }
        if (paqueteRCP == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.importarRecursos(java.lang.String identificador, javax.activation.DataHandler paqueteRCP, java.lang.String submanifestId) - 'paqueteRCP' can not be null");
        }
        try
        {
            this.handleImportarRecursos(identificador, paqueteRCP, submanifestId);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.importarRecursos(java.lang.String identificador, javax.activation.DataHandler paqueteRCP, java.lang.String submanifestId)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #importarRecursos(java.lang.String, javax.activation.DataHandler, java.lang.String)}
      */
    protected abstract void handleImportarRecursos(java.lang.String identificador, javax.activation.DataHandler paqueteRCP, java.lang.String submanifestId)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#exportarRecursos(java.lang.String, java.lang.String[], java.lang.String, java.lang.String)
     */
    public javax.activation.DataHandler exportarRecursos(java.lang.String identificador, java.lang.String[] recursos, java.lang.String submanifestId, java.lang.String nombre)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.exportarRecursos(java.lang.String identificador, java.lang.String[] recursos, java.lang.String submanifestId, java.lang.String nombre) - 'identificador' can not be null");
        }
        if (recursos == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.exportarRecursos(java.lang.String identificador, java.lang.String[] recursos, java.lang.String submanifestId, java.lang.String nombre) - 'recursos' can not be null");
        }
        if (nombre == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.exportarRecursos(java.lang.String identificador, java.lang.String[] recursos, java.lang.String submanifestId, java.lang.String nombre) - 'nombre' can not be null");
        }
        try
        {
            return this.handleExportarRecursos(identificador, recursos, submanifestId, nombre);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.exportarRecursos(java.lang.String identificador, java.lang.String[] recursos, java.lang.String submanifestId, java.lang.String nombre)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #exportarRecursos(java.lang.String, java.lang.String[], java.lang.String, java.lang.String)}
      */
    protected abstract javax.activation.DataHandler handleExportarRecursos(java.lang.String identificador, java.lang.String[] recursos, java.lang.String submanifestId, java.lang.String nombre)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#validar(java.lang.String, java.lang.String)
     */
    public es.pode.empaquetador.negocio.servicio.ValidaVO validar(java.lang.String identificador, java.lang.String tipo)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.validar(java.lang.String identificador, java.lang.String tipo) - 'identificador' can not be null");
        }
        if (tipo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.validar(java.lang.String identificador, java.lang.String tipo) - 'tipo' can not be null");
        }
        try
        {
            return this.handleValidar(identificador, tipo);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.validar(java.lang.String identificador, java.lang.String tipo)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #validar(java.lang.String, java.lang.String)}
      */
    protected abstract es.pode.empaquetador.negocio.servicio.ValidaVO handleValidar(java.lang.String identificador, java.lang.String tipo)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#previsualizarOde(java.lang.String)
     */
    public java.lang.String previsualizarOde(java.lang.String identificador)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.previsualizarOde(java.lang.String identificador) - 'identificador' can not be null");
        }
        try
        {
            return this.handlePrevisualizarOde(identificador);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.previsualizarOde(java.lang.String identificador)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #previsualizarOde(java.lang.String)}
      */
    protected abstract java.lang.String handlePrevisualizarOde(java.lang.String identificador)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#obtenerObjetosPersonales(java.lang.String)
     */
    public es.pode.empaquetador.negocio.servicio.TransicionVO[] obtenerObjetosPersonales(java.lang.String user)
    {
        if (user == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.obtenerObjetosPersonales(java.lang.String user) - 'user' can not be null");
        }
        try
        {
            return this.handleObtenerObjetosPersonales(user);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.obtenerObjetosPersonales(java.lang.String user)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerObjetosPersonales(java.lang.String)}
      */
    protected abstract es.pode.empaquetador.negocio.servicio.TransicionVO[] handleObtenerObjetosPersonales(java.lang.String user)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#eliminarODE(java.lang.String)
     */
    public void eliminarODE(java.lang.String identificador)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarODE(java.lang.String identificador) - 'identificador' can not be null");
        }
        try
        {
            this.handleEliminarODE(identificador);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.eliminarODE(java.lang.String identificador)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #eliminarODE(java.lang.String)}
      */
    protected abstract void handleEliminarODE(java.lang.String identificador)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#generarMetadatoInicial(java.lang.String, java.lang.String, java.lang.String)
     */
    public es.pode.empaquetador.negocio.servicio.OdeVO generarMetadatoInicial(java.lang.String titulo, java.lang.String idioma, java.lang.String identificador)
    {
        if (titulo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.generarMetadatoInicial(java.lang.String titulo, java.lang.String idioma, java.lang.String identificador) - 'titulo' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.generarMetadatoInicial(java.lang.String titulo, java.lang.String idioma, java.lang.String identificador) - 'idioma' can not be null");
        }
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.generarMetadatoInicial(java.lang.String titulo, java.lang.String idioma, java.lang.String identificador) - 'identificador' can not be null");
        }
        try
        {
            return this.handleGenerarMetadatoInicial(titulo, idioma, identificador);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.generarMetadatoInicial(java.lang.String titulo, java.lang.String idioma, java.lang.String identificador)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #generarMetadatoInicial(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract es.pode.empaquetador.negocio.servicio.OdeVO handleGenerarMetadatoInicial(java.lang.String titulo, java.lang.String idioma, java.lang.String identificador)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#asociarDatosItem(java.lang.String, java.lang.String, es.pode.empaquetador.negocio.servicio.TimeLimitActionVO, es.pode.empaquetador.negocio.servicio.DataFromLMSVO, es.pode.empaquetador.negocio.servicio.CompletionThresholdVO, es.pode.empaquetador.negocio.servicio.PresentationVO)
     */
    public void asociarDatosItem(java.lang.String identificador, java.lang.String idElemento, es.pode.empaquetador.negocio.servicio.TimeLimitActionVO timeLimitAction, es.pode.empaquetador.negocio.servicio.DataFromLMSVO dataFromLMS, es.pode.empaquetador.negocio.servicio.CompletionThresholdVO completionThreshold, es.pode.empaquetador.negocio.servicio.PresentationVO presentation)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.asociarDatosItem(java.lang.String identificador, java.lang.String idElemento, es.pode.empaquetador.negocio.servicio.TimeLimitActionVO timeLimitAction, es.pode.empaquetador.negocio.servicio.DataFromLMSVO dataFromLMS, es.pode.empaquetador.negocio.servicio.CompletionThresholdVO completionThreshold, es.pode.empaquetador.negocio.servicio.PresentationVO presentation) - 'identificador' can not be null");
        }
        if (idElemento == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.asociarDatosItem(java.lang.String identificador, java.lang.String idElemento, es.pode.empaquetador.negocio.servicio.TimeLimitActionVO timeLimitAction, es.pode.empaquetador.negocio.servicio.DataFromLMSVO dataFromLMS, es.pode.empaquetador.negocio.servicio.CompletionThresholdVO completionThreshold, es.pode.empaquetador.negocio.servicio.PresentationVO presentation) - 'idElemento' can not be null");
        }
        try
        {
            this.handleAsociarDatosItem(identificador, idElemento, timeLimitAction, dataFromLMS, completionThreshold, presentation);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.asociarDatosItem(java.lang.String identificador, java.lang.String idElemento, es.pode.empaquetador.negocio.servicio.TimeLimitActionVO timeLimitAction, es.pode.empaquetador.negocio.servicio.DataFromLMSVO dataFromLMS, es.pode.empaquetador.negocio.servicio.CompletionThresholdVO completionThreshold, es.pode.empaquetador.negocio.servicio.PresentationVO presentation)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #asociarDatosItem(java.lang.String, java.lang.String, es.pode.empaquetador.negocio.servicio.TimeLimitActionVO, es.pode.empaquetador.negocio.servicio.DataFromLMSVO, es.pode.empaquetador.negocio.servicio.CompletionThresholdVO, es.pode.empaquetador.negocio.servicio.PresentationVO)}
      */
    protected abstract void handleAsociarDatosItem(java.lang.String identificador, java.lang.String idElemento, es.pode.empaquetador.negocio.servicio.TimeLimitActionVO timeLimitAction, es.pode.empaquetador.negocio.servicio.DataFromLMSVO dataFromLMS, es.pode.empaquetador.negocio.servicio.CompletionThresholdVO completionThreshold, es.pode.empaquetador.negocio.servicio.PresentationVO presentation)
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#obtenerObjetosCompartidos()
     */
    public es.pode.empaquetador.negocio.servicio.TransicionVO[] obtenerObjetosCompartidos()
    {
        try
        {
            return this.handleObtenerObjetosCompartidos();
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.obtenerObjetosCompartidos()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerObjetosCompartidos()}
      */
    protected abstract es.pode.empaquetador.negocio.servicio.TransicionVO[] handleObtenerObjetosCompartidos()
        throws java.lang.Exception;

    /**
     * @see es.pode.empaquetador.negocio.servicio.SrvGestorManifestService#agregarManifiestoZipUrl(java.lang.String, java.lang.String, java.lang.String)
     */
    public java.lang.String agregarManifiestoZipUrl(java.lang.String identificador, java.lang.String fichero, java.lang.String submanifestId)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.agregarManifiestoZipUrl(java.lang.String identificador, java.lang.String fichero, java.lang.String submanifestId) - 'identificador' can not be null");
        }
        if (fichero == null)
        {
            throw new IllegalArgumentException(
                "es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.agregarManifiestoZipUrl(java.lang.String identificador, java.lang.String fichero, java.lang.String submanifestId) - 'fichero' can not be null");
        }
        try
        {
            return this.handleAgregarManifiestoZipUrl(identificador, fichero, submanifestId);
        }
        catch (Throwable th)
        {
            throw new es.pode.empaquetador.negocio.servicio.SrvGestorManifestServiceException(
                "Error performing 'es.pode.empaquetador.negocio.servicio.SrvGestorManifestService.agregarManifiestoZipUrl(java.lang.String identificador, java.lang.String fichero, java.lang.String submanifestId)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #agregarManifiestoZipUrl(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleAgregarManifiestoZipUrl(java.lang.String identificador, java.lang.String fichero, java.lang.String submanifestId)
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.empaquetador.negocio.PrincipalStore.get();
    }
}