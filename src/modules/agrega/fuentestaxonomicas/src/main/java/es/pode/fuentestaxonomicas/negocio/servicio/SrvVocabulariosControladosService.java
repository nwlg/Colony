// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringService.vsl in andromda-spring-cartridge.
//
package es.pode.fuentestaxonomicas.negocio.servicio;

/**
 * <p>
 * El servicio de vocabularios controlados es el encargado de
 * gestionar los terminos restringidos por LOM-ES, realizando las
 * traducciones oportunas para conseguir la validez de los
 * esquemas, asi como para mostrar los vocabularios en el idioma
 * indicado por el usuario.
 * </p>
 */
public interface SrvVocabulariosControladosService
{
  /**
   * <p>
   * El metodo obtenerCombos es el encargado de rellenar los combos
   * correspondientes a los vocabularios controlados en la
   * herramienta de catalogacion.
   * </p>
   * <p>
   * Los vocabularios controlados se encuentran en ficheros xml
   * especificados mediante VDEX, cada uno de los cuales se expresa
   * en un idioma diferente.
   * </p>
   * <p>
   * El metodo espera como parametros de entrada los identificadores
   * de los vocabularios que se desean cargar y el idioma en el que
   * el usuario esta realizando la catalogacion.
   * </p>
   * <p>
   * Como parametro de  salida, el metodo devuelve un array de
   * VocabularioVO. Cada uno de estos contiene:
   * </p>
   * <p>
   * - idVocabulario: identificador que se le pasa como parametro en
   * el array de identificadores y por el que se busca en el fichero
   * xml
   * </p>
   * <p>
   * - nomVocabulario: es el nombre del vocabulario que se
   * corresponde con el parametro del identificador. Inicialmente es
   * null, y se rellena en el metodo.
   * </p>
   * <p>
   * - idioma: idioma en el que se desea recoger el vocabulario.
   * </p>
   * <p>
   * Los ficheros xml que contienen los vocabularios controlados
   * estaran parseados en una hashmap (se cargan en el constructor
   * del servicio), de forma que estaran accesibles para la
   * aplicacion en cualquier momento sin necesidad de parsearlos cada
   * vez.
   * </p>
      * @param l_id  Los identificadores de los vocabularios que se desean cargar en los combos. Los identificadores seran strings del tipo 1.1, 2.1.3, 3...
         * @param idioma  Idioma en el que el usuario esta realizando la catalogacion. Indica el fichero xml donde recoger los terminos del vocabulario.
      * @return es.pode.fuentestaxonomicas.negocio.servicio.VocabularioVO[]
   */
    public es.pode.fuentestaxonomicas.negocio.servicio.VocabularioVO[] obtenerCombos(java.lang.String[] l_id, java.lang.String idioma);

  /**
   * <p>
   * El metodo crearTraduccionAIngles busca para un identificador
   * dado su valor en ingles, accediendo para ello al xml de
   * vocabularios controlados en ingles parseado en la hashmap.
   * </p>
   * <p>
   * Este metodo es necesario para almacenar los terminos de los
   * vocabularios controlados en ingles en el xml final, ya que es
   * necesario que se encuentren en este idioma para consolidar un
   * LOM-ES valido.
   * </p>
   * <p>
   * Como parametro de  salida, el metodo devuelve un array de
   * TerminoYPadreVO, cada uno de los cuales esta compuesto por:
   * </p>
   * <p>
   * - idVocabulario: indicando el identificador del vocabulario al
   * que pertenece el termino a buscar.
   * </p>
   * <p>
   * - nomTermino: atributo que se rellena en el interior del metodo
   * una vez que se ha encontrado el identificador indicado en el
   * fichero xml en ingles.
   * </p>
   * <p>
   * - idiomaTermino: por defecto, debera ser siempre ingles.
   * </p>
   * <p>
   * - idTermino: identificador del termino para el cual se desea
   * recoger su valor en ingles.
   * </p>
      * @param l_id  Lista de identificadores de los terminos de los cuales se desea obtener su valor en ingles.
      * @return es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[]
   */
    public es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[] crearTraduccionAIngles(java.lang.String[] l_id);

  /**
   * <p>
   * El metodo traduceAIdioma busca para un identificador su valor en
   * el idioma solicitado, accediendo para ello al xml de
   * vocabularios controlados parseado en la hashmap en el idioma
   * requerido en el parametro.
   * </p>
   * <p>
   * Se obtiene como parametro de salida un array de TerminoVO. Cada
   * uno de los TerminoVO contiene:
   * </p>
   * <p>
   * - idTermino: identificador del termino para el cual se desea
   * recoger su valor en el idioma especificado.
   * </p>
   * <p>
   * - nomTermino: atributo que se rellena en el interior del metodo
   * una vez que se ha encontrado el identificador indicado en el
   * fichero xml en el idioma especificado.
   * </p>
   * <p>
   * - idiomaTermino: idioma en el que se ha recogido el valor del
   * termino.
   * </p>
      * @param l_id  Lista de identificadores de los terminos de los cuales se desea obtener su valor en el idioma especificado.
         * @param idioma  Idioma en el cual se desean recoger los terminos especificador por la lista de identificadores.
      * @return es.pode.fuentestaxonomicas.negocio.servicio.TerminoVO[]
   */
    public es.pode.fuentestaxonomicas.negocio.servicio.TerminoVO[] crearTraduccionAIdioma(java.lang.String[] l_id, java.lang.String idioma);

  /**
   * <p>
   * El metodo obtenerIdTermino se utiliza para obtener los
   * identificadores de los terminos recogidos en el catalogador. Es
   * necesario para realizar la traduccion a ingles de los terminos
   * recogidos mediante el catalogador, de forma que el fichero xml
   * formado sea valido con respecto a LOM-ES.
   * </p>
   * <p>
   * El metodo devuelve un array de TerminoYPadreVO que contienen:
   * </p>
   * <p>
   * - idVocabulario: indicando el identificador del vocabulario al
   * que pertenece el termino a buscar.
   * </p>
   * <p>
   * - nomTermino: valor del termino recogido en el idioma en el que
   * se encuentre catalogando el usuario
   * </p>
   * <p>
   * - idiomaTermino: idioma en el que se encuentra escrito
   * nomTermino.
   * </p>
   * <p>
   * - idTermino: atributo que se rellenara en el metodo y que
   * contendra el identificador del termino.
   * </p>
   * <p>
   * como parametro de entrada tenemos un VO de tipo TerminoYPadreVO,
   * que vendra relleno con
   * </p>
   * <p>
   * - idVocabulario: el identificador del combo (previamente buscado
   * en el catalogador en su 		                          fichero de
   * properties para buscar desde el nombre el id que le corresponde)
   * </p>
   * <p>
   * -nomTermino: es el nombre que hemos seleccionado del combo
   * </p>
   * <p>
   * -idiomaTermino: es el idioma en que queremos devolverlo
   * </p>
   * <p>
   * -idTermino: es el identificador que debemos buscar en la hashmap
   * con los datos que tenemos y devolver el mismo TerminoYPadreVO,
   * con el idTermino relleno
   * </p>
      * @param terminoypadre  Lista de TerminoYPadreVO que contienen:
 - idVocabulario: el identificador del vocabulario (previamente buscado en el catalogador en su fichero de properties para buscar desde el nombre el id que le corresponde)
 - nomTermino: es el valor seleccionado por el usuario en el combo del catalogador
 - idiomaTermino: idioma en el que se encuentra escrito nomTermino
 - idTermino: es el identificador que se debe buscar en la hashmap con los datos a partir del idVocabulario y nomTermino. Su valor debe ser null.
      * @return es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[]
   */
    public es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[] obtenerIdTermino(es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[] terminoypadre);

}
