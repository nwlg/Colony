// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.fuentestaxonomicas.negocio.servicio;

import net.sf.dozer.util.mapping.MapperIF;

import org.apache.log4j.Logger;


/**
 * <p>
 * Spring Service base class for <code>es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService
 */
public abstract class SrvTaxonomiaServiceBase
    implements es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService
{

		 protected static final Logger logger = Logger.getLogger(SrvTaxonomiaServiceBase.class);


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}



    /**
     * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService#obtenerNodos(java.lang.String, java.lang.String, java.lang.String)
     */
    public es.pode.fuentestaxonomicas.negocio.servicio.TaxonVO[] obtenerNodos(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerNodos(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma) - 'id' can not be null");
        }
        if (nomTaxonomia == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerNodos(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma) - 'nomTaxonomia' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerNodos(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleObtenerNodos(id, nomTaxonomia, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaServiceException(
                "Error performing 'es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerNodos(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerNodos(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract es.pode.fuentestaxonomicas.negocio.servicio.TaxonVO[] handleObtenerNodos(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService#obtenerTaxonomia(java.lang.String, java.lang.String)
     */
    public es.pode.fuentestaxonomicas.negocio.servicio.TaxonVO[] obtenerTaxonomia(java.lang.String nomTaxonomia, java.lang.String idioma)
    {
        if (nomTaxonomia == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerTaxonomia(java.lang.String nomTaxonomia, java.lang.String idioma) - 'nomTaxonomia' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerTaxonomia(java.lang.String nomTaxonomia, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleObtenerTaxonomia(nomTaxonomia, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaServiceException(
                "Error performing 'es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerTaxonomia(java.lang.String nomTaxonomia, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerTaxonomia(java.lang.String, java.lang.String)}
      */
    protected abstract es.pode.fuentestaxonomicas.negocio.servicio.TaxonVO[] handleObtenerTaxonomia(java.lang.String nomTaxonomia, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService#obtenerTaxonPath(java.lang.String, java.lang.String, java.lang.String)
     */
    public es.pode.fuentestaxonomicas.negocio.servicio.TaxonVO[] obtenerTaxonPath(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerTaxonPath(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma) - 'id' can not be null");
        }
        if (nomTaxonomia == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerTaxonPath(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma) - 'nomTaxonomia' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerTaxonPath(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleObtenerTaxonPath(id, nomTaxonomia, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaServiceException(
                "Error performing 'es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerTaxonPath(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerTaxonPath(java.lang.String, java.lang.String, java.lang.String)}
      */
    protected abstract es.pode.fuentestaxonomicas.negocio.servicio.TaxonVO[] handleObtenerTaxonPath(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService#obtenerTaxonomiaCompletaPreorden(java.lang.String, java.lang.String)
     */
    public es.pode.fuentestaxonomicas.negocio.servicio.TaxonConRutaVO[] obtenerTaxonomiaCompletaPreorden(java.lang.String nomTaxonomia, java.lang.String idioma)
    {
        if (nomTaxonomia == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerTaxonomiaCompletaPreorden(java.lang.String nomTaxonomia, java.lang.String idioma) - 'nomTaxonomia' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerTaxonomiaCompletaPreorden(java.lang.String nomTaxonomia, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleObtenerTaxonomiaCompletaPreorden(nomTaxonomia, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaServiceException(
                "Error performing 'es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerTaxonomiaCompletaPreorden(java.lang.String nomTaxonomia, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerTaxonomiaCompletaPreorden(java.lang.String, java.lang.String)}
      */
    protected abstract es.pode.fuentestaxonomicas.negocio.servicio.TaxonConRutaVO[] handleObtenerTaxonomiaCompletaPreorden(java.lang.String nomTaxonomia, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService#recargar()
     */
    public void recargar()
    {
        try
        {
            this.handleRecargar();
        }
        catch (Throwable th)
        {
            throw new es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaServiceException(
                "Error performing 'es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.recargar()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #recargar()}
      */
    protected abstract void handleRecargar()
        throws java.lang.Exception;

    /**
     * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService#obtenerVariosTaxonPaths(java.lang.String[], java.lang.String, java.lang.String)
     */
    public es.pode.fuentestaxonomicas.negocio.servicio.TaxonPathVO[] obtenerVariosTaxonPaths(java.lang.String[] ides, java.lang.String nomTaxonomia, java.lang.String idioma)
    {
        if (ides == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerVariosTaxonPaths(java.lang.String[] ides, java.lang.String nomTaxonomia, java.lang.String idioma) - 'ides' can not be null");
        }
        if (nomTaxonomia == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerVariosTaxonPaths(java.lang.String[] ides, java.lang.String nomTaxonomia, java.lang.String idioma) - 'nomTaxonomia' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerVariosTaxonPaths(java.lang.String[] ides, java.lang.String nomTaxonomia, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleObtenerVariosTaxonPaths(ides, nomTaxonomia, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaServiceException(
                "Error performing 'es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerVariosTaxonPaths(java.lang.String[] ides, java.lang.String nomTaxonomia, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerVariosTaxonPaths(java.lang.String[], java.lang.String, java.lang.String)}
      */
    protected abstract es.pode.fuentestaxonomicas.negocio.servicio.TaxonPathVO[] handleObtenerVariosTaxonPaths(java.lang.String[] ides, java.lang.String nomTaxonomia, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService#obtenerVocabName(java.lang.String, java.lang.String)
     */
    public java.lang.String obtenerVocabName(java.lang.String nomTaxonomia, java.lang.String idioma)
    {
        if (nomTaxonomia == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerVocabName(java.lang.String nomTaxonomia, java.lang.String idioma) - 'nomTaxonomia' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerVocabName(java.lang.String nomTaxonomia, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleObtenerVocabName(nomTaxonomia, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaServiceException(
                "Error performing 'es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerVocabName(java.lang.String nomTaxonomia, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerVocabName(java.lang.String, java.lang.String)}
      */
    protected abstract java.lang.String handleObtenerVocabName(java.lang.String nomTaxonomia, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService#obtenerVocabNames(java.lang.String[], java.lang.String)
     */
    public java.lang.String[] obtenerVocabNames(java.lang.String[] nomTaxonomias, java.lang.String idioma)
    {
        if (nomTaxonomias == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerVocabNames(java.lang.String[] nomTaxonomias, java.lang.String idioma) - 'nomTaxonomias' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerVocabNames(java.lang.String[] nomTaxonomias, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleObtenerVocabNames(nomTaxonomias, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaServiceException(
                "Error performing 'es.pode.fuentestaxonomicas.negocio.servicio.SrvTaxonomiaService.obtenerVocabNames(java.lang.String[] nomTaxonomias, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerVocabNames(java.lang.String[], java.lang.String)}
      */
    protected abstract java.lang.String[] handleObtenerVocabNames(java.lang.String[] nomTaxonomias, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.fuentestaxonomicas.negocio.PrincipalStore.get();
    }
}