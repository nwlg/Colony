// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.fuentestaxonomicas.negocio.servicio;

import net.sf.dozer.util.mapping.MapperIF;

import org.apache.log4j.Logger;


/**
 * <p>
 * Spring Service base class for <code>es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService
 */
public abstract class SrvVocabulariosControladosServiceBase
    implements es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService
{

		 protected static final Logger logger = Logger.getLogger(SrvVocabulariosControladosServiceBase.class);


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}



    /**
     * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService#obtenerCombos(java.lang.String[], java.lang.String)
     */
    public es.pode.fuentestaxonomicas.negocio.servicio.VocabularioVO[] obtenerCombos(java.lang.String[] l_id, java.lang.String idioma)
    {
        if (l_id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService.obtenerCombos(java.lang.String[] l_id, java.lang.String idioma) - 'l_id' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService.obtenerCombos(java.lang.String[] l_id, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleObtenerCombos(l_id, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosServiceException(
                "Error performing 'es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService.obtenerCombos(java.lang.String[] l_id, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerCombos(java.lang.String[], java.lang.String)}
      */
    protected abstract es.pode.fuentestaxonomicas.negocio.servicio.VocabularioVO[] handleObtenerCombos(java.lang.String[] l_id, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService#crearTraduccionAIngles(java.lang.String[])
     */
    public es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[] crearTraduccionAIngles(java.lang.String[] l_id)
    {
        if (l_id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService.crearTraduccionAIngles(java.lang.String[] l_id) - 'l_id' can not be null");
        }
        try
        {
            return this.handleCrearTraduccionAIngles(l_id);
        }
        catch (Throwable th)
        {
            throw new es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosServiceException(
                "Error performing 'es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService.crearTraduccionAIngles(java.lang.String[] l_id)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #crearTraduccionAIngles(java.lang.String[])}
      */
    protected abstract es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[] handleCrearTraduccionAIngles(java.lang.String[] l_id)
        throws java.lang.Exception;

    /**
     * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService#crearTraduccionAIdioma(java.lang.String[], java.lang.String)
     */
    public es.pode.fuentestaxonomicas.negocio.servicio.TerminoVO[] crearTraduccionAIdioma(java.lang.String[] l_id, java.lang.String idioma)
    {
        if (l_id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService.crearTraduccionAIdioma(java.lang.String[] l_id, java.lang.String idioma) - 'l_id' can not be null");
        }
        if (idioma == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService.crearTraduccionAIdioma(java.lang.String[] l_id, java.lang.String idioma) - 'idioma' can not be null");
        }
        try
        {
            return this.handleCrearTraduccionAIdioma(l_id, idioma);
        }
        catch (Throwable th)
        {
            throw new es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosServiceException(
                "Error performing 'es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService.crearTraduccionAIdioma(java.lang.String[] l_id, java.lang.String idioma)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #crearTraduccionAIdioma(java.lang.String[], java.lang.String)}
      */
    protected abstract es.pode.fuentestaxonomicas.negocio.servicio.TerminoVO[] handleCrearTraduccionAIdioma(java.lang.String[] l_id, java.lang.String idioma)
        throws java.lang.Exception;

    /**
     * @see es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService#obtenerIdTermino(es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[])
     */
    public es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[] obtenerIdTermino(es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[] terminoypadre)
    {
        if (terminoypadre == null)
        {
            throw new IllegalArgumentException(
                "es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService.obtenerIdTermino(es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[] terminoypadre) - 'terminoypadre' can not be null");
        }
        try
        {
            return this.handleObtenerIdTermino(terminoypadre);
        }
        catch (Throwable th)
        {
            throw new es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosServiceException(
                "Error performing 'es.pode.fuentestaxonomicas.negocio.servicio.SrvVocabulariosControladosService.obtenerIdTermino(es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[] terminoypadre)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerIdTermino(es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[])}
      */
    protected abstract es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[] handleObtenerIdTermino(es.pode.fuentestaxonomicas.negocio.servicio.TerminoYPadreVO[] terminoypadre)
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.fuentestaxonomicas.negocio.PrincipalStore.get();
    }
}