// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringService.vsl in andromda-spring-cartridge.
//
package es.pode.fuentestaxonomicas.negocio.servicio;

/**
 * 
 */
public interface SrvTaxonomiaService
{
  /**
   * <p>
   * metodo obtenerNodos
   * </p>
   * <p>
   * Buscara en la Taxonomia nomTaxonmia del idioma correspondiente,
   * el identificador id y devolvera los hijos de ese identificador
   * </p>
            * @return es.pode.fuentestaxonomicas.negocio.servicio.TaxonVO[]
   */
    public es.pode.fuentestaxonomicas.negocio.servicio.TaxonVO[] obtenerNodos(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma);

  /**
   * <p>
   * metodo obtenerTaxonomia
   * </p>
   * <p>
   * Carga el primer nivel de hijos de una Taxonomia; el padre y los
   * hijos
   * </p>
         * @return es.pode.fuentestaxonomicas.negocio.servicio.TaxonVO[]
   */
    public es.pode.fuentestaxonomicas.negocio.servicio.TaxonVO[] obtenerTaxonomia(java.lang.String nomTaxonomia, java.lang.String idioma);

  /**
   * <p>
   * Metodo que obtendra toda la ruta taxonomica que define a un
   * taxon dado.
   * </p>
   * <p>
   * El metodo recogera un identificador del taxon a buscar. El
   * metodo buscara en la taxonomia todos los taxones antecedentes al
   * taxon dado. Se devolvera una lista de TaxonVO con toda la ruta.
   * </p>
            * @return es.pode.fuentestaxonomicas.negocio.servicio.TaxonVO[]
   */
    public es.pode.fuentestaxonomicas.negocio.servicio.TaxonVO[] obtenerTaxonPath(java.lang.String id, java.lang.String nomTaxonomia, java.lang.String idioma);

    public es.pode.fuentestaxonomicas.negocio.servicio.TaxonConRutaVO[] obtenerTaxonomiaCompletaPreorden(java.lang.String nomTaxonomia, java.lang.String idioma);

    public void recargar();

    public es.pode.fuentestaxonomicas.negocio.servicio.TaxonPathVO[] obtenerVariosTaxonPaths(java.lang.String[] ides, java.lang.String nomTaxonomia, java.lang.String idioma);

    public java.lang.String obtenerVocabName(java.lang.String nomTaxonomia, java.lang.String idioma);

    public java.lang.String[] obtenerVocabNames(java.lang.String[] nomTaxonomias, java.lang.String idioma);

}
