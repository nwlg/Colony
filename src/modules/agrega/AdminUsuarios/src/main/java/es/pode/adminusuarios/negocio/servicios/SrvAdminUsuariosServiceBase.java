// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.pode.adminusuarios.negocio.servicios;

import net.sf.dozer.util.mapping.MapperIF;

/**
 * <p>
 * Spring Service base class for <code>es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService
 */
public abstract class SrvAdminUsuariosServiceBase
    implements es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService
{


	
	/**
	 * Reference to the dozer bean mapper used in the application (singleton).
	 */
	private MapperIF beanMapper;
	
	/**
	 * Gets the reference to the dozer bean mapper used in the application (singleton).
	 * @return MapperIF
	 */
    protected MapperIF getBeanMapper() {
		return beanMapper;
	}

    /**
     * Sets the instance of the Dozer bean mapper to be used.
     * @param beanMapper
     */
	public void setBeanMapper(MapperIF beanMapper) {
		this.beanMapper = beanMapper;
	}


    private es.pode.adminusuarios.negocio.dominio.UsuarioDao usuarioDao;

    /**
     * Sets the reference to <code>usuario</code>'s DAO.
     */
    public void setUsuarioDao(es.pode.adminusuarios.negocio.dominio.UsuarioDao usuarioDao)
    {
        this.usuarioDao = usuarioDao;
    }

    /**
     * Gets the reference to <code>usuario</code>'s DAO.
     */
    protected es.pode.adminusuarios.negocio.dominio.UsuarioDao getUsuarioDao()
    {
        return this.usuarioDao;
    }

    private es.pode.adminusuarios.negocio.dominio.GrupoDao grupoDao;

    /**
     * Sets the reference to <code>grupo</code>'s DAO.
     */
    public void setGrupoDao(es.pode.adminusuarios.negocio.dominio.GrupoDao grupoDao)
    {
        this.grupoDao = grupoDao;
    }

    /**
     * Gets the reference to <code>grupo</code>'s DAO.
     */
    protected es.pode.adminusuarios.negocio.dominio.GrupoDao getGrupoDao()
    {
        return this.grupoDao;
    }

    private es.pode.adminusuarios.negocio.dominio.RolDao rolDao;

    /**
     * Sets the reference to <code>rol</code>'s DAO.
     */
    public void setRolDao(es.pode.adminusuarios.negocio.dominio.RolDao rolDao)
    {
        this.rolDao = rolDao;
    }

    /**
     * Gets the reference to <code>rol</code>'s DAO.
     */
    protected es.pode.adminusuarios.negocio.dominio.RolDao getRolDao()
    {
        return this.rolDao;
    }

    private es.pode.adminusuarios.negocio.dominio.GrupoTrabajoDao grupoTrabajoDao;

    /**
     * Sets the reference to <code>grupoTrabajo</code>'s DAO.
     */
    public void setGrupoTrabajoDao(es.pode.adminusuarios.negocio.dominio.GrupoTrabajoDao grupoTrabajoDao)
    {
        this.grupoTrabajoDao = grupoTrabajoDao;
    }

    /**
     * Gets the reference to <code>grupoTrabajo</code>'s DAO.
     */
    protected es.pode.adminusuarios.negocio.dominio.GrupoTrabajoDao getGrupoTrabajoDao()
    {
        return this.grupoTrabajoDao;
    }


    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#modificarGrupo(es.pode.adminusuarios.negocio.servicios.GrupoVO)
     */
    public void modificarGrupo(es.pode.adminusuarios.negocio.servicios.GrupoVO grupo)
        throws es.pode.adminusuarios.negocio.servicios.ModificacionGrupoException
    {
        if (grupo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.modificarGrupo(es.pode.adminusuarios.negocio.servicios.GrupoVO grupo) - 'grupo' can not be null");
        }
        try
        {
            this.handleModificarGrupo(grupo);
        }
        catch (es.pode.adminusuarios.negocio.servicios.ModificacionGrupoException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.modificarGrupo(es.pode.adminusuarios.negocio.servicios.GrupoVO grupo)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #modificarGrupo(es.pode.adminusuarios.negocio.servicios.GrupoVO)}
      */
    protected abstract void handleModificarGrupo(es.pode.adminusuarios.negocio.servicios.GrupoVO grupo)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#bajaGrupo(java.lang.Long[])
     */
    public es.pode.adminusuarios.negocio.servicios.ValidaBajaGrupoVO bajaGrupo(java.lang.Long[] ids)
        throws es.pode.adminusuarios.negocio.servicios.BajaGrupoException
    {
        if (ids == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.bajaGrupo(java.lang.Long[] ids) - 'ids' can not be null");
        }
        try
        {
            return this.handleBajaGrupo(ids);
        }
        catch (es.pode.adminusuarios.negocio.servicios.BajaGrupoException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.bajaGrupo(java.lang.Long[] ids)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #bajaGrupo(java.lang.Long[])}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.ValidaBajaGrupoVO handleBajaGrupo(java.lang.Long[] ids)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#listarGrupos()
     */
    public es.pode.adminusuarios.negocio.servicios.GrupoVO[] listarGrupos()
    {
        try
        {
            return this.handleListarGrupos();
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.listarGrupos()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #listarGrupos()}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.GrupoVO[] handleListarGrupos()
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#descripcionGrupo(java.lang.Long)
     */
    public es.pode.adminusuarios.negocio.servicios.GrupoVO descripcionGrupo(java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.descripcionGrupo(java.lang.Long id) - 'id' can not be null");
        }
        try
        {
            return this.handleDescripcionGrupo(id);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.descripcionGrupo(java.lang.Long id)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #descripcionGrupo(java.lang.Long)}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.GrupoVO handleDescripcionGrupo(java.lang.Long id)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#nuevaClave(es.pode.adminusuarios.negocio.servicios.UsuarioVO)
     */
    public java.lang.Boolean nuevaClave(es.pode.adminusuarios.negocio.servicios.UsuarioVO emailNIF)
        throws es.pode.adminusuarios.negocio.servicios.NuevaClaveException
    {
        if (emailNIF == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.nuevaClave(es.pode.adminusuarios.negocio.servicios.UsuarioVO emailNIF) - 'emailNIF' can not be null");
        }
        try
        {
            return this.handleNuevaClave(emailNIF);
        }
        catch (es.pode.adminusuarios.negocio.servicios.NuevaClaveException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.nuevaClave(es.pode.adminusuarios.negocio.servicios.UsuarioVO emailNIF)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #nuevaClave(es.pode.adminusuarios.negocio.servicios.UsuarioVO)}
      */
    protected abstract java.lang.Boolean handleNuevaClave(es.pode.adminusuarios.negocio.servicios.UsuarioVO emailNIF)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#modificarUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO)
     */
    public java.lang.String modificarUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario)
        throws es.pode.adminusuarios.negocio.servicios.ModificarUsuarioException
    {
        if (usuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.modificarUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario) - 'usuario' can not be null");
        }
        try
        {
            return this.handleModificarUsuario(usuario);
        }
        catch (es.pode.adminusuarios.negocio.servicios.ModificarUsuarioException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.modificarUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #modificarUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO)}
      */
    protected abstract java.lang.String handleModificarUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#listarRoles()
     */
    public es.pode.adminusuarios.negocio.servicios.RolVO[] listarRoles()
    {
        try
        {
            return this.handleListarRoles();
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.listarRoles()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #listarRoles()}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.RolVO[] handleListarRoles()
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#altaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO, es.pode.adminusuarios.negocio.servicios.UsuarioVO)
     */
    public java.lang.Long altaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario, es.pode.adminusuarios.negocio.servicios.UsuarioVO adminVO)
        throws es.pode.adminusuarios.negocio.servicios.EnviarCorreoException, es.pode.adminusuarios.negocio.servicios.AltaUsuarioException
    {
        if (usuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.altaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario, es.pode.adminusuarios.negocio.servicios.UsuarioVO adminVO) - 'usuario' can not be null");
        }
        if (adminVO == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.altaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario, es.pode.adminusuarios.negocio.servicios.UsuarioVO adminVO) - 'adminVO' can not be null");
        }
        try
        {
            return this.handleAltaUsuario(usuario, adminVO);
        }
        catch (es.pode.adminusuarios.negocio.servicios.EnviarCorreoException ex)
        {
            throw ex;
        }
        catch (es.pode.adminusuarios.negocio.servicios.AltaUsuarioException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.altaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario, es.pode.adminusuarios.negocio.servicios.UsuarioVO adminVO)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #altaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO, es.pode.adminusuarios.negocio.servicios.UsuarioVO)}
      */
    protected abstract java.lang.Long handleAltaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario, es.pode.adminusuarios.negocio.servicios.UsuarioVO adminVO)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#bajaUsuario(java.lang.Long[], es.pode.adminusuarios.negocio.servicios.UsuarioVO)
     */
    public es.pode.adminusuarios.negocio.servicios.ValidaBajaUsuarioVO bajaUsuario(java.lang.Long[] ids, es.pode.adminusuarios.negocio.servicios.UsuarioVO emailAdmin)
        throws es.pode.adminusuarios.negocio.servicios.BajaUsuarioException
    {
        if (ids == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.bajaUsuario(java.lang.Long[] ids, es.pode.adminusuarios.negocio.servicios.UsuarioVO emailAdmin) - 'ids' can not be null");
        }
        if (emailAdmin == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.bajaUsuario(java.lang.Long[] ids, es.pode.adminusuarios.negocio.servicios.UsuarioVO emailAdmin) - 'emailAdmin' can not be null");
        }
        try
        {
            return this.handleBajaUsuario(ids, emailAdmin);
        }
        catch (es.pode.adminusuarios.negocio.servicios.BajaUsuarioException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.bajaUsuario(java.lang.Long[] ids, es.pode.adminusuarios.negocio.servicios.UsuarioVO emailAdmin)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #bajaUsuario(java.lang.Long[], es.pode.adminusuarios.negocio.servicios.UsuarioVO)}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.ValidaBajaUsuarioVO handleBajaUsuario(java.lang.Long[] ids, es.pode.adminusuarios.negocio.servicios.UsuarioVO emailAdmin)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#listarUsuarios()
     */
    public es.pode.adminusuarios.negocio.servicios.UsuarioVO[] listarUsuarios()
    {
        try
        {
            return this.handleListarUsuarios();
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.listarUsuarios()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #listarUsuarios()}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.UsuarioVO[] handleListarUsuarios()
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#descripcionUsuario(java.lang.Long)
     */
    public es.pode.adminusuarios.negocio.servicios.UsuarioVO descripcionUsuario(java.lang.Long id)
        throws es.pode.adminusuarios.negocio.servicios.DescripcionUsuarioException
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.descripcionUsuario(java.lang.Long id) - 'id' can not be null");
        }
        try
        {
            return this.handleDescripcionUsuario(id);
        }
        catch (es.pode.adminusuarios.negocio.servicios.DescripcionUsuarioException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.descripcionUsuario(java.lang.Long id)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #descripcionUsuario(java.lang.Long)}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.UsuarioVO handleDescripcionUsuario(java.lang.Long id)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#listarRolesUsuario(java.lang.String)
     */
    public java.lang.String[] listarRolesUsuario(java.lang.String usuario)
    {
        if (usuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.listarRolesUsuario(java.lang.String usuario) - 'usuario' can not be null");
        }
        try
        {
            return this.handleListarRolesUsuario(usuario);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.listarRolesUsuario(java.lang.String usuario)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #listarRolesUsuario(java.lang.String)}
      */
    protected abstract java.lang.String[] handleListarRolesUsuario(java.lang.String usuario)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#altaGrupo(es.pode.adminusuarios.negocio.servicios.GrupoVO)
     */
    public java.lang.Long altaGrupo(es.pode.adminusuarios.negocio.servicios.GrupoVO grupoVO)
        throws es.pode.adminusuarios.negocio.servicios.AltaGrupoException
    {
        if (grupoVO == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.altaGrupo(es.pode.adminusuarios.negocio.servicios.GrupoVO grupoVO) - 'grupoVO' can not be null");
        }
        try
        {
            return this.handleAltaGrupo(grupoVO);
        }
        catch (es.pode.adminusuarios.negocio.servicios.AltaGrupoException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.altaGrupo(es.pode.adminusuarios.negocio.servicios.GrupoVO grupoVO)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #altaGrupo(es.pode.adminusuarios.negocio.servicios.GrupoVO)}
      */
    protected abstract java.lang.Long handleAltaGrupo(es.pode.adminusuarios.negocio.servicios.GrupoVO grupoVO)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#getRol(java.lang.Long)
     */
    public es.pode.adminusuarios.negocio.servicios.RolVO getRol(java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.getRol(java.lang.Long id) - 'id' can not be null");
        }
        try
        {
            return this.handleGetRol(id);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.getRol(java.lang.Long id)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #getRol(java.lang.Long)}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.RolVO handleGetRol(java.lang.Long id)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#existeDescripcion(java.lang.String, java.lang.Long)
     */
    public java.lang.Boolean existeDescripcion(java.lang.String descripcion, java.lang.Long id)
    {
        if (descripcion == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.existeDescripcion(java.lang.String descripcion, java.lang.Long id) - 'descripcion' can not be null");
        }
        if (id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.existeDescripcion(java.lang.String descripcion, java.lang.Long id) - 'id' can not be null");
        }
        try
        {
            return this.handleExisteDescripcion(descripcion, id);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.existeDescripcion(java.lang.String descripcion, java.lang.Long id)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #existeDescripcion(java.lang.String, java.lang.Long)}
      */
    protected abstract java.lang.Boolean handleExisteDescripcion(java.lang.String descripcion, java.lang.Long id)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#obtenerUsuario(java.lang.String)
     */
    public es.pode.adminusuarios.negocio.servicios.UsuarioVO obtenerUsuario(java.lang.String nif)
    {
        if (nif == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerUsuario(java.lang.String nif) - 'nif' can not be null");
        }
        try
        {
            return this.handleObtenerUsuario(nif);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerUsuario(java.lang.String nif)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerUsuario(java.lang.String)}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.UsuarioVO handleObtenerUsuario(java.lang.String nif)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#existeUsuario(java.lang.String)
     */
    public java.lang.Boolean existeUsuario(java.lang.String usuario)
    {
        if (usuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.existeUsuario(java.lang.String usuario) - 'usuario' can not be null");
        }
        try
        {
            return this.handleExisteUsuario(usuario);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.existeUsuario(java.lang.String usuario)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #existeUsuario(java.lang.String)}
      */
    protected abstract java.lang.Boolean handleExisteUsuario(java.lang.String usuario)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#enviarCorreoBaja(es.pode.adminusuarios.negocio.servicios.UsuarioVO)
     */
    public java.lang.String enviarCorreoBaja(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario)
        throws es.pode.adminusuarios.negocio.servicios.EnviarCorreoException
    {
        if (usuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.enviarCorreoBaja(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario) - 'usuario' can not be null");
        }
        try
        {
            return this.handleEnviarCorreoBaja(usuario);
        }
        catch (es.pode.adminusuarios.negocio.servicios.EnviarCorreoException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.enviarCorreoBaja(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #enviarCorreoBaja(es.pode.adminusuarios.negocio.servicios.UsuarioVO)}
      */
    protected abstract java.lang.String handleEnviarCorreoBaja(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#obtenerDatosUsuario(java.lang.String)
     */
    public es.pode.adminusuarios.negocio.servicios.UsuarioVO obtenerDatosUsuario(java.lang.String usuario)
    {
        if (usuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerDatosUsuario(java.lang.String usuario) - 'usuario' can not be null");
        }
        try
        {
            return this.handleObtenerDatosUsuario(usuario);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerDatosUsuario(java.lang.String usuario)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerDatosUsuario(java.lang.String)}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.UsuarioVO handleObtenerDatosUsuario(java.lang.String usuario)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#obtenerUsuariosAdministrador()
     */
    public java.lang.Long[] obtenerUsuariosAdministrador()
    {
        try
        {
            return this.handleObtenerUsuariosAdministrador();
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerUsuariosAdministrador()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerUsuariosAdministrador()}
      */
    protected abstract java.lang.Long[] handleObtenerUsuariosAdministrador()
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#obtenerGrupoAdministrador()
     */
    public java.lang.Long[] obtenerGrupoAdministrador()
    {
        try
        {
            return this.handleObtenerGrupoAdministrador();
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerGrupoAdministrador()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerGrupoAdministrador()}
      */
    protected abstract java.lang.Long[] handleObtenerGrupoAdministrador()
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#listarUsuariosPendientes()
     */
    public es.pode.adminusuarios.negocio.servicios.UsuarioVO[] listarUsuariosPendientes()
    {
        try
        {
            return this.handleListarUsuariosPendientes();
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.listarUsuariosPendientes()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #listarUsuariosPendientes()}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.UsuarioVO[] handleListarUsuariosPendientes()
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#solicitarAltaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO)
     */
    public java.lang.String solicitarAltaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario)
    {
        if (usuario == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.solicitarAltaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario) - 'usuario' can not be null");
        }
        try
        {
            return this.handleSolicitarAltaUsuario(usuario);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.solicitarAltaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #solicitarAltaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO)}
      */
    protected abstract java.lang.String handleSolicitarAltaUsuario(es.pode.adminusuarios.negocio.servicios.UsuarioVO usuario)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#bajaUsuarioPendiente(java.lang.Long[], es.pode.adminusuarios.negocio.servicios.UsuarioVO)
     */
    public es.pode.adminusuarios.negocio.servicios.ValidaBajaUsuarioVO bajaUsuarioPendiente(java.lang.Long[] ids, es.pode.adminusuarios.negocio.servicios.UsuarioVO emailAdmin)
    {
        if (ids == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.bajaUsuarioPendiente(java.lang.Long[] ids, es.pode.adminusuarios.negocio.servicios.UsuarioVO emailAdmin) - 'ids' can not be null");
        }
        if (emailAdmin == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.bajaUsuarioPendiente(java.lang.Long[] ids, es.pode.adminusuarios.negocio.servicios.UsuarioVO emailAdmin) - 'emailAdmin' can not be null");
        }
        try
        {
            return this.handleBajaUsuarioPendiente(ids, emailAdmin);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.bajaUsuarioPendiente(java.lang.Long[] ids, es.pode.adminusuarios.negocio.servicios.UsuarioVO emailAdmin)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #bajaUsuarioPendiente(java.lang.Long[], es.pode.adminusuarios.negocio.servicios.UsuarioVO)}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.ValidaBajaUsuarioVO handleBajaUsuarioPendiente(java.lang.Long[] ids, es.pode.adminusuarios.negocio.servicios.UsuarioVO emailAdmin)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#usuariosActivos(es.pode.adminusuarios.negocio.servicios.ParametroAuditoriaUsuariosVO)
     */
    public es.pode.adminusuarios.negocio.servicios.UsuarioActivoVO[] usuariosActivos(es.pode.adminusuarios.negocio.servicios.ParametroAuditoriaUsuariosVO parametroAuditoriaVO)
    {
        if (parametroAuditoriaVO == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.usuariosActivos(es.pode.adminusuarios.negocio.servicios.ParametroAuditoriaUsuariosVO parametroAuditoriaVO) - 'parametroAuditoriaVO' can not be null");
        }
        try
        {
            return this.handleUsuariosActivos(parametroAuditoriaVO);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.usuariosActivos(es.pode.adminusuarios.negocio.servicios.ParametroAuditoriaUsuariosVO parametroAuditoriaVO)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #usuariosActivos(es.pode.adminusuarios.negocio.servicios.ParametroAuditoriaUsuariosVO)}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.UsuarioActivoVO[] handleUsuariosActivos(es.pode.adminusuarios.negocio.servicios.ParametroAuditoriaUsuariosVO parametroAuditoriaVO)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#getEmailAdmin()
     */
    public java.lang.String[] getEmailAdmin()
    {
        try
        {
            return this.handleGetEmailAdmin();
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.getEmailAdmin()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #getEmailAdmin()}
      */
    protected abstract java.lang.String[] handleGetEmailAdmin()
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#listarTodosUsuarios()
     */
    public es.pode.adminusuarios.negocio.servicios.UsuarioVO[] listarTodosUsuarios()
    {
        try
        {
            return this.handleListarTodosUsuarios();
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.listarTodosUsuarios()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #listarTodosUsuarios()}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.UsuarioVO[] handleListarTodosUsuarios()
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#listarUsuariosInactivos()
     */
    public es.pode.adminusuarios.negocio.servicios.UsuarioVO[] listarUsuariosInactivos()
    {
        try
        {
            return this.handleListarUsuariosInactivos();
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.listarUsuariosInactivos()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #listarUsuariosInactivos()}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.UsuarioVO[] handleListarUsuariosInactivos()
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#activarUsuario(java.lang.Long, java.lang.String)
     */
    public void activarUsuario(java.lang.Long id, java.lang.String admin)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.activarUsuario(java.lang.Long id, java.lang.String admin) - 'id' can not be null");
        }
        if (admin == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.activarUsuario(java.lang.Long id, java.lang.String admin) - 'admin' can not be null");
        }
        try
        {
            this.handleActivarUsuario(id, admin);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.activarUsuario(java.lang.Long id, java.lang.String admin)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #activarUsuario(java.lang.Long, java.lang.String)}
      */
    protected abstract void handleActivarUsuario(java.lang.Long id, java.lang.String admin)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#desactivarUsuario(java.lang.Long, java.lang.String)
     */
    public void desactivarUsuario(java.lang.Long id, java.lang.String admin)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.desactivarUsuario(java.lang.Long id, java.lang.String admin) - 'id' can not be null");
        }
        if (admin == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.desactivarUsuario(java.lang.Long id, java.lang.String admin) - 'admin' can not be null");
        }
        try
        {
            this.handleDesactivarUsuario(id, admin);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.desactivarUsuario(java.lang.Long id, java.lang.String admin)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #desactivarUsuario(java.lang.Long, java.lang.String)}
      */
    protected abstract void handleDesactivarUsuario(java.lang.Long id, java.lang.String admin)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#obtenerListaUsuariosGrupoTrabajo(java.lang.String)
     */
    public java.lang.String[] obtenerListaUsuariosGrupoTrabajo(java.lang.String usuarioGrupoTrabajo)
    {
        if (usuarioGrupoTrabajo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerListaUsuariosGrupoTrabajo(java.lang.String usuarioGrupoTrabajo) - 'usuarioGrupoTrabajo' can not be null");
        }
        try
        {
            return this.handleObtenerListaUsuariosGrupoTrabajo(usuarioGrupoTrabajo);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerListaUsuariosGrupoTrabajo(java.lang.String usuarioGrupoTrabajo)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerListaUsuariosGrupoTrabajo(java.lang.String)}
      */
    protected abstract java.lang.String[] handleObtenerListaUsuariosGrupoTrabajo(java.lang.String usuarioGrupoTrabajo)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#listarGruposTrabajo()
     */
    public es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO[] listarGruposTrabajo()
    {
        try
        {
            return this.handleListarGruposTrabajo();
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.listarGruposTrabajo()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #listarGruposTrabajo()}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO[] handleListarGruposTrabajo()
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#descripcionGrupoTrabajo(java.lang.Long)
     */
    public es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO descripcionGrupoTrabajo(java.lang.Long identificador)
    {
        if (identificador == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.descripcionGrupoTrabajo(java.lang.Long identificador) - 'identificador' can not be null");
        }
        try
        {
            return this.handleDescripcionGrupoTrabajo(identificador);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.descripcionGrupoTrabajo(java.lang.Long identificador)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #descripcionGrupoTrabajo(java.lang.Long)}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO handleDescripcionGrupoTrabajo(java.lang.Long identificador)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#bajaGrupoTrabajo(java.lang.Long[])
     */
    public es.pode.adminusuarios.negocio.servicios.ValidaBajaGrupoTrabajoVO bajaGrupoTrabajo(java.lang.Long[] ids)
    {
        if (ids == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.bajaGrupoTrabajo(java.lang.Long[] ids) - 'ids' can not be null");
        }
        try
        {
            return this.handleBajaGrupoTrabajo(ids);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.bajaGrupoTrabajo(java.lang.Long[] ids)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #bajaGrupoTrabajo(java.lang.Long[])}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.ValidaBajaGrupoTrabajoVO handleBajaGrupoTrabajo(java.lang.Long[] ids)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#modificarGrupoTrabajo(es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO)
     */
    public java.lang.Long modificarGrupoTrabajo(es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO grupoTrabajo)
    {
        if (grupoTrabajo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.modificarGrupoTrabajo(es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO grupoTrabajo) - 'grupoTrabajo' can not be null");
        }
        try
        {
            return this.handleModificarGrupoTrabajo(grupoTrabajo);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.modificarGrupoTrabajo(es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO grupoTrabajo)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #modificarGrupoTrabajo(es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO)}
      */
    protected abstract java.lang.Long handleModificarGrupoTrabajo(es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO grupoTrabajo)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#getEmailPublicadores()
     */
    public java.lang.String[] getEmailPublicadores()
    {
        try
        {
            return this.handleGetEmailPublicadores();
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.getEmailPublicadores()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #getEmailPublicadores()}
      */
    protected abstract java.lang.String[] handleGetEmailPublicadores()
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#obtenerUsuariosGrupo(java.lang.Long)
     */
    public java.lang.Boolean obtenerUsuariosGrupo(java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerUsuariosGrupo(java.lang.Long id) - 'id' can not be null");
        }
        try
        {
            return this.handleObtenerUsuariosGrupo(id);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerUsuariosGrupo(java.lang.Long id)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerUsuariosGrupo(java.lang.Long)}
      */
    protected abstract java.lang.Boolean handleObtenerUsuariosGrupo(java.lang.Long id)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#obtenerUsuariosGrupoTrabajo(java.lang.Long)
     */
    public java.lang.Boolean obtenerUsuariosGrupoTrabajo(java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerUsuariosGrupoTrabajo(java.lang.Long id) - 'id' can not be null");
        }
        try
        {
            return this.handleObtenerUsuariosGrupoTrabajo(id);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerUsuariosGrupoTrabajo(java.lang.Long id)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerUsuariosGrupoTrabajo(java.lang.Long)}
      */
    protected abstract java.lang.Boolean handleObtenerUsuariosGrupoTrabajo(java.lang.Long id)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#existeNombreTrabajo(java.lang.String, java.lang.Long)
     */
    public java.lang.Boolean existeNombreTrabajo(java.lang.String nombre, java.lang.Long id)
    {
        if (nombre == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.existeNombreTrabajo(java.lang.String nombre, java.lang.Long id) - 'nombre' can not be null");
        }
        if (id == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.existeNombreTrabajo(java.lang.String nombre, java.lang.Long id) - 'id' can not be null");
        }
        try
        {
            return this.handleExisteNombreTrabajo(nombre, id);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.existeNombreTrabajo(java.lang.String nombre, java.lang.Long id)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #existeNombreTrabajo(java.lang.String, java.lang.Long)}
      */
    protected abstract java.lang.Boolean handleExisteNombreTrabajo(java.lang.String nombre, java.lang.Long id)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#altaGrupoTrabajo(es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO)
     */
    public java.lang.Long altaGrupoTrabajo(es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO grupoTrabajo)
    {
        if (grupoTrabajo == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.altaGrupoTrabajo(es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO grupoTrabajo) - 'grupoTrabajo' can not be null");
        }
        try
        {
            return this.handleAltaGrupoTrabajo(grupoTrabajo);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.altaGrupoTrabajo(es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO grupoTrabajo)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #altaGrupoTrabajo(es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO)}
      */
    protected abstract java.lang.Long handleAltaGrupoTrabajo(es.pode.adminusuarios.negocio.servicios.GrupoTrabajoVO grupoTrabajo)
        throws java.lang.Exception;

    /**
     * @see es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService#obtenerUsuarioConOpenId(java.lang.String)
     */
    public es.pode.adminusuarios.negocio.servicios.UsuarioVO obtenerUsuarioConOpenId(java.lang.String openIdUrl)
    {
        if (openIdUrl == null)
        {
            throw new IllegalArgumentException(
                "es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerUsuarioConOpenId(java.lang.String openIdUrl) - 'openIdUrl' can not be null");
        }
        try
        {
            return this.handleObtenerUsuarioConOpenId(openIdUrl);
        }
        catch (Throwable th)
        {
            throw new es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosServiceException(
                "Error performing 'es.pode.adminusuarios.negocio.servicios.SrvAdminUsuariosService.obtenerUsuarioConOpenId(java.lang.String openIdUrl)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #obtenerUsuarioConOpenId(java.lang.String)}
      */
    protected abstract es.pode.adminusuarios.negocio.servicios.UsuarioVO handleObtenerUsuarioConOpenId(java.lang.String openIdUrl)
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return es.pode.PrincipalStore.get();
    }
}